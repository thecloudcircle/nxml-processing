
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Front Neurorobot</journal-id><journal-id journal-id-type="iso-abbrev">Front Neurorobot</journal-id><journal-id journal-id-type="publisher-id">Front. Neurorobot.</journal-id><journal-title-group><journal-title>Frontiers in Neurorobotics</journal-title></journal-title-group><issn pub-type="epub">1662-5218</issn><publisher><publisher-name>Frontiers Media S.A.</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">30983987</article-id><article-id pub-id-type="pmc">6448581</article-id><article-id pub-id-type="doi">10.3389/fnbot.2019.00009</article-id><article-categories><subj-group subj-group-type="heading"><subject>Neuroscience</subject><subj-group><subject>Original Research</subject></subj-group></subj-group></article-categories><title-group><article-title>Body Randomization Reduces the Sim-to-Real Gap for Compliant Quadruped Locomotion</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Vandesompele</surname><given-names>Alexander</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="c001"><sup>*</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/648149/overview"/></contrib><contrib contrib-type="author"><name><surname>Urbain</surname><given-names>Gabriel</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/352669/overview"/></contrib><contrib contrib-type="author"><name><surname>Mahmud</surname><given-names>Hossain</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author"><name><surname>wyffels</surname><given-names>Francis</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/422957/overview"/></contrib><contrib contrib-type="author"><name><surname>Dambre</surname><given-names>Joni</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/149953/overview"/></contrib></contrib-group><aff id="aff1"><sup>1</sup><institution>AIRO, Electronics and Information Systems Department, Ghent University-Imec</institution>, <addr-line>Ghent</addr-line>, <country>Belgium</country></aff><aff id="aff2"><sup>2</sup><institution>fortiss GmbH</institution>, <addr-line>Munich</addr-line>, <country>Germany</country></aff><author-notes><fn fn-type="edited-by"><p>Edited by: Hong Qiao, University of Chinese Academy of Sciences (UCAS), China</p></fn><fn fn-type="edited-by"><p>Reviewed by: Xue Wen Rong, Shandong University, China; Takeshi Kano, Tohoku University, Japan</p></fn><corresp id="c001">*Correspondence: Alexander Vandesompele <email>alexander.vandesompele@ugent.be</email></corresp></author-notes><pub-date pub-type="epub"><day>28</day><month>3</month><year>2019</year></pub-date><pub-date pub-type="collection"><year>2019</year></pub-date><volume>13</volume><elocation-id>9</elocation-id><history><date date-type="received"><day>26</day><month>11</month><year>2018</year></date><date date-type="accepted"><day>05</day><month>5</month><year>2019</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2019 Vandesompele, Urbain, Mahmud, wyffels and Dambre.</copyright-statement><copyright-year>2019</copyright-year><copyright-holder>Vandesompele, Urbain, Mahmud, wyffels and Dambre</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p></license></permissions><abstract><p>Designing controllers for compliant, underactuated robots is challenging and usually requires a learning procedure. Learning robotic control in simulated environments can speed up the process whilst lowering risk of physical damage. Since perfect simulations are unfeasible, several techniques are used to improve transfer to the real world. Here, we investigate the impact of randomizing body parameters during learning of CPG controllers in simulation. The controllers are evaluated on our physical quadruped robot. We find that body randomization in simulation increases chances of finding gaits that function well on the real robot.</p></abstract><kwd-group><kwd>compliant robotics</kwd><kwd>quadruped control</kwd><kwd>knowledge transfer</kwd><kwd>simulation-reality gap</kwd><kwd>dynamics randomization</kwd></kwd-group><funding-group><award-group><funding-source id="cn001">Universiteit Gent<named-content content-type="fundref-id">10.13039/501100004385</named-content></funding-source></award-group></funding-group><counts><fig-count count="8"/><table-count count="2"/><equation-count count="7"/><ref-count count="28"/><page-count count="9"/><word-count count="5477"/></counts></article-meta></front><body><sec sec-type="intro" id="s1"><title>1. Introduction</title><p>Compliant robots can provide many benefits over rigid robots (Pfeifer and Iida, <xref rid="B20" ref-type="bibr">2007</xref>). They are more versatile and posses an inherently greater capacity to deal with different environments or with changing body properties due to wear and tear. Additionally, they can be more energy-efficient, safer for humans and less costly. The drawback is that they are generally more difficult to control than rigid robots.</p><p>Currently, state-of-the-art robots are usually made of rigid components (e.g., Raibert et al., <xref rid="B22" ref-type="bibr">2008</xref>; Barasuol, <xref rid="B1" ref-type="bibr">2013</xref>; Park et al., <xref rid="B17" ref-type="bibr">2017</xref>). The rigid and well characterized body parts allow for controllers to be explicitly designed, based on accurate knowledge of the robot's physical properties. There are, however, some severe limitations to this approach. It is prohibitively difficult to design controllers that can adapt to a wide variety of environments and to the changing body properties due to wear and tear over the robot's lifetime. Well characterized and reliable components also come at a high cost.</p><p>The same approach cannot be applied to compliant robots, as their body parts can interact highly non-linearly with each other and the robots environment. This makes it difficult to accurately model their physical properties. Machine learning approaches are promising to the development of adaptive controllers for compliant robots. The combination of machine learning and compliant robotics may lead to robots moving out of highly standardized environments and into daily life at a cost that is affordable for consumers.</p><p>In the field of robot locomotion, machine learning techniques have been increasingly successful in developing adaptive robot controllers in simulation. Especially in the field of deep reinforcement learning, there have been some significant improvements recently (Heess et al., <xref rid="B12" ref-type="bibr">2017</xref>; Peng et al., <xref rid="B18" ref-type="bibr">2017</xref>). These controllers are usually learned in simulation and not on the physical robot. Learning only on the robot is challenging for multiple reasons, it is usually time-costly and unoptimized controllers may damage the robot. While it is impossible to simulate the real world, it is desirable to optimize controllers as far as possible before training on the physical robot. Particularly, in the case of a locomotion controller, it is desirable to start on the physical robot with a stable gait to prevent damage.</p><sec><title>1.1. Related Work</title><p>The transfer of knowledge obtained in one domain to a new domain is important to speed up learning. Knowledge transfer can be applied across tasks, where knowledge from a learned task is utilized to speed up learning a new task by the same model (Hamer et al., <xref rid="B10" ref-type="bibr">2013</xref>; Um et al., <xref rid="B26" ref-type="bibr">2014</xref>). For instance, transfer of a quadruped gait learned in a specific environment, speeds up learning in other environments (Degrave et al., <xref rid="B4" ref-type="bibr">2015</xref>). Knowledge transfer can also be applied across models, for instance if knowledge obtained by a first robot is utilized by a second robot (Gupta et al., <xref rid="B9" ref-type="bibr">2017</xref>) or if a model is trained in simulation and then applied to a physical robot (Peng et al., <xref rid="B19" ref-type="bibr">2018</xref>). However, the transfer of knowledge from simulation to reality has proven challenging for locomotion controllers due to discrepancies between simulation and reality, the so-called <italic>simulation-reality gap</italic> (Lipson and Pollack, <xref rid="B15" ref-type="bibr">2000</xref>). This gap can easily cause a controller that is optimized in simulation to fail in the real world. Different methods have been developed to decrease the gap, they can generally be divided into two categories: (i) improving simulation accuracy and (ii) improving controller robustness.</p><p><italic>System identification</italic> improves simulation accuracy by tuning the simulation parameters to match the behavior of the physical system. In the <italic>embodiment theory</italic> framework (F&#x000fc;chslin et al., <xref rid="B7" ref-type="bibr">2013</xref>), the relation between environment, body and controller is described from a dynamical view point, where each entity can be modeled as a non-linear filter. Improving the simulator accuracy is then reduced to matching the transfer function of these filters. Urbain et al. (<xref rid="B27" ref-type="bibr">2018</xref>) provides an automated and parametrized calibration method that improves simulation accuracy by treating both the physical robot and its parametrized model as black box dynamical systems. It optimizes the similarity between the transfer functions by matching their sensor response to a given actuation input.</p><p>Similarly, simulation accuracy can be improved with machine learning techniques. For instance, in computer vision tasks (e.g., Taigman et al., <xref rid="B23" ref-type="bibr">2016</xref>; Bousmalis et al., <xref rid="B3" ref-type="bibr">2017</xref>) and visually guided robotic grasping tasks (Bousmalis et al., <xref rid="B2" ref-type="bibr">2018</xref>), synthetic data has been augmented with generative adversarial networks (GANs). The augmentation improves the realism of the synthetic data and hence results in better models.</p><p>Another approach for minimizing the simulation-reality gap is by increasing robustness of the learned controllers. This can be achieved by perturbing the simulated robot during learning or by adding noise to the simulated environment (<italic>domain randomization</italic>, Jakobi, <xref rid="B13" ref-type="bibr">1998</xref>; Tobin et al., <xref rid="B25" ref-type="bibr">2017</xref>). The assumption is that if the model is trained on a sufficiently broad range of simulated environments, the real world will seem like just another variation to the model. Similarly, <italic>dynamics randomization</italic> is achieved by randomizing physical properties. Tan et al. (<xref rid="B24" ref-type="bibr">2018</xref>) found that dynamics randomization decreased performance but increased stability of a non-compliant quadruped robot. In Mordatch et al. (<xref rid="B16" ref-type="bibr">2015</xref>), optimization on ensembles of models instead of only the nominal model enables functional gaits on a small humanoid. In Peng et al. (<xref rid="B19" ref-type="bibr">2018</xref>), dynamics randomization was necessary for sim-to-real transfer of a robotic arm controller.</p></sec><sec><title>1.2. Our Approach</title><p>Whereas, Tan et al. (<xref rid="B24" ref-type="bibr">2018</xref>) observed the benefit of dynamics randomization for quadrupedal gait stability, the platform used is a stable, commercial robot used in a non-compliant manner. Passive compliance and underactuation are considered important for robots to cope with a broad range of real-world environments (Pfeifer et al., <xref rid="B21" ref-type="bibr">2012</xref>; Laschi and Cianchetti, <xref rid="B14" ref-type="bibr">2014</xref>). However, the difficulty of modeling the robot accurately increases with compliance and underactuation as well as with the use of low-cost components, exacerbating the simulation-reality gap. In this work we investigate the impact of dynamics randomization on controller robustness for compliant quadruped locomotion.</p><p>Measuring the robots physical properties does not necessarily translate into a good model. Especially with compliant robots, the dynamics of the model may be different from the physical robot. Therefor, we use a calibration method that focuses on replicating the dynamics, as described in a previous paper Urbain et al. (<xref rid="B27" ref-type="bibr">2018</xref>).</p><p>Using the calibrated model, we investigate if and how body randomization reduces the simulation-reality gap. For this purpose, we restrain ourselves to a straightforward controller optimization: a parametrized <italic>central pattern generator</italic> (CPG) optimized with an evolutionary strategy (the <italic>CMA-ES</italic> algorithm). The optimization is repeated for varying degrees of body randomization and subsequently tested on the physical robot. The randomization is applied to body parameters critical for the robot dynamics: mass distribution, spring stiffness and foot friction.</p><p>We observed that randomization of body parameters on average improves the stability of gaits when applied to the physical robot. Additionally, the used method is relatively straightforward to implement.</p></sec></sec><sec sec-type="materials and methods" id="s2"><title>2. Materials and Methods</title><sec><title>2.1. Robot</title><p>The robot used for this paper is an update of the Tigrillo robot (Willems et al., <xref rid="B28" ref-type="bibr">2017</xref>) as described by Urbain et al. (<xref rid="B27" ref-type="bibr">2018</xref>) (<xref ref-type="fig" rid="F1">Figure 1A</xref>). Tigrillo is a low-cost platform built with off-the-shelf components and a structure laser cut out of ABS. It is developed for researching compliance in quadrupeds and has underactuated legs. Each hip joint is actuated with a Dynamixel RX-24F servomotor. The knee joints are passive compliant due to mounted springs (<xref ref-type="fig" rid="F1">Figure 1B</xref>), which can be replaced to tune the passive compliance properties. The angle of the passive joints is measured with Hall sensors and rare-earth magnets placed on respectively the upper and lower leg parts. The Hall sensor will output a voltage between 0 and 5 V proportionally to the magnetic field. As the sensed magnetic field varies non-linearly with the distance to the magnet, the sensor provides us with non-linear body feedback. The total weight is 950 g and the robot fits in a box of 30 &#x000d7; 18 cm. The front legs are 15 cm apart and the hind legs 11 cm. A mounted <italic>Raspberry Pi 3</italic> allows wireless control of the robot from a remote computer. Actuator and sensor communication runs on the <italic>Robotic Operating System (ROS</italic><xref ref-type="fn" rid="fn0001"><sup>1</sup></xref><italic>)</italic>.</p><fig id="F1" position="float"><label>Figure 1</label><caption><p><bold>(A)</bold> The Tigrillo robot used in this paper (left) and its parametrized model in Gazebo (right). <bold>(B)</bold> Zoom on a leg with a spring loaded on the knee joint. M denotes the magnet, H denotes the Hall sensor.</p></caption><graphic xlink:href="fnbot-13-00009-g0001"/></fig></sec><sec><title>2.2. Calibration</title><p>The goal of the calibration process is to tune a simulated model to increase similarity in dynamics of the model and robot. The Tigrillo platform has a parametric model (<xref ref-type="fig" rid="F1">Figure 1</xref>) that is simulated in the <italic>Neurorobotics platform</italic> (NRP) (Falotico et al., <xref rid="B6" ref-type="bibr">2017</xref>), using Gazebo configured with ODE (Drumwright et al., <xref rid="B5" ref-type="bibr">2010</xref>) physics engine. The model is calibrated using the calibration method detailed by Urbain et al. (<xref rid="B27" ref-type="bibr">2018</xref>). This method is an automated procedure in which both the model and real robot are considered sensor-to-actuator transfer functions. As the model is parametrized, its transfer function can be adapted by tuning the parameters.</p><p>We start with learning the sensor-to-actuator transfer function from the physical robot by recording the Hall sensor activity in response to an actuation pattern <italic>a</italic>(<italic>t</italic>). The actuation pattern is chosen to be a succession of sine waves at three different frequencies (0.4, 0.8, and 1.6 Hz). In order to calibrate the model such that it behaves similarly to the real robot during actual gaits, the sine waves are also used in anti-phase between the front and hind legs, creating bounding-like movement. Hence, in total six actuation patterns are used in the calibration procedure. To reduce sensor noise, an average (N = 5) of multiple recordings is used as the target signal <italic>y</italic>. <xref ref-type="fig" rid="F3">Figure 3</xref> shows the actuation and corresponding sensor signals for the legs of the physical robot. The high frequency event in the actuation signal for the front legs at the transition from high to low frequency (15th s) is an artifact caused by the signal generator. It does not significantly impact the calibration procedure as it is an event of short duration.</p><p>Next, we want to tune the body parameters of the model to achieve a similar sensor-to-actuator transfer function. We start with an uncalibrated model based on the measured physical properties (see diagram in <xref ref-type="fig" rid="F2">Figure 2</xref>). Then, <italic>covariance matrix adaptation evolutionary strategy (CMA-ES)</italic> is applied for the parameter search. The included parameters <italic>&#x003b8;</italic> are those observed critical for the dynamic behavior and are listed in <xref rid="T1" ref-type="table">Table 1</xref>. The indices <italic>f</italic> and <italic>h</italic> refer to the front and hind part of the body, respectively. Parameter <italic>&#x003b8;</italic><sub><italic>m</italic></sub> is the mass of the main body part on the front and hind side, <italic>&#x003b8;</italic><sub><italic>&#x003bc;</italic></sub> is the friction coefficient of the feet, and <italic>&#x003b8;</italic><sub><italic>k</italic></sub> the spring constant indicating spring stiffness. The contact depth <italic>&#x003b8;</italic><sub><italic>d</italic></sub> is the minimum depth before a contact correction impulse is applied. Parameter <italic>&#x003b8;</italic><sub><italic>c</italic></sub> is the compression tolerance, which allows for the minimum angle of the passive joint to be smaller than the spring length, simulating spring compression.</p><fig id="F2" position="float"><label>Figure 2</label><caption><p>Diagram of the calibration procedure. CMA-ES optimization minimizes the difference between the sensor recording from the robot and the model (<italic>y</italic>(<italic>t</italic>) and <italic>y</italic><sup><italic>&#x003b8;</italic></sup>(<italic>t</italic>), respectively), by tuning the model parameters (<inline-formula><mml:math id="M1"><mml:mover accent="true"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover></mml:math></inline-formula>). Figure adapted from Urbain et al. (<xref rid="B27" ref-type="bibr">2018</xref>).</p></caption><graphic xlink:href="fnbot-13-00009-g0002"/></fig><fig id="F3" position="float"><label>Figure 3</label><caption><p>Characterization of the robot dynamics. The robot was actuated with a pattern of sine waves <bold>(top row)</bold>. The front legs <bold>(left)</bold> and hind legs <bold>(right)</bold> were actuated in phase firstly and in antiphase subsequently. The bottom rows show the Hall sensor readout in response to the actuation pattern for the front and hind legs (<bold>left and right</bold>, respectively). An average of 5 trials was used as target signal during model calibration.</p></caption><graphic xlink:href="fnbot-13-00009-g0003"/></fig><table-wrap id="T1" position="float"><label>Table 1</label><caption><p>Parameters included in the calibration procedure with <italic>CMA-ES</italic>.</p></caption><table frame="hsides" rules="groups"><thead><tr><th valign="top" align="left" rowspan="1" colspan="1"><bold>Parameter</bold></th><th valign="top" align="left" rowspan="1" colspan="1"><bold>Description</bold></th><th valign="top" align="center" rowspan="1" colspan="1"><bold>Range</bold></th><th valign="top" align="center" rowspan="1" colspan="1"><bold>Unit</bold></th></tr></thead><tbody><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>mf</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Front mass</td><td valign="top" align="center" rowspan="1" colspan="1">[0.1, 0.5]</td><td valign="top" align="center" rowspan="1" colspan="1">kg</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>mh</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Hind mass</td><td valign="top" align="center" rowspan="1" colspan="1">[0.1, 0.5]</td><td valign="top" align="center" rowspan="1" colspan="1">kg</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub>&#x003bc;<italic>f</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Front feet friction coefficient</td><td valign="top" align="center" rowspan="1" colspan="1">[10<sup>&#x02212;3</sup>, 2.]</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>NA</italic></td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub>&#x003bc;<italic>h</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Hind feet friction coefficient</td><td valign="top" align="center" rowspan="1" colspan="1">[10<sup>&#x02212;3</sup>, 2.]</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>NA</italic></td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>df</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Front feet contact depth</td><td valign="top" align="center" rowspan="1" colspan="1">[10<sup>&#x02212;4</sup>, 10<sup>&#x02212;2</sup>]</td><td valign="top" align="center" rowspan="1" colspan="1">m</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>dh</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Hind feet contact depth</td><td valign="top" align="center" rowspan="1" colspan="1">[10<sup>&#x02212;4</sup>, 10<sup>&#x02212;2</sup>]</td><td valign="top" align="center" rowspan="1" colspan="1">m</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>kf</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Front legs spring constant</td><td valign="top" align="center" rowspan="1" colspan="1">[50, 10<sup>3</sup>]</td><td valign="top" align="center" rowspan="1" colspan="1">N/m</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>kh</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Hind legs spring constant</td><td valign="top" align="center" rowspan="1" colspan="1">[50, 10<sup>3</sup>]</td><td valign="top" align="center" rowspan="1" colspan="1">N/m</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>cf</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Front compression tolerance</td><td valign="top" align="center" rowspan="1" colspan="1">[0.92, 0.98]</td><td valign="top" align="center" rowspan="1" colspan="1">mm</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1"><italic>&#x003b8;</italic><sub><italic>ch</italic></sub></td><td valign="top" align="left" rowspan="1" colspan="1">Hind compression tolerance</td><td valign="top" align="center" rowspan="1" colspan="1">[0.7, 1.2]</td><td valign="top" align="center" rowspan="1" colspan="1">mm</td></tr></tbody></table></table-wrap><p>A more detailed description of the <italic>CMA-ES</italic> algorithm can be found in Hansen (<xref rid="B11" ref-type="bibr">2006</xref>). It is an evolutionary algorithm that samples solutions from a multi-variate normal distribution. Every iteration, the mean and the covariance matrix of the distribution are updated. The mean is updated to increase the likelihood of previously successful solutions. The covariance matrix is updated to increase the likelihood of a previously successful search step. <italic>CMA-ES</italic> is well suited for a search space with multiple local minima. It requires few initial parameters and doesn't require derivation of the search space.</p><p><italic>CMA-ES</italic> will minimize the error <italic>&#x003b5;</italic>(<italic>&#x003b8;</italic>), here chosen to be the root mean square error (<italic>RMSE</italic>) with <italic>y</italic> being the target sensor signal as recorded on the robot and &#x00177; the sensor signal recorded in simulation:</p><disp-formula id="E1"><label>(1)</label><mml:math id="M2"><mml:mtable class="eqnarray" columnalign="right center left"><mml:mtr><mml:mtd><mml:mover accent="true"><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mrow><mml:mo class="qopname">argmin</mml:mo></mml:mrow><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mi>&#x003b5;</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>&#x003b8;</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula><disp-formula id="E2"><label>(2)</label><mml:math id="M3"><mml:mrow><mml:mi>&#x003b5;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003b8;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>&#x003a3;</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mover accent="true"><mml:mi>y</mml:mi><mml:mo>^</mml:mo></mml:mover><mml:mo>&#x02212;</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="true">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mi>n</mml:mi></mml:mfrac></mml:mrow></mml:msqrt></mml:mrow></mml:math></disp-formula></sec><sec><title>2.3. Gait Search</title><sec><title>2.3.1. Central Pattern Generator</title><p>With the calibrated model, a controller is optimized in the same simulation environment. The controller is modeled by a parametrized CPG, based on the open-loop CPG introduced by Gay et al. (<xref rid="B8" ref-type="bibr">2013</xref>). The CPG is described by three equations:</p><disp-formula id="E3"><label>(3)</label><mml:math id="M4"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>&#x002d9;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mi>&#x003b3;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>&#x003bc;</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msup><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mi>r</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mover accent="true"><mml:mi>&#x003d5;</mml:mi><mml:mo>&#x002d9;</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mi>&#x003c9;</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>&#x003bb;</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mtext>cos</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula><p>Where <italic>r</italic> describes the radius of the oscillator and <italic>&#x003d5;</italic> the current phase. Both are used to calculate the actual control value <italic>&#x003bb;</italic> in degrees. <italic>&#x003bc;</italic> is the target amplitude of the oscillator and &#x003b3; is a positive gain that defines the convergence speed of the radius to the target amplitude. &#x003c9; is the radial frequency of the oscillator and <italic>o</italic> the offset. <italic>&#x003d5;</italic><sub><italic>L</italic></sub> is a filter applied on the phase of the oscillator, the formula of which is different for the swing and stance phase of the control as determined by the duty factor (<italic>d</italic>):</p><disp-formula id="E4"><label>(4)</label><mml:math id="M5"><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mi>L</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>d</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if&#x02003;</mml:mtext><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0003c;</mml:mo><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mfrac><mml:mrow><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:math></disp-formula><disp-formula id="E6"><mml:math id="M6"><mml:mtext>and&#x02009;</mml:mtext><mml:msub><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mtext>&#x02009;</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mtext>mod&#x02009;</mml:mtext><mml:mn>2</mml:mn><mml:mi>&#x003c0;</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:math></disp-formula><p>The Tigrillo platform has four actuated joints that are controlled by four phase-coupled CPGs. One leg, the front left, is chosen as reference leg and three phase offset (<italic>po</italic>) parameters describe the phase difference of the remaining 3 legs to the reference leg. This is implemented by adding a term to the formula for the phase (<italic>&#x003d5;</italic>) in Equation (3). For instance, for the coupling between the front left and front right oscillators:</p><disp-formula id="E7"><label>(5)</label><mml:math id="M7"><mml:mtable class="eqnarray" columnalign="right center left"><mml:mtr><mml:mtd><mml:mover accent="true"><mml:mrow><mml:msub><mml:mrow><mml:mi>&#x003d5;</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>.</mml:mo></mml:mover></mml:mtd><mml:mtd><mml:mo>=</mml:mo><mml:mi>&#x003c9;</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>&#x003d5;</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003d5;</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:msub><mml:mrow><mml:mi>o</mml:mi></mml:mrow><mml:mrow><mml:mi>f</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula><p>where <italic>w</italic><sub><italic>fr</italic></sub> is the coupling strength.</p></sec><sec><title>2.3.2. Gait Search With CMA-ES</title><p>The CMA-ES algorithm is used again to optimize the CPG controller. The search space consist of a subset of the CPG parameters. To enforce a walking gait, the search space is constrained to the set of parameters as detailed in <xref rid="T2" ref-type="table">Table 2</xref>. The walking gait is characterized by a phase offset among the legs that results in asymmetry along the transverse axis. Additionally, the Tigrillo robot has no feet retraction mechanism in its underactuated legs. Consequently, maintaining balance during a walking-like gait presents a challenge for this platform. The frequency &#x003c9; is fixed at 2&#x003c0; radian/s (1 Hz).</p><table-wrap id="T2" position="float"><label>Table 2</label><caption><p>Parameters and their ranges included in the <italic>CMA-ES</italic> optimization for a walking gait.</p></caption><table frame="hsides" rules="groups"><thead><tr><th valign="top" align="left" rowspan="1" colspan="1"><bold>Parameter</bold></th><th valign="top" align="center" rowspan="1" colspan="1"><bold>Symbol</bold></th><th valign="top" align="center" rowspan="1" colspan="1"><bold>Range</bold></th><th valign="top" align="center" rowspan="1" colspan="1"><bold>Unit</bold></th></tr></thead><tbody><tr><td valign="top" align="left" rowspan="1" colspan="1">Front amplitude</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>&#x003bc;</italic><sub><italic>f</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[45,&#x02002;140]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Hind amplitude</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>&#x003bc;</italic><sub><italic>h</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[45,&#x02002;140]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Front duty cycle</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>d</italic><sub><italic>f</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[0.15,&#x02002;0.85]</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>NA</italic></td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Hind duty cycle</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>d</italic><sub><italic>h</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[0.15,&#x02002;0.85]</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>NA</italic></td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Front offset</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>o</italic><sub><italic>f</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[-45,&#x02002;10]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Hind offset</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>o</italic><sub><italic>h</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[-45,&#x02002;-10]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Front right phase offset</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>po</italic><sub><italic>fr</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[165,&#x02002;195]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Hind left phase offset</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>po</italic><sub><italic>hl</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[255,&#x02002;285]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Hind right phase offset</td><td valign="top" align="center" rowspan="1" colspan="1"><italic>po</italic><sub><italic>hr</italic></sub></td><td valign="top" align="center" rowspan="1" colspan="1">[75,&#x02002;105]</td><td valign="top" align="center" rowspan="1" colspan="1">degrees</td></tr></tbody></table></table-wrap><p><italic>CMA-ES</italic> as described by Hansen (<xref rid="B11" ref-type="bibr">2006</xref>) was used to perform the optimization, but with a larger population size (<italic>N</italic> = 20) to increase chance of avoiding local optima. Each solution is evaluated for 10 s of simulation time. As score function the distance of the model from origin after 10 s is used. After convergence of the <italic>CMA-ES</italic> algorithm, the best performing individual of the final generation is chosen as the final solution. Hence each optimization resulted in one set of CPG parameters that corresponds to a gait.</p><p>To investigate the effect of randomizing body morphology on transferability, <italic>CMA-ES</italic> optimizations were performed with varying levels of randomization of body properties deemed critical for the gait dynamics: <italic>&#x003b8;</italic><sub><italic>k</italic></sub>, <italic>&#x003b8;</italic><sub><italic>&#x003bc;</italic></sub>, and <italic>&#x003b8;</italic><sub><italic>m</italic></sub>. The parameters are sampled from a Gaussian distribution with the mean value <italic>&#x003bc;</italic> taken from the calibrated model and the randomization parameter <italic>&#x003c8;</italic> affecting the standard deviation &#x003c3; of the Gaussian distribution in a parameter dependent fashion (see <xref ref-type="fig" rid="F4">Figure 4</xref> for an example). Given <italic>&#x003c8;</italic>, the standard deviation is obtained by the following equations, for the parameters <italic>&#x003b8;</italic><sub><italic>k</italic></sub> and <italic>&#x003b8;</italic><sub><italic>m</italic></sub>:</p><disp-formula id="E8"><label>(6)</label><mml:math id="M8"><mml:mtable class="eqnarray" columnalign="right center left"><mml:mtr><mml:mtd><mml:mi>&#x003c3;</mml:mi><mml:mo>=</mml:mo><mml:mi>&#x003c8;</mml:mi><mml:mi>&#x003bc;</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula><p>And, for the parameters <italic>&#x003b8;</italic><sub><italic>&#x003bc;</italic></sub>:</p><disp-formula id="E9"><label>(7)</label><mml:math id="M9"><mml:mtable class="eqnarray" columnalign="right center left"><mml:mtr><mml:mtd><mml:mi>&#x003c3;</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mi>&#x003c8;</mml:mi><mml:mi>&#x003bc;</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula><p>For <italic>&#x003b8;</italic><sub><italic>m</italic></sub>, the mass of the main front body part is sampled from the Gaussian distribution and the mass of the main hind body part is adapted such that the total mass remains constant, varying only the mass distribution. <italic>&#x003b8;</italic><sub><italic>k</italic></sub> and <italic>&#x003b8;</italic><sub><italic>&#x003bc;</italic></sub> are sampled independently per leg, hence each individual has 9 variable parameters. Because the noisy body parameters are sampled from a distribution, it is desirable to evaluate a given controller on multiple independent trials. It was observed that the average score over 5 trials gave a reliable estimate.</p><fig id="F4" position="float"><label>Figure 4</label><caption><p>Randomization level <italic>&#x003c8;</italic> affects the sampling distribution of the body parameters. <italic>&#x003c8;</italic> determines the standard deviation (&#x003c3;, colored dashed lines) of the Gaussian distribution with mean <italic>&#x003bc;</italic> (black dashed line). In this example for parameter <italic>&#x003b8;</italic><sub><italic>k</italic></sub>, &#x003c3; = <italic>&#x003c8;</italic>
<sup>*</sup>
<italic>&#x003bc;</italic>, with <italic>&#x003bc;</italic> = 151<italic>N</italic>/<italic>m</italic> being the spring stiffness of the calibrated model front legs.</p></caption><graphic xlink:href="fnbot-13-00009-g0004"/></fig></sec></sec><sec><title>2.4. Evaluation Methods</title><p>In all experiments performance and stability are measured. Stability is measured as the fraction of all trials in which the model or robot has fallen. In simulation, performance is measured as distance between the original and final position of the model after a short time period (10 s unless mentioned otherwise). For the physical robot, the robot is tracked with a Kinect camera and performance is measured as distance traveled by the robot after a short time period (10 s unless mentioned otherwise).</p></sec></sec><sec sec-type="results" id="s3"><title>3. Results</title><sec><title>3.1. Calibration</title><p>The aim of the calibration is to tune the robot model to achieve a sensor response to an actuation signal that is similar to that of the physical robot. <xref ref-type="fig" rid="F5">Figure 5</xref> shows the response of the model pre- and post-calibration. The calibration resulted in a model that approximates the dynamics of the physical robot. In line with the hypothesis of body randomization, we do not deem it beneficial to fine tune calibration to the greatest extent possible. Even with an optimally calibrated model, the simulation-reality gap may remain. Rather, we try to bridge the gap by searching for a gait that works on a variety of body morphologies. The calibrated model serves as a default morphology, on which variations are applied.</p><fig id="F5" position="float"><label>Figure 5</label><caption><p>Model calibration. The model was optimized to match the robot sensor response (&#x0201c;target&#x0201d;, black). Sensor values after calibration (red, RMSE= 0.245) match better than before calibration (blue, RMSE = 0.741). Signals shown are for the hind right leg.</p></caption><graphic xlink:href="fnbot-13-00009-g0005"/></fig></sec><sec><title>3.2. Gait Optimization in Simulation</title><p>To evaluate the effect of body randomization on the simulation-reality gap, gait optimizations with different levels of randomization were performed (parameter <italic>&#x003c8;</italic> ranging from 0 to 0.4). A higher level of randomization means that the body parameters were sampled from a broader distribution. Since the <italic>CMA-ES</italic> optimization does not guarantee an optimal convergence, experiments were repeated 5 times.</p><p>For each optimization, the solution was chosen as best performing individual of the final generation. Subsequently, the performance of each solution was tested in simulation. The controller, trained with a specific level of <italic>&#x003c8;</italic>, was tested on varying degrees of randomization (<italic>&#x003c8;</italic><sub><italic>test</italic></sub>). For each level of <italic>&#x003c8;</italic>, the procedure was repeated 5 times, <xref ref-type="fig" rid="F6">Figure 6</xref>, Left presents the average performance. Performance of solutions trained on the nominal body (without body randomization, <italic>&#x003c8;</italic> = 0) is higher if tested on bodies with no or limited randomization (<italic>&#x003c8;</italic><sub><italic>test</italic></sub> &#x0003c; 0.3) and converges with other solutions in the higher randomization regimes (<italic>&#x003c8;</italic><sub><italic>test</italic></sub> &#x02265; 0.3). The variance of these solutions however is higher, reflecting the performance variation both between solutions and between trials of the same solution. Solutions trained with randomization (<italic>&#x003c8;</italic> &#x02265; 0.1) have a lower score when tested without randomization (<italic>&#x003c8;</italic><sub><italic>test</italic></sub> = 0), because they have developed more prudent locomotion during training as the randomization prevents overfitting of the controller to the dynamics of the simulation environment and model.</p><fig id="F6" position="float"><label>Figure 6</label><caption><p>Gait evaluation in simulation. For each level of <italic>&#x003c8;</italic>, 5 optimizations were performed resulting in 5 controllers. Each controller was tested in 30 trials. <bold>Left:</bold> average distance to origin (in 20 s, <italic>N</italic> = 150). <bold>Right:</bold> observed frequency of falling over, normalized.</p></caption><graphic xlink:href="fnbot-13-00009-g0006"/></fig><p><xref ref-type="fig" rid="F6">Figure 6</xref>, Right plots the robustness metric: frequency of falling over. As expected, the fraction of trials resulting in a robot fallen over increases with increasing body randomization (<italic>&#x003c8;</italic><sub><italic>test</italic></sub>). More importantly, the amount of randomization during training improves stability of the resulting solution. The gaits trained without randomization (<italic>&#x003c8;</italic> = 0) are particularly susceptible to losing balance when tested on body configurations that it is not trained on. Overall, it seems there is a trade-off between speed and stability of a given solution. Randomization impacts this trade-off and favors more prudent gaits that are slower but more stable.</p><p>To evaluate the impact of variation of the different body parameters, the gaits were also tested while incrementally varying a single body parameter at the time and keeping other parameters at their default value (<xref ref-type="fig" rid="F7">Figure 7</xref>). Similar to the previous test, training with body randomization lowers average performance but also the variance when changing the feet friction and mass distribution parameters. Varying the spring stiffness parameter has a more dramatic effect on the performance and here body randomization seems to improve performance in certain parameter ranges. Generally, the negative impact of varying body parameters on stability is reduced by increasing the amount of training randomization (<xref ref-type="fig" rid="F7">Figure 7</xref>, Bottom).</p><fig id="F7" position="float"><label>Figure 7</label><caption><p>Evaluation of parameters. Gaits are evaluated while incrementally varying a single parameter at a time, other parameters are kept at the default value. <bold>Top:</bold> average performance measured as distance from origin after 20 s (<italic>N</italic> = 50). <bold>Bottom:</bold> observed frequency of falling over, normalized.</p></caption><graphic xlink:href="fnbot-13-00009-g0007"/></fig></sec><sec><title>3.3. Transfer to Real World</title><p>The final solution of each optimization was tested on the physical robot. Performance is measured as distance traveled in 10 s (<xref ref-type="fig" rid="F8">Figure 8</xref>, Top). Generally, adding body randomization (<italic>&#x003c8;</italic> &#x0003e; 0) improves average performance and decreases the variability in performance. Forty percent (2/5) of optimizations without randomization (<italic>&#x003c8;</italic> = 0) resulted in a functional gait compared to 80% (16/20) of optimizations with randomization (<italic>&#x003c8;</italic> &#x0003e; 0). Non-functional gaits result in the robot shuffling in place or consistently falling within 10 s. While a randomization level <italic>&#x003c8;</italic> &#x0003e; 0 seems beneficial, the precise level of randomization doesn't seem critical. This could be a consequence of sampling the parameters from a Gaussian distribution around a common mean. The optimization procedure was repeated with a very high randomization level (<italic>&#x003c8;</italic> = 2, not shown), which resulted in nonfunctional gaits. Presumably, the gaits learned without randomization (<italic>&#x003c8;</italic> = 0) are overfit to the training environment and hence perform well on the nominal body in the simulation, but suffer a performance drop when tested in another setting such as on the physical robot.</p><fig id="F8" position="float"><label>Figure 8</label><caption><p>Transfer test on physical robot. <bold>Top:</bold> Average traveled distance of the robot in 10 s trials. Each point represents an average of <italic>N</italic> = 25 trials (each result of the optimizations was tested 5 times on the robot), error bars indicate standard deviation. <bold>Bottom:</bold> fraction of trials where the robot flipped to its side or back.</p></caption><graphic xlink:href="fnbot-13-00009-g0008"/></fig><p>Additionally, frequency of falling was recorded (<xref ref-type="fig" rid="F8">Figure 8</xref>, Bottom). Lack of body randomization resulted in a higher probability of the robot falling to its side or back. Optimizations with body randomization generally resulted in reduced frequency of falling, using <italic>&#x003c8;</italic> = 0.3 resulted in functional gaits that maintained balance in all trials.</p></sec></sec><sec sec-type="conclusions" id="s4"><title>4. Conclusion</title><p>In this work, we investigated bridging the simulation-reality gap for a compliant, underactuated robot, by treating a robot and its model as variations of the same dynamical system. Consequently, both the calibration and control optimization procedure focus on body parameters critical for the behavior of the dynamical system.</p><p>For the optimization procedure, we showed that body randomization results in improved transferability of the controllers. Lack of randomization results in better performance in simulation but worse performance on the real robot, compared to the optimization with randomization. Addition of randomization also improved stability of controllers, both in simulation and on the physical robot. Body randomization can be interpreted as a regularization method, preventing the optimization procedure from overfitting to the particular simulation environment. While body randomization improves sim-to-real transfer, the precise amount of randomization did not seem critical. For our platform, the use of body randomization enhances the quality of controllers learned in simulation. The resulting controller has an improved stability, reducing risk of physical harm and providing a safe starting point to continue learning on the physical platform. This method is relatively straightforward to implement and could be used in combination with other tools that reduce the simulation-reality gap, such as domain randomization and data augmentation.</p><p>From the evaluations of gaits in simulation, it is clear that the quality of a given gait can be very sensitive to even small changes in physical properties such as the stiffness of springs in the leg. It would therefor be interesting to use a platform with adaptive spring stiffness in future work. This would allow to tune the compliance in function of gait optimization.</p></sec><sec sec-type="data-availability" id="s5"><title>Data Availability</title><p>The datasets generated for this study are available on request to the corresponding author.</p></sec><sec id="s6"><title>Author Contributions</title><p>The experiments were conceived by AV, GU, Fw, and JD and designed by AV. The physical platform was co-developed by GU, the virtual platform by HM. The data were analyzed by AV with help of Fw and JD. The manuscript was written by AV, with comments and corrections from GU, HM, Fw, and JD.</p><sec><title>Conflict of Interest Statement</title><p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p></sec></sec></body><back><ack><p>This research has received funding from the European Union's Horizon 2020 Framework Programme for Research and Innovation under the Specific Grant Agreement No. 785907 (Human Brain Project SGA2). This research was supported by the HBP Neurorobotics Platform funded from the European Union's Horizon 2020 Framework Programme for Research and Innovation under the Specific Grant Agreement No. 785907 (Human Brain Project SGA2).</p></ack><fn-group><fn id="fn0001"><p><sup>1</sup><ext-link ext-link-type="uri" xlink:href="http://http://wiki.ros.org/">http://wiki.ros.org/</ext-link></p></fn></fn-group><ref-list><title>References</title><ref id="B1"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Barasuol</surname><given-names>V.</given-names></name><collab>B. J. S. C. F. M. d. P. E. C. D</collab></person-group> (<year>2013</year>). <article-title>A reactive controller framework for quadrupedal locomotion on challenging terrain</article-title>, In <source>IEEE International Conference on Robotics and Automation</source> (<publisher-loc>Karlsruhe</publisher-loc>), <fpage>2554</fpage>&#x02013;<lpage>2561</lpage>.</mixed-citation></ref><ref id="B2"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Bousmalis</surname><given-names>K.</given-names></name><name><surname>Irpan</surname><given-names>A.</given-names></name><name><surname>Wohlhart</surname><given-names>P.</given-names></name><name><surname>Bai</surname><given-names>Y.</given-names></name><name><surname>Kelcey</surname><given-names>M.</given-names></name><name><surname>Kalakrishnan</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2018</year>). <article-title>Using simulation and domain adaptation to improve efficiency of deep robotic grasping</article-title>, in <source>2018 IEEE International Conference on Robotics and Automation (ICRA)</source> (<publisher-loc>IEEE</publisher-loc>), <fpage>4243</fpage>&#x02013;<lpage>4250</lpage>.</mixed-citation></ref><ref id="B3"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Bousmalis</surname><given-names>K.</given-names></name><name><surname>Silberman</surname><given-names>N.</given-names></name><name><surname>Dohan</surname><given-names>D.</given-names></name><name><surname>Erhan</surname><given-names>D.</given-names></name><name><surname>Krishnan</surname><given-names>D.</given-names></name></person-group> (<year>2017</year>). <article-title>Unsupervised pixel-level domain adaptation with generative adversarial networks</article-title>, in <source>The IEEE Conference on Computer Vision and Pattern Recognition (CVPR)</source>(<publisher-loc>Honolulu</publisher-loc>), <volume>Vol. 1</volume>, <fpage>7</fpage>.</mixed-citation></ref><ref id="B4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Degrave</surname><given-names>J.</given-names></name><name><surname>Burm</surname><given-names>M.</given-names></name><name><surname>Kindermans</surname><given-names>P.</given-names></name><name><surname>Dambre</surname><given-names>J.</given-names></name><name><surname>Wyffels</surname><given-names>F.</given-names></name></person-group> (<year>2015</year>). <article-title>Transfer learning of gaits on a quadrupedal robot</article-title>. <source>Adaptive Behav.</source>
<volume>23</volume>, <fpage>69</fpage>&#x02013;<lpage>82</lpage>. <pub-id pub-id-type="doi">10.1177/1059712314563620</pub-id></mixed-citation></ref><ref id="B5"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Drumwright</surname><given-names>E.</given-names></name><name><surname>Hsu</surname><given-names>J.</given-names></name><name><surname>Koenig</surname><given-names>N.</given-names></name><name><surname>Shell</surname><given-names>D.</given-names></name></person-group> (<year>2010</year>). <article-title>Extending open dynamics engine for robotics simulation</article-title>, in <source>International Conference on Simulation, Modeling, and Programming for Autonomous Robots</source> (<publisher-loc>Darmstadt</publisher-loc>: <publisher-name>Springer</publisher-name>), <fpage>38</fpage>&#x02013;<lpage>50</lpage>.</mixed-citation></ref><ref id="B6"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Falotico</surname><given-names>E.</given-names></name><name><surname>Vannucci</surname><given-names>L.</given-names></name><name><surname>Ambrosano</surname><given-names>A.</given-names></name><name><surname>Albanese</surname><given-names>U.</given-names></name><name><surname>Ulbrich</surname><given-names>S.</given-names></name><name><surname>Vasquez Tieck</surname><given-names>J. C.</given-names></name><etal/></person-group>. (<year>2017</year>). <article-title>Connecting artificial brains to robots in a comprehensive simulation framework: the neurorobotics platform</article-title>. <source>Front. Neurorobt.</source>
<volume>11</volume>:<fpage>2</fpage>. <pub-id pub-id-type="doi">10.3389/fnbot.2017.00002</pub-id><pub-id pub-id-type="pmid">28179882</pub-id></mixed-citation></ref><ref id="B7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>F&#x000fc;chslin</surname><given-names>R. M.</given-names></name><name><surname>Dzyakanchuk</surname><given-names>A.</given-names></name><name><surname>Flumini</surname><given-names>D.</given-names></name><name><surname>Hauser</surname><given-names>H.</given-names></name><name><surname>Hunt</surname><given-names>K. J.</given-names></name><name><surname>Luchsinger</surname><given-names>R.</given-names></name><etal/></person-group>. (<year>2013</year>). <article-title>Morphological computation and morphological control: steps toward a formal theory and applications</article-title>. <source>Artif. Life</source>
<volume>19</volume>, <fpage>9</fpage>&#x02013;<lpage>34</lpage>. <pub-id pub-id-type="doi">10.1162/ARTL_a_00079</pub-id><pub-id pub-id-type="pmid">23186344</pub-id></mixed-citation></ref><ref id="B8"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Gay</surname><given-names>S.</given-names></name><name><surname>Santos-Victor</surname><given-names>J.</given-names></name><name><surname>Ijspeert</surname><given-names>A.</given-names></name></person-group> (<year>2013</year>). <article-title>Learning robot gait stability using neural networks as sensory feedback function for central pattern generators</article-title>, in <source>EEE/RSJ International Conference on Intelligent Robots and Systems (IROS)</source> (<publisher-loc>Tokyo</publisher-loc>), EPFL-CONF-187784.</mixed-citation></ref><ref id="B9"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gupta</surname><given-names>A.</given-names></name><name><surname>Devin</surname><given-names>C.</given-names></name><name><surname>Liu</surname><given-names>Y.</given-names></name><name><surname>Abbeel</surname><given-names>P.</given-names></name><name><surname>Levine</surname><given-names>S.</given-names></name></person-group> (<year>2017</year>). <article-title>Learning invariant feature spaces to transfer skills with reinforcement learning</article-title>. <source>arXiv</source> [preprint] arXiv:1703.02949.</mixed-citation></ref><ref id="B10"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hamer</surname><given-names>M.</given-names></name><name><surname>Waibel</surname><given-names>M.</given-names></name><name><surname>D'Andrea</surname><given-names>R.</given-names></name></person-group> (<year>2013</year>). <article-title>Knowledge transfer for high-performance quadrocopter maneuvers</article-title>, in <source>Intelligent Robots and Systems (IROS)</source> (<publisher-loc>Tokyo</publisher-loc>), <publisher-name>2013 IEEE/RSJ International Conference on (IEEE)</publisher-name>, <fpage>1714</fpage>&#x02013;<lpage>1719</lpage>.</mixed-citation></ref><ref id="B11"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Hansen</surname><given-names>N.</given-names></name></person-group> (<year>2006</year>). <article-title>The cma evolution strategy: a comparing review</article-title>, in <source>Towards a New Evolutionary Computation</source> (<publisher-loc>Berlin</publisher-loc>: <publisher-name>Springer</publisher-name>), <fpage>75</fpage>&#x02013;<lpage>102</lpage>.</mixed-citation></ref><ref id="B12"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Heess</surname><given-names>N.</given-names></name><name><surname>Dhruva</surname><given-names>T. B</given-names></name><name><surname>Sriram</surname><given-names>S.</given-names></name><name><surname>Lemmon</surname><given-names>J.</given-names></name><name><surname>Merel</surname><given-names>J.</given-names></name><name><surname>Wayne</surname><given-names>G.</given-names></name><etal/></person-group> (<year>2017</year>). <article-title>Emergence of locomotion behaviours in rich environments</article-title>. <source>CoRR</source>, abs/1707.02286.</mixed-citation></ref><ref id="B13"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Jakobi</surname><given-names>N.</given-names></name></person-group> (<year>1998</year>). <source>Minimal Simulations for Evolutionary Robotics</source>. Ph.D. thesis, <publisher-name>University of Sussex</publisher-name>.</mixed-citation></ref><ref id="B14"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Laschi</surname><given-names>C.</given-names></name><name><surname>Cianchetti</surname><given-names>M.</given-names></name></person-group> (<year>2014</year>). <article-title>Soft robotics: new perspectives for robot bodyware and control</article-title>. <source>Front. Bioeng. Biotechnol.</source>
<volume>2</volume>:<fpage>3</fpage>. <pub-id pub-id-type="doi">10.3389/fbioe.2014.00003</pub-id><pub-id pub-id-type="pmid">25022259</pub-id></mixed-citation></ref><ref id="B15"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lipson</surname><given-names>H.</given-names></name><name><surname>Pollack</surname><given-names>J.</given-names></name></person-group> (<year>2000</year>). <article-title>Automatic design and manufacture of robotic lifeforms</article-title>. <source>Nature</source>
<volume>406</volume>, <fpage>974</fpage>. <pub-id pub-id-type="pmid">10984047</pub-id></mixed-citation></ref><ref id="B16"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Mordatch</surname><given-names>I.</given-names></name><name><surname>Lowrey</surname><given-names>K.</given-names></name><name><surname>Todorov</surname><given-names>E.</given-names></name></person-group> (<year>2015</year>). <article-title>Ensemble-cio: Full-body dynamic motion planning that transfers to physical humanoids</article-title>, in <source>Intelligent Robots and Systems (IROS), 2015 IEEE/RSJ International Conference on</source> (<publisher-loc>IEEE</publisher-loc>), <fpage>5307</fpage>&#x02013;<lpage>5314</lpage>.</mixed-citation></ref><ref id="B17"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Park</surname><given-names>H.</given-names></name><name><surname>Wensing</surname><given-names>P. M.</given-names></name><name><surname>Kim</surname><given-names>S.</given-names></name></person-group> (<year>2017</year>). <article-title>High-speed bounding with the MIT cheetah 2: Control design and experiments</article-title>. <source>Int. J. Robot. Res.</source>
<volume>36</volume>, <fpage>167</fpage>&#x02013;<lpage>192</lpage>. <pub-id pub-id-type="doi">10.1177/0278364917694244</pub-id></mixed-citation></ref><ref id="B18"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Peng</surname><given-names>X.</given-names></name><name><surname>Berseth</surname><given-names>G.</given-names></name><name><surname>Yin</surname><given-names>K.</given-names></name><name><surname>van de Panne</surname><given-names>M.</given-names></name></person-group> (<year>2017</year>). <article-title>Deeploco: dynamic locomotion skills using hierarchical deep reinforcement learning</article-title>. <source>ACM Trans. Graph.</source>
<volume>36</volume>, <fpage>1</fpage>&#x02013;<lpage>41</lpage>. <pub-id pub-id-type="doi">10.1145/3072959.3073602</pub-id></mixed-citation></ref><ref id="B19"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Peng</surname><given-names>X. B.</given-names></name><name><surname>Andrychowicz</surname><given-names>M.</given-names></name><name><surname>Zaremba</surname><given-names>W.</given-names></name><name><surname>Abbeel</surname><given-names>P.</given-names></name></person-group> (<year>2018</year>). <article-title>Sim-to-real transfer of robotic control with dynamics randomization</article-title>, in <source>2018 IEEE International Conference on Robotics and Automation (ICRA)</source> (<publisher-name>IEEE</publisher-name>) (<publisher-loc>Brisbane, QLD</publisher-loc>), <fpage>1</fpage>&#x02013;<lpage>8</lpage>.</mixed-citation></ref><ref id="B20"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pfeifer</surname><given-names>R.</given-names></name><name><surname>Lungarella</surname><given-names>M.</given-names></name><name><surname>Iida</surname><given-names>F.</given-names></name></person-group> (<year>2007</year>). <article-title>Self-organization, embodiment, and biologically inspired robotics</article-title>. <source>Science</source>
<volume>318</volume>, <fpage>1088</fpage>&#x02013;<lpage>1093</lpage>. <pub-id pub-id-type="doi">10.1126/science.1145803</pub-id><pub-id pub-id-type="pmid">18006736</pub-id></mixed-citation></ref><ref id="B21"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pfeifer</surname><given-names>R.</given-names></name><name><surname>Lungarella</surname><given-names>M.</given-names></name><name><surname>Iida</surname><given-names>F.</given-names></name></person-group> (<year>2012</year>). <article-title>The challenges ahead for bio-inspired'soft'robotics</article-title>. <source>Commun. ACM</source>
<volume>55</volume>, <fpage>76</fpage>&#x02013;<lpage>87</lpage>. <pub-id pub-id-type="doi">10.1145/2366316.2366335</pub-id></mixed-citation></ref><ref id="B22"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raibert</surname><given-names>M.</given-names></name><name><surname>Blankespoor</surname><given-names>K.</given-names></name><name><surname>Nelson</surname><given-names>G.</given-names></name><name><surname>Playter</surname><given-names>R.</given-names></name></person-group> (<year>2008</year>). <article-title>Bigdog, the rough-terrain quadruped robot</article-title>. <source>IFAC Proc. Vol.</source>
<volume>41</volume>, <fpage>10822</fpage>&#x02013;<lpage>10825</lpage>. <pub-id pub-id-type="doi">10.3182/20080706-5-KR-1001.01833</pub-id></mixed-citation></ref><ref id="B23"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Taigman</surname><given-names>Y.</given-names></name><name><surname>Polyak</surname><given-names>A.</given-names></name><name><surname>Wolf</surname><given-names>L.</given-names></name></person-group> (<year>2016</year>). <article-title>Unsupervised cross-domain image generation</article-title>. <source>arXiv</source> [preprint] arXiv:1611.02200.</mixed-citation></ref><ref id="B24"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tan</surname><given-names>J.</given-names></name><name><surname>Zhang</surname><given-names>T.</given-names></name><name><surname>Coumans</surname><given-names>E.</given-names></name><name><surname>Iscen</surname><given-names>A.</given-names></name><name><surname>Bai</surname><given-names>Y.</given-names></name><name><surname>Hafner</surname><given-names>D.</given-names></name><etal/></person-group> (<year>2018</year>). <article-title>Sim-to-real: Learning agile locomotion for quadruped robots</article-title>. <source>CoRR</source>, abs/1804.10332.</mixed-citation></ref><ref id="B25"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Tobin</surname><given-names>J.</given-names></name><name><surname>Fong</surname><given-names>R.</given-names></name><name><surname>Ray</surname><given-names>A.</given-names></name><name><surname>Schneider</surname><given-names>J.</given-names></name><name><surname>Zaremba</surname><given-names>W.</given-names></name><name><surname>Abbeel</surname><given-names>P.</given-names></name></person-group> (<year>2017</year>). <article-title>Domain randomization for transferring deep neural networks from simulation to the real world</article-title>, in <source>Intelligent Robots and Systems (IROS), 2017 IEEE/RSJ International Conference on</source> (<publisher-name>IEEE</publisher-name>) (<publisher-loc>Vancouver, BC</publisher-loc>), <fpage>23</fpage>&#x02013;<lpage>30</lpage>.</mixed-citation></ref><ref id="B26"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Um</surname><given-names>T. T.</given-names></name><name><surname>Park</surname><given-names>M. S.</given-names></name><name><surname>Park</surname><given-names>J.-M.</given-names></name></person-group> (<year>2014</year>). <article-title>Independent joint learning: a novel task-to-task transfer learning scheme for robot models</article-title>, in <source>Robotics and Automation (ICRA), 2014 IEEE International Conference on</source> (<publisher-name>IEEE</publisher-name>), <fpage>5679</fpage>&#x02013;<lpage>5684</lpage>.</mixed-citation></ref><ref id="B27"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Urbain</surname><given-names>G.</given-names></name><name><surname>Vandesompele</surname><given-names>A.</given-names></name><name><surname>Wyffels</surname><given-names>F.</given-names></name><name><surname>Dambre</surname><given-names>J.</given-names></name></person-group> (<year>2018</year>). <article-title>Calibration method to improve transfer from simulation to quadruped robots</article-title>, in <source>International Conference on Simulation of Adaptive Behavior</source> (<publisher-name>Springer</publisher-name>), <fpage>102</fpage>&#x02013;<lpage>113</lpage>.</mixed-citation></ref><ref id="B28"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Willems</surname><given-names>B.</given-names></name><name><surname>Degrave</surname><given-names>J.</given-names></name><name><surname>Dambre</surname><given-names>J.</given-names></name><name><surname>wyffels</surname><given-names>F.</given-names></name></person-group> (<year>2017</year>). <article-title>Quadruped robots benefit from compliant leg designs</article-title>, in <source>2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS 2017)</source> (<publisher-name>IEEE</publisher-name>) (<publisher-loc>Vancouver, BC</publisher-loc>).</mixed-citation></ref></ref-list></back></article>

<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article" xml:lang="en"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Algorithms Mol Biol</journal-id><journal-id journal-id-type="iso-abbrev">Algorithms Mol Biol</journal-id><journal-title-group><journal-title>Algorithms for Molecular Biology : AMB</journal-title></journal-title-group><issn pub-type="epub">1748-7188</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">24507724</article-id><article-id pub-id-type="pmc">3933684</article-id><article-id pub-id-type="publisher-id">1748-7188-9-1</article-id><article-id pub-id-type="doi">10.1186/1748-7188-9-1</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group></article-categories><title-group><article-title>A minimum-labeling approach for reconstructing protein networks across multiple conditions</article-title></title-group><contrib-group><contrib contrib-type="author" id="A1"><name><surname>Mazza</surname><given-names>Arnon</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>arnonmazza@post.tau.ac.il</email></contrib><contrib contrib-type="author" id="A2"><name><surname>Gat-Viks</surname><given-names>Irit</given-names></name><xref ref-type="aff" rid="I2">2</xref><email>iritgv@post.tau.ac.il</email></contrib><contrib contrib-type="author" id="A3"><name><surname>Farhan</surname><given-names>Hesso</given-names></name><xref ref-type="aff" rid="I3">3</xref><email>hesso.farhan@uni-konstanz.de</email></contrib><contrib contrib-type="author" corresp="yes" id="A4"><name><surname>Sharan</surname><given-names>Roded</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>roded@post.tau.ac.il</email></contrib></contrib-group><aff id="I1"><label>1</label>Blavatnik School of Computer Science, Tel Aviv University, 69978 Tel Aviv, Israel</aff><aff id="I2"><label>2</label>Department of Cell Research and Immunology, Tel Aviv University, 69978 Tel Aviv, Israel</aff><aff id="I3"><label>3</label>Biotechnology Institute Thurgau, University of Konstanz, Unterseestrasse 47, CH-8280 Kreuzlingen, Switzerland</aff><pub-date pub-type="collection"><year>2014</year></pub-date><pub-date pub-type="epub"><day>9</day><month>2</month><year>2014</year></pub-date><volume>9</volume><fpage>1</fpage><lpage>1</lpage><history><date date-type="received"><day>30</day><month>11</month><year>2013</year></date><date date-type="accepted"><day>22</day><month>1</month><year>2014</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2014 Mazza et al.; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2014</copyright-year><copyright-holder>Mazza et al.; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><self-uri xlink:href="http://www.almob.org/content/9/1/1"/><abstract><sec><title>Background</title><p>The sheer amounts of biological data that are generated in recent years have driven the development of network analysis tools to facilitate the interpretation and representation of these data. A fundamental challenge in this domain is the reconstruction of a protein-protein subnetwork that underlies a process of interest from a genome-wide screen of associated genes. Despite intense work in this area, current algorithmic approaches are largely limited to analyzing a single screen and are, thus, unable to account for information on condition-specific genes, or reveal the dynamics (over time or condition) of the process in question.</p></sec><sec><title>Results</title><p>We propose a novel formulation for the problem of network reconstruction from multiple-condition data and devise an efficient integer program solution for it. We apply our algorithm to analyze the response to influenza infection and ER export regulation in humans. By comparing to an extant, single-condition tool we demonstrate the power of our new approach in integrating data from multiple conditions in a compact and coherent manner, capturing the dynamics of the underlying processes.</p></sec></abstract><kwd-group><kwd>Protein-protein interaction networks</kwd><kwd>Graph algorithms</kwd><kwd>Integer linear programming</kwd></kwd-group></article-meta></front><body><sec><title>Background</title><p>With the increasing availability of high-throughput data, network biology has become the method of choice for filtering, interpreting and representing these data. A fundamental problem in network biology is the reconstruction of a subnetwork that underlies a process of interest by efficiently connecting a set of implicated proteins (e.g. derived by some genome-wide screen) in a network of physical interactions. In recent years, several algorithms have been suggested for different variants of this problem, including the Steiner tree based methods of [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>], the flow based approach of [<xref ref-type="bibr" rid="B3">3</xref>] and the anchored reconstruction method of [<xref ref-type="bibr" rid="B4">4</xref>].</p><p>Despite the plethora of network reconstruction methods, these have been so far largely limited to explaining a single experiment or condition. In practice, the network dynamically changes over time or conditions, calling for reconstructions that can integrate such data to a coherent picture of the activity dynamics of the underlying pathways.</p><p>Here we tackle this multiple-condition scenario, where the reconstructed subnetwork should explain in a coherent manner multiple experiments driven by the same set of proteins (referred to here as <italic>anchor</italic> proteins) while producing different sets of affected proteins, or <italic>terminals</italic>. As in the single-condition case, a parsimonious assumption implies that the reconstructed subnetwork should be of minimum size. In addition, we require that its pathways, leading from the anchors to each of the terminals, are as homogeneous as possible in terms of the conditions, or <italic>labels</italic> they span. We formulate the resulting minimum labeling problem, show that it is NP complete and characterize its solutions. We then offer an equivalent formulation that allows us to design a polynomial integer linear programming (ILP) formulation for its solution. We implement the ILP algorithm, <italic>MKL</italic>, and apply it to two datasets in humans concerning the response to influenza infection and ER export regulation. We show that the MKL networks are significantly enriched with respect to the related biological processes and allow obtaining of novel insights on the modeled processes. Finally, we compare MKL with an extant method, ANAT [<xref ref-type="bibr" rid="B4">4</xref>], demonstrating the power of our algorithm in integrating data from multiple conditions in a compact and informative manner.</p></sec><sec><title>Preliminaries</title><p>Let <italic>G</italic>&#x02009;=&#x02009;(<italic>V</italic>, <italic>E</italic>) be a directed graph, representing a protein-protein interaction (PPI) network, with vertex set <italic>V</italic> and edge set <italic>E</italic>, and let <italic>a</italic>&#x02009;&#x02208;&#x02009;<italic>V</italic> be an anchor node. Denote by <italic>I</italic><italic>n</italic>(<italic>v</italic>) (<italic>Out</italic>(<italic>v</italic>)) the set of incoming (outgoing) edges of a node <italic>v</italic>&#x02009;&#x02208;&#x02009;<italic>V</italic>, respectively. Let <italic>L</italic>&#x02009;=&#x02009;{1, &#x02026;, <italic>k</italic>} be a set of labels, representing <italic>k</italic>&#x02009;&#x02265;&#x02009;1 conditions. Let <italic>f</italic>:<italic>E</italic>&#x02009;&#x02192;&#x02009;2<sup>(<italic>L</italic>)</sup> be a labeling function that assigns each edge of <italic>E</italic> a (possibly empty) subset of labels. For 1&#x02009;&#x02264;&#x02009;<italic>i</italic>&#x02009;&#x02264;&#x02009;<italic>k</italic>, we define <italic>E</italic><sub>
<italic>i</italic>
</sub>(<italic>f</italic>)&#x02009;:=&#x02009;{<italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic>&#x02009;:&#x02009;<italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>f</italic>(<italic>e</italic>)} to be the set of edges with label <italic>i</italic>. We further denote <inline-formula><mml:math id="M1" name="1748-7188-9-1-i1" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">in</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>&#x022c3;</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">In</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> and <inline-formula><mml:math id="M2" name="1748-7188-9-1-i2" overflow="scroll"><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">out</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>&#x022c3;</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">Out</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>.</p><p>We say that a labeling function <italic>f</italic> is <italic>valid</italic> if for every terminal <italic>t</italic> and condition <italic>i</italic> in which <italic>t</italic> is affected, there exists a path from <italic>a</italic> to <italic>t</italic> whose edges are restricted to <italic>E</italic><sub>
<italic>i</italic>
</sub>(<italic>f</italic>), or in other words, are assigned with the label <italic>i</italic>. We evaluate the <italic>cost</italic> of the labeling according to the number of labels <italic>L</italic>(<italic>f</italic>) used and the number of edges <italic>N</italic>(<italic>f</italic>) that are assigned with at least one label. Formally, <inline-formula><mml:math id="M3" name="1748-7188-9-1-i3" overflow="scroll"><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>f</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo mathsize="big">&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mo>|</mml:mo><mml:mi>f</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo></mml:math></inline-formula> and <italic>N</italic>(<italic>f</italic>)&#x02009;=&#x02009;|{<italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic>&#x02009;:&#x02009;<italic>f</italic>(<italic>e</italic>)&#x02009;&#x02260;&#x02009;&#x02205;}|. The cost is then defined as <italic>&#x003b1;</italic>&#x02009;&#x000b7;&#x02009;<italic>L</italic>(<italic>f</italic>)&#x02009;+&#x02009;(1&#x02009;-&#x02009;<italic>&#x003b1;</italic>)&#x02009;&#x000b7;&#x02009;<italic>N</italic>(<italic>f</italic>), where 0&#x02009;&#x02264;&#x02009;<italic>&#x003b1;</italic>&#x02009;&#x02264;&#x02009;1 balances the two terms.</p><p>We study the following <bold>minimum</bold><italic>k-</italic><bold>labeling (MKL)</bold> problem on <italic>G</italic>: The input is an anchor node <italic>a</italic>&#x02009;&#x02208;&#x02009;<italic>V</italic> and <italic>k</italic>&#x02009;&#x02265;&#x02009;1 sets of terminals <italic>T</italic><sub>1</sub>, &#x02026;, <italic>T</italic><sub>
<italic>k</italic>
</sub> in <italic>V</italic>&#x02009;&#x02216;&#x02009;{<italic>a</italic>} that implicitly assign to each terminal the subset of conditions (or labels) in which it is affected. The objective is to find a valid labeling of the edges of <italic>G</italic> of minimum cost.</p><p>Clearly, any valid labeling induces a subnetwork that can model the given conditions: this subnetwork is comprised of those edges that are assigned a non-empty subset of labels. We note that for <italic>k</italic>&#x02009;=&#x02009;1 we have <italic>L</italic>(<italic>f</italic>)&#x02009;=&#x02009;<italic>N</italic>(<italic>f</italic>), thus in this case the MKL problem is equivalent to the minimum directed Steiner tree problem. The parameter <italic>&#x003b1;</italic> balances between two types of solutions: (1) a subnetwork with minimum number of labels (<italic>&#x003b1;</italic>&#x02009;=&#x02009;1), which is equivalent to the union of independent Steiner trees for each of the conditions, and (2) a subnetwork with minimum number of edges (<italic>&#x003b1;</italic>&#x02009;=&#x02009;0), which is simply a Steiner tree spanning the terminals in the union of all conditions. However, general instances of MKL where <italic>&#x003b1;</italic>&#x02009;&#x02260;&#x02009;0, 1 can be solved neither by combining the independent Steiner trees of each of the conditions nor by constructing a single Steiner tree over all terminals. This is illustrated by the toy examples in Figures <xref ref-type="fig" rid="F1">1</xref> and <xref ref-type="fig" rid="F2">2</xref>. Next, we provide a characterization of solutions to the MKL problem.</p><fig id="F1" position="float"><label>Figure 1</label><caption><p><bold>The optimal MKL solution for </bold><bold><italic>&#x003b1; </italic></bold><bold>= 0.5 is neither the union of label-specific Steiner trees nor a subgraph of it.</bold> In this instance <italic>k</italic>&#x02009;=&#x02009;2, <italic>T</italic><sub>1</sub>&#x02009;=&#x02009;{<italic>x</italic>, <italic>y</italic>} and <italic>T</italic><sub>2</sub>&#x02009;=&#x02009;{<italic>y</italic>, <italic>z</italic>}. The optimal Steiner trees for <italic>T</italic><sub>1</sub> and <italic>T</italic><sub>2</sub> are composed of the red (dashed) and blue (solid) edges, respectively. The best MKL solution that uses only edges of the union can be achieved by pushing label 1 over the red edges and 2 over the blue edges, resulting in 14 labels and 14 edges. In contrast, the optimal solution, whose labels appear on top of the figure, contains the blue and green (waved) edges, spanning 15 labels and 9 edges.</p></caption><graphic xlink:href="1748-7188-9-1-1"/></fig><fig id="F2" position="float"><label>Figure 2</label><caption><p><bold>The optimal MKL solution for </bold><bold><italic>&#x003b1; </italic></bold><bold>= 0.6 is not a minimum Steiner tree over all terminals.</bold> In this instance <italic>k</italic>&#x02009;=&#x02009;2, <italic>T</italic><sub>1</sub>&#x02009;=&#x02009;{<italic>x</italic>, <italic>w</italic>} and <italic>T</italic><sub>2</sub>&#x02009;=&#x02009;{<italic>y</italic>, <italic>z</italic>}. The black (solid) edges form a Steiner tree with 6 edges and 8 labels, whereas the blue (dashed) edges constitute an MKL solution with 7 edges and 7 labels.</p></caption><graphic xlink:href="1748-7188-9-1-2"/></fig><sec><title/><p><bold>Theorem 1.</bold> Given a solution labeling <italic>f</italic> to an MKL instance, let <italic>G</italic><sub>
<italic>i</italic>
</sub> denote the subgraph of <italic>G</italic> that is induced by the edges in <italic>E</italic><sub>
<italic>i</italic>
</sub>(<italic>f</italic>). Then <italic>G</italic><sub>
<italic>i</italic>
</sub> is a directed tree rooted at <italic>a</italic>.</p></sec><sec><title/><p><italic>Proof</italic>. By definition, there is a directed path in <italic>G</italic><sub>
<italic>i</italic>
</sub> from <italic>a</italic> to each of the terminals in <italic>T</italic><sub>
<italic>i</italic>
</sub>. Clearly, any edge directed into <italic>a</italic> can be removed without affecting the constraints of a valid solution. Thus, it suffices to show that the underlying undirected graph of <italic>G</italic><sub>
<italic>i</italic>
</sub> contains no cycles. By minimality of the solution, every vertex in <italic>G</italic><sub>
<italic>i</italic>
</sub> is reachable from <italic>a</italic> or else it can be removed along with its edges. Suppose to the contrary that <italic>v</italic><sub>1</sub>, &#x02026;, <italic>v</italic><sub>
<italic>n</italic>
</sub> is a cycle in the underlying graph. Since <italic>a</italic> cannot be on this cycle and by the above observation, each of the cycle&#x02019;s vertices is reachable from <italic>a</italic>. W.l.o.g., let <italic>v</italic><sub>1</sub> be the farthest from <italic>a</italic> in <italic>G</italic><sub>
<italic>i</italic>
</sub> among all cycle vertices. Then one can obtain a smaller solution by removing one of the edges (<italic>v</italic><sub>1</sub>, <italic>v</italic><sub>2</sub>), (<italic>v</italic><sub>
<italic>n</italic>
</sub>, <italic>v</italic><sub>1</sub>) (depending on their orientations), a contradiction.</p><p>As noted earlier, when <italic>k</italic>&#x02009;=&#x02009;1 the MKL problem is equivalent to the minimum directed Steiner tree problem, which is known to be NP-complete [<xref ref-type="bibr" rid="B5">5</xref>]. A simple reduction from this case yields the following result:</p></sec><sec><title/><p><bold>Theorem 2.</bold> The MKL problem is NP-complete for every <italic>k</italic>&#x02009;&#x02265;&#x02009;1.</p></sec><sec><title/><p><italic>Proof</italic>. Let <italic>k</italic>&#x02009;&#x0003e;&#x02009;1. Given an instance of the minimum 1-labeling problem, that is, a network <italic>G</italic>&#x02009;=&#x02009;(<italic>V</italic>, <italic>E</italic>), an anchor <italic>a</italic>&#x02009;&#x02208;&#x02009;<italic>V</italic> and a single set of terminals <italic>T</italic>&#x02009;&#x02282;&#x02009;<italic>V</italic>, we generate the following input to the minimum <italic>k</italic>-labeling problem. Define the background network <italic>G</italic><sup>&#x02032;</sup>&#x02009;=&#x02009;(<italic>V</italic><sup>&#x02032;</sup>, <italic>E</italic><sup>&#x02032;</sup>), where <italic>V</italic><sup>&#x02032;</sup>&#x02009;=&#x02009;<italic>V</italic>&#x02009;&#x0222a;&#x02009;{<italic>t</italic><sub>1</sub>, &#x02026;, <italic>t</italic><sub>
<italic>k</italic>-1</sub>} and <italic>E</italic><sup>&#x02032;</sup>&#x02009;=&#x02009;<italic>E</italic>&#x02009;&#x0222a;&#x02009;{(<italic>a</italic>, <italic>t</italic><sub>1</sub>),&#x02026;,(<italic>a</italic>,<italic>t</italic><sub>
<italic>k</italic>-1</sub>)}, where <inline-formula><mml:math id="M4" name="1748-7188-9-1-i4" overflow="scroll"><mml:msubsup><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>}</mml:mo></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:math></inline-formula> are new nodes not in <italic>V</italic>. The input <italic>k</italic> sets of terminals are then <italic>T</italic>, {<italic>t</italic><sub>1</sub>}, &#x02026;, {<italic>t</italic><sub>
<italic>k</italic>-1</sub>}, and the anchor remains <italic>a</italic>. The key observation to complete this proof is that an optimum solution to the reduced instance must include all edges (<italic>a</italic>, <italic>t</italic><sub>
<italic>i</italic>
</sub>), plus an optimal tree that connects <italic>a</italic> to the terminals in <italic>T</italic> using a single label.</p></sec></sec><sec sec-type="methods"><title>Methods</title><sec><title>An alternative formulation of MKL</title><p>As the MKL problem is NP-complete, we aim to design an integer linear program for it, which will allow us to solve it to optimality or near-optimality for moderately-sized instances. In order to design an efficient ILP, we first provide an alternative formulation of the MKL problem, expressed in terms of units of flow per label pushed from the anchor toward the terminals. To this end, we extend the labeling definition to support assignment of multi-sets, as described below. We denote a multi-set by a pair <italic>M</italic>&#x02009;=&#x02009;&#x02329;&#x02009;<italic>S</italic>, <italic>&#x003bc;</italic>&#x02009;&#x0232a;, where <italic>S</italic> is a set and <inline-formula><mml:math id="M5" name="1748-7188-9-1-i5" overflow="scroll"><mml:mi>&#x003bc;</mml:mi><mml:mo>:</mml:mo><mml:mi>S</mml:mi><mml:mo>&#x02192;</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">Z</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:math></inline-formula>. We say that <italic>x</italic>&#x02009;&#x02208;&#x02009;<italic>M</italic> if <italic>x</italic>&#x02009;&#x02208;&#x02009;<italic>S</italic>. We let |<italic>M</italic>| denote the cardinality of the underlying set <italic>S</italic>.</p><p>The union &#x0228e; of two multi-sets &#x02329;<italic>S</italic><sub>1</sub>, <italic>&#x003bc;</italic><sub>1</sub>&#x0232a;, &#x02329;<italic>S</italic><sub>2</sub>, <italic>&#x003bc;</italic><sub>2</sub>&#x0232a; is defined as the pair &#x02329;<italic>S</italic>, <italic>&#x003bc;</italic>&#x0232a;, where <italic>S</italic>&#x02009;=&#x02009;<italic>S</italic><sub>1</sub>&#x0222a;<italic>S</italic><sub>2</sub>; for every <italic>x</italic>&#x02009;&#x02208;&#x02009;<italic>S</italic><sub>1</sub>&#x02009;&#x02229;&#x02009;<italic>S</italic><sub>2</sub>, <italic>&#x003bc;</italic>(<italic>x</italic>)&#x02009;=&#x02009;<italic>&#x003bc;</italic><sub>1</sub>(<italic>x</italic>)&#x02009;+&#x02009;<italic>&#x003bc;</italic><sub>2</sub>(<italic>x</italic>); for <italic>x</italic>&#x02009;&#x02208;&#x02009;<italic>S</italic><sub>1</sub>&#x02009;&#x02216;&#x02009;<italic>S</italic><sub>2</sub>, <italic>&#x003bc;</italic>(<italic>x</italic>)&#x02009;=&#x02009;<italic>&#x003bc;</italic><sub>1</sub>(<italic>x</italic>); and for <italic>x</italic>&#x02009;&#x02208;&#x02009;<italic>S</italic><sub>2</sub>&#x02009;&#x02216;&#x02009;<italic>S</italic><sub>1</sub>, <italic>&#x003bc;</italic>(<italic>x</italic>)&#x02009;=&#x02009;<italic>&#x003bc;</italic><sub>2</sub>(<italic>x</italic>). We extend the definitions of <italic>f</italic><sub>
<italic>in</italic>
</sub>(<italic>v</italic>) and <italic>f</italic><sub>
<italic>out</italic>
</sub>(<italic>v</italic>) to multi-sets using this union operator. Finally, for a vertex <italic>v</italic>&#x02009;&#x02260;&#x02009;<italic>a</italic> we let <italic>L</italic>(<italic>v</italic>)&#x02009;=&#x02009;{<italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic>:<italic>v</italic>&#x02009;&#x02208;&#x02009;<italic>T</italic><sub>
<italic>i</italic>
</sub>}; note that for non-terminal nodes <italic>L</italic>(<italic>v</italic>)&#x02009;=&#x02009;&#x02205;.</p><p>The alternative objective formulation is as follows: Find a multi-set label assignment <italic>g</italic>:<italic>E</italic>&#x02009;&#x02192;&#x02009;2<sup>(<italic>L</italic>)</sup> that satisfies the following constraints: </p><p>(i) <italic>g</italic><sub>
<italic>out</italic>
</sub>(<italic>a</italic>)&#x02009;=&#x02009;&#x02329;<italic>L</italic>, <italic>&#x003bc;</italic>&#x0232a;, where <italic>&#x003bc;</italic>(<italic>i</italic>)&#x02009;=&#x02009;|<italic>T</italic><sub>
<italic>i</italic>
</sub>| for every <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic>.</p><p>(The total amount of flow that goes out from the anchor per label equals the number of terminals that belong to the corresponding experiment).</p><p>(ii) For every <italic>v</italic>&#x02009;&#x02260;&#x02009;<italic>a</italic>, <italic>g</italic><sub>
<italic>in</italic>
</sub>(<italic>v</italic>)&#x02009;=&#x02009;<italic>g</italic><sub>
<italic>out</italic>
</sub>(<italic>v</italic>)&#x02009;&#x0228e;&#x02009;<italic>L</italic>(<italic>v</italic>). (For each label <italic>i</italic>, the incoming flow of a node <italic>v</italic> equals its outgoing flow, incremented by 1 if <italic>v</italic> is a terminal expressed in experiment <italic>i</italic>).</p><p>(iii) Denote <inline-formula><mml:math id="M6" name="1748-7188-9-1-i6" overflow="scroll"><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>g</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo mathsize="big">&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mo>|</mml:mo><mml:mi>g</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo></mml:math></inline-formula>, <italic>N</italic>(<italic>g</italic>)&#x02009;=&#x02009;|{<italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic>&#x02009;:&#x02009;<italic>g</italic>(<italic>e</italic>)&#x02009;&#x02260;&#x02009;&#x02205;}|, and let 0&#x02009;&#x02264;&#x02009;<italic>&#x003b1;</italic>&#x02009;&#x02264;&#x02009;1. Then <italic>&#x003b1;</italic>&#x02009;&#x000b7;&#x02009;<italic>L</italic>(<italic>g</italic>)&#x02009;+&#x02009;(1&#x02009;-&#x02009;<italic>&#x003b1;</italic>)&#x02009;&#x000b7;&#x02009;<italic>N</italic>(<italic>g</italic>) is minimal.</p><p>We claim that the two formulations are equivalent. Given a multi-set labeling <italic>g</italic>, it is easy to transform it into a labeling <italic>f</italic> by taking at each edge the underlying set of labels. One can show that the labeling <italic>f</italic> is valid, i.e. for each <italic>i</italic> there are paths in <italic>E</italic><sub>
<italic>i</italic>
</sub>(<italic>f</italic>) that connect <italic>a</italic> to each of the terminals in <italic>T</italic><sub>
<italic>i</italic>
</sub>. For the other direction, given a labeling <italic>f</italic> we can transform it into a multi-set labeling <italic>g</italic> by defining the multiplicity of a label <italic>i</italic> at the edge (<italic>u</italic>, <italic>v</italic>)&#x02009;&#x02208;&#x02009;<italic>E</italic><sub>
<italic>i</italic>
</sub>(<italic>f</italic>) as the number of terminals from <italic>T</italic><sub>
<italic>i</italic>
</sub> in the subtree of <italic>G</italic><sub>
<italic>i</italic>
</sub> that is rooted at <italic>v</italic>. It is easy to see that all constraints are satisfied by this transformation.</p><p>The above problem formulation can be made stricter by requiring that the set of incoming labels to a terminal is exactly the set of labels associated with the terminal. That is, for every terminal <italic>t</italic> and <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic>&#x02009;&#x02216;&#x02009;<italic>L</italic>(<italic>t</italic>), we require that <italic>i</italic>&#x02009;&#x02209;&#x02009;<italic>g</italic><sub>
<italic>in</italic>
</sub>(<italic>t</italic>). Our ILP formulation includes this requirement in order to better reflect the experimental observations, though in practice both versions produce very similar results.</p></sec><sec><title>An ILP algorithm</title><p>In order to formulate the problem as an integer program, we define three sets of variables: (i) binary variables of the form <inline-formula><mml:math id="M7" name="1748-7188-9-1-i7" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>, indicating for every <italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic> and <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic> whether the edge <italic>e</italic> is tagged with label <italic>i</italic>; (ii) integer variables of the form <inline-formula><mml:math id="M8" name="1748-7188-9-1-i8" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>, indicating for every <italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic> and <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic> the multiplicity of label <italic>i</italic> (in the range 0 to |<italic>T</italic><sub>
<italic>i</italic>
</sub>|); and (iii) binary variables of the form <italic>z</italic><sub>
<italic>e</italic>
</sub>, indicating for every <italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic> whether the edge <italic>e</italic> participates in the subnetwork (carrying any label). For a vertex <italic>v</italic>&#x02009;&#x02208;&#x02009;<italic>V</italic>, let <inline-formula><mml:math id="M9" name="1748-7188-9-1-i9" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> be a binary indicator of whether <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic>(<italic>v</italic>) or not. Let <italic>&#x003b1;</italic> be some fixed value in the range [0,1]. The formulation is as follows (omitting the constraints on variable ranges):</p><p><disp-formula id="bmcM1"><label>(1)</label><mml:math id="M10" name="1748-7188-9-1-i10" overflow="scroll"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mo>min</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:munder><mml:munderover accentunder="false" accent="false"><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:munderover><mml:mo>+</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>)</mml:mo><mml:mo>&#x000b7;</mml:mo></mml:mtd><mml:mtd><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>s.t.:</mml:mtext></mml:mtd><mml:mtd/></mml:mtr><mml:mtr><mml:mtd><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02264;</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>&#x000b7;</mml:mo><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:mtd><mml:mtd><mml:mo>&#x02200;</mml:mo><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>L</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula></p><p><disp-formula id="bmcM2"><label>(2)</label><mml:math id="M11" name="1748-7188-9-1-i11" overflow="scroll"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mspace width="11em"/><mml:mo>&#x02200;</mml:mo><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>L</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula></p><p><disp-formula id="bmcM3"><label>(3)</label><mml:math id="M12" name="1748-7188-9-1-i12" overflow="scroll"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-2"><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">Out</mml:mtext><mml:mo>(</mml:mo><mml:mi>a</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo></mml:mtd><mml:mtd><mml:mspace width="5em"/><mml:mo>&#x02200;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>L</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula></p><p><disp-formula id="bmcM4"><label>(4)</label><mml:math id="M13" name="1748-7188-9-1-i13" overflow="scroll"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-2"><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">In</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">Out</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:mtd><mml:mtd><mml:mo>&#x02200;</mml:mo><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi><mml:mo>&#x02216;</mml:mo><mml:mo>{</mml:mo><mml:mi>a</mml:mi><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>L</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula></p><p><disp-formula id="bmcM5"><label>(5)</label><mml:math id="M14" name="1748-7188-9-1-i14" overflow="scroll"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-2"><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">In</mml:mtext><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mtd><mml:mtd><mml:mspace width="7em"/><mml:mo>&#x02200;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>&#x02209;</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula></p><p>By Theorem 1, the constraint </p><p><disp-formula id="bmcM6"><label>(6)</label><mml:math id="M15" name="1748-7188-9-1-i15" overflow="scroll"><mml:munder><mml:mrow><mml:mi mathsize="big">&#x02211;</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">In</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02264;</mml:mo><mml:mn>1</mml:mn><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>&#x02200;</mml:mo><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mspace width="0.3em"/><mml:mi>i</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>L</mml:mi></mml:math></disp-formula></p><p>can be added to the ILP without affecting the optimal solution. The following Lemma leverages this insight for enhancing the ILP performance by removing some of the integrality constraints.</p><sec><title/><p><bold>Lemma 1.</bold> Assume that constraint (6) is added to the ILP formulation above. If all <inline-formula><mml:math id="M16" name="1748-7188-9-1-i16" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>&#x02019;s are restricted to binary values then the range constraints <inline-formula><mml:math id="M17" name="1748-7188-9-1-i17" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:mo>[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:mo>]</mml:mo></mml:math></inline-formula> and <italic>z</italic><sub>
<italic>e</italic>
</sub>&#x02208;[0,1] guarantee that all <inline-formula><mml:math id="M18" name="1748-7188-9-1-i18" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>&#x02019;s and <italic>z</italic><sub>
<italic>e</italic>
</sub>&#x02019;s are assigned integer values in any optimal solution.</p></sec><sec><title/><p><italic>Proof</italic>. Let <italic>v</italic>&#x02009;&#x02208;&#x02009;<italic>V</italic>. We first prove that for every <italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>I</italic><italic>n</italic>(<italic>v</italic>) and <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic>, <inline-formula><mml:math id="M19" name="1748-7188-9-1-i19" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> must be an integer. By the new constraint (6) and the integrality of all <inline-formula><mml:math id="M20" name="1748-7188-9-1-i20" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>&#x02019;s, the sum <inline-formula><mml:math id="M21" name="1748-7188-9-1-i21" overflow="scroll"><mml:munder><mml:mrow><mml:mo mathsize="big">&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">In</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> is either 0 or 1. If it is 0 then by constraint (1), for each of these edges <inline-formula><mml:math id="M22" name="1748-7188-9-1-i22" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:math></inline-formula>. Otherwise, exactly one of these edges has <inline-formula><mml:math id="M23" name="1748-7188-9-1-i23" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> and therefore <inline-formula><mml:math id="M24" name="1748-7188-9-1-i24" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:math></inline-formula>. Denote by <italic>G</italic><sub>
<italic>i</italic>
</sub> the subnetwork that is induced by all edges having nonzero flow for label <italic>i</italic> (i.e. edges <italic>e</italic> fulfilling <inline-formula><mml:math id="M25" name="1748-7188-9-1-i25" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:math></inline-formula>). Denote by <italic>T</italic><sub>
<italic>i</italic>
</sub>(<italic>v</italic>) the set of terminals in <italic>T</italic><sub>
<italic>i</italic>
</sub> that are reachable from <italic>v</italic> in <italic>G</italic><sub>
<italic>i</italic>
</sub>, and let <italic>t</italic>&#x02009;&#x02208;&#x02009;<italic>T</italic><sub>
<italic>i</italic>
</sub>(<italic>v</italic>). By applying the above argument for each of the nodes between <italic>v</italic> and <italic>t</italic>, we infer that there is a single path that carries flow from <italic>v</italic> to <italic>t</italic> in <italic>G</italic><sub>
<italic>i</italic>
</sub>, and that all of <italic>t</italic>&#x02019;s incoming flow (of label <italic>i</italic>) must pass through <italic>v</italic>. Every <italic>t</italic>&#x02009;&#x02208;&#x02009;<italic>T</italic><sub>
<italic>i</italic>
</sub>(<italic>v</italic>) absorbs a flow of 1 and therefore from the flow-preserving constraint (4), <inline-formula><mml:math id="M26" name="1748-7188-9-1-i26" overflow="scroll"><mml:munder><mml:mrow><mml:mo mathsize="big">&#x02211;</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mtext mathvariant="italic">In</mml:mtext><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo></mml:math></inline-formula>. The other direction holds too since the flow of label <italic>i</italic> that <italic>v</italic> sends can be collected only by terminals in <italic>T</italic><sub>
<italic>i</italic>
</sub>(<italic>v</italic>). Thus, we conclude that all <inline-formula><mml:math id="M27" name="1748-7188-9-1-i27" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>&#x02019;s in this sum equal 0 except for a single element which equals |<italic>T</italic><sub>
<italic>i</italic>
</sub>(<italic>v</italic>)|, i.e. all of them are integers.</p><p>To prove that all <italic>z</italic><sub>
<italic>e</italic>
</sub>&#x02019;s are integral, consider some edge <italic>e</italic>&#x02009;&#x02208;&#x02009;<italic>E</italic>. If there exists <italic>i</italic>&#x02009;&#x02208;&#x02009;<italic>L</italic> such that <inline-formula><mml:math id="M28" name="1748-7188-9-1-i28" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> then from constraint (2) it follows that <italic>z</italic><sub>
<italic>e</italic>
</sub>&#x02009;=&#x02009;1. Otherwise, the equality <italic>z</italic><sub>
<italic>e</italic>
</sub>&#x02009;=&#x02009;0 follows from the minimality of the solution.</p></sec></sec><sec><title>Heuristic data reduction and runtime analysis</title><p>Since solving an ILP is a time consuming task, we devised a heuristic method for filtering the input network, aiming to capture those edges that the MKL optimal solution is more likely to use. Specifically, we focused on (directed) edges that lie on a near shortest path &#x02013; up to <italic>d</italic> edges longer than a shortest path &#x02013; between the anchor and any of the terminals.</p><p>In order to support this heuristic and find a value for <italic>d</italic> that achieves a satisfying balance between running time and optimality, we tested the performance of our ILP algorithm on the influenza dataset (which is the more computationally expensive dataset described in the Experimental results Section) with <italic>d</italic>&#x02009;=&#x02009;0, <italic>d</italic>&#x02009;=&#x02009;1, <italic>d</italic>&#x02009;=&#x02009;2, and without the heuristic filtering. These parameter values induced input background networks of 0.01<italic>x</italic>, 0.1<italic>x</italic>, 0.5<italic>x</italic> and <italic>x</italic> edges, respectively, where <italic>x</italic>&#x0223c;80,000 is the complete network size. Using <italic>d</italic>&#x02009;=&#x02009;1, six hours were sufficient to achieve an optimal solution of cost (combined number of labels and edges) 275. Using <italic>d</italic>&#x02009;=&#x02009;2, a solution of similar quality (cost 272) was achieved after 48 hours. This execution also proved that the optimal solution with <italic>d</italic>&#x02009;=&#x02009;2 has a lower bound of at least 262, showing that the theoretical improvement over <italic>d</italic>&#x02009;=&#x02009;1 is limited to less than 5%. This analysis motivated our selection of <italic>d</italic>&#x02009;=&#x02009;1 for the experimental evaluation that follows. Further, it is interesting to note that with this choice, the convergence toward the optimum is very fast: in three hours one could achieve a solution that is less than 1% behind the optimum (though this time period was not enough to prove this approximation guarantee). This is in large contrast to the settings of <italic>d</italic>&#x02009;&#x02265;&#x02009;2 that are characterized by very slow convergence (&#x0003e;&#x02009;10% approximation ratio after 24 hours). The results are summarized in Figure <xref ref-type="fig" rid="F3">3</xref>.</p><fig id="F3" position="float"><label>Figure 3</label><caption><p><bold>Dependency of the MKL algorithm performance on the heuristic filtering.</bold> This figure compares the performance of the MKL algorithm with respect to different values of the heuristic data reduction parameter <italic>d</italic> and when setting different limits on the running time. For each value of <italic>d</italic> (0, 1, 2 or no heuristic filtering), two plots with the same color are displayed: the top plot (triangle symbols) shows the cost of the achieved solution after the specified number of hours (or less); the bottom plot (circles) shows the best proven theoretical lower bound on an optimal solution as reported by the same execution. Note that for <italic>d</italic>&#x02009;=&#x02009;0 these two (black) plots fully coincide.</p></caption><graphic xlink:href="1748-7188-9-1-3"/></fig></sec><sec><title>Performance evaluation</title><p>We used the commercial IBM ILOG CPLEX optimizer to solve the ILP and instructed it to accept approximate solutions that deviate by at most 5% from the optimum, enabling our executions to end within less than two hours.</p><p>We evaluated a solution subnetwork using both network-based and biological measures. The network-based measures included the number of labels, number of edges and a <italic>homogeneity</italic> score. To compute the homogeneity score of a node <italic>v</italic>, we examined the frequencies of all subsets of labels assigned to terminals under <italic>v</italic>. The score of <italic>v</italic> was defined as the highest frequency found divided by the number of terminals under <italic>v</italic>. The homogeneity score of the subnetwork was then defined as the average over all nodes that span at least two terminals. To quantify the biological significance of the reconstructed subnetworks, we measured the functional enrichment of their internal nodes (non-input nodes) with respect to validation sets that pertain to the process in question. In addition, we provide expert analysis of the subnetworks.</p><p>We compared the performance of our method to that of the state-of-the-art ANAT reconstruction tool [<xref ref-type="bibr" rid="B4">4</xref>], which was shown to outperform many existing tools in anchored reconstruction scenarios. For each dataset, we applied ANAT (with its default parameters, and without the heuristic filtering) to each condition separately, then unified the results to get an integrated subnetwork. We labeled the solution straightforwardly: an edge <italic>e</italic> was labeled <italic>i</italic> if <italic>e</italic> participated in the subnetwork that was constructed for condition <italic>i</italic>. We also compared our results to those attained by computing a Steiner tree over the terminals of all conditions together, implemented using the same ILP algorithm by setting <italic>&#x003b1;</italic>&#x02009;=&#x02009;0.</p></sec></sec><sec><title>Experimental results</title><p>We tested the performance of our algorithm on two human datasets concerning the cellular response to the influenza virus and ER export regulation. The two datasets were analyzed in the context of a human PPI network reported in [<xref ref-type="bibr" rid="B4">4</xref>] which contains 44,738 (bidirectional) interactions over 10,169 proteins.</p><p>For each of the two datasets, we tested the robustness of our algorithm to different choices of the weighting parameter <italic>&#x003b1;</italic>, observing that the number of edges and labels varied by at most 8% and 4%, respectively, over a wide range of values (0.25&#x02009;&#x02013;&#x02009;0.75). Thus, we chose <italic>&#x003b1;</italic>&#x02009;=&#x02009;0.5 for our analyses in the sequel.</p><sec><title>Response to influenza infection</title><p>We used data on the response to viral infection by the H1N1 influenza strain A/PR/8/34 (&#x02018;PR8&#x02019;) in primary human bronchial epithelial cells [<xref ref-type="bibr" rid="B6">6</xref>]. The dataset contains a collection of 135 virus-human PPIs and gene expression profiles, measured at different time points along the course of the infection. We focused on four time points (the &#x0201c;conditions&#x0201d;) <italic>t</italic>&#x02009;=&#x02009;2, 4, 6, 8 (i.e. <italic>k</italic>&#x02009;=&#x02009;4 labels), in each time point selecting those genes that were differentially expressed above a cutoff of 0.67 [<xref ref-type="bibr" rid="B6">6</xref>]. We did not include time points earlier than <italic>t</italic>=2 or later than <italic>t</italic>&#x02009;=&#x02009;8, as the former had no or very few differentially expressed genes, while the latter induced an order of magnitude larger gene sets that are presumably associated with secondary responses.</p><p>We augmented the human network by the influenza-host PPIs and an auxiliary anchor node (named &#x02018;virus&#x02019;) which we connected to the 10 viral proteins. After the heuristic filtering (using <italic>d</italic>&#x02009;=&#x02009;1), the network contained 1,598 proteins and 8,708 interactions.</p><p>The four terminal sets contained 8,19,19 and 49 proteins, respectively, with 77 total in their union, out of which 57 were reachable from the anchor. The resulting MKL subnetwork, which is shown in Figure <xref ref-type="fig" rid="F4">4</xref>, contains 127 edges over 123 nodes (117 human, 5 viral and the anchor node) with 60 internal (non-input) nodes. This subnetwork is much more compact than the solution suggested by ANAT, which contains 173 nodes out of which 106 are internal. The subnetworks of MKL and ANAT are quite different in terms of node composition, having 31 internal intersecting nodes. A summary of our network-based measures for the subnetworks predicted by our algorithm, ANAT, and the Steiner tree algorithm is given in Table <xref ref-type="table" rid="T1">1</xref>.</p><fig id="F4" position="float"><label>Figure 4</label><caption><p><bold>The MKL subnetwork for the influenza infection data.</bold> Terminal nodes are marked by their corresponding time point: t = 2 - yellow/triangle; t = 4 - green/square; t = 6 - red/hexagon; t = 8 - gray/octagon; more than one time point - cyan oval nodes with thick border. The root is the artificial virus node and the first level is composed solely of viral proteins.</p></caption><graphic xlink:href="1748-7188-9-1-4"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Comparison of network-based measures between MKL, ANAT and the Steiner tree algorithm</p></caption><table frame="hsides" rules="groups" border="1"><colgroup><col align="left"/><col align="center"/><col align="center"/><col align="center"/></colgroup><thead valign="top"><tr><th align="center"><bold>Measure</bold></th><th align="center"><bold>MKL</bold></th><th align="center"><bold>ANAT</bold></th><th align="center"><bold>Steiner</bold></th></tr></thead><tbody valign="top"><tr><td align="center" valign="bottom"><bold>
<italic>Influenza infection</italic>
</bold><hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">No. of labels<hr/></td><td align="center" valign="bottom">158<hr/></td><td align="center" valign="bottom">254<hr/></td><td align="center" valign="bottom">187<hr/></td></tr><tr><td align="center" valign="bottom">No. of edges<hr/></td><td align="center" valign="bottom">122<hr/></td><td align="center" valign="bottom">186<hr/></td><td align="center" valign="bottom">113<hr/></td></tr><tr><td align="center" valign="bottom">Homogeneity score<hr/></td><td align="center" valign="bottom">0.63<hr/></td><td align="center" valign="bottom">0.58<hr/></td><td align="center" valign="bottom">0.57<hr/></td></tr><tr><td align="center" valign="bottom"><bold>
<italic>ER export</italic>
</bold><hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">No. of labels<hr/></td><td align="center" valign="bottom">152<hr/></td><td align="center" valign="bottom">213<hr/></td><td align="center" valign="bottom">163<hr/></td></tr><tr><td align="center" valign="bottom">No. of edges<hr/></td><td align="center" valign="bottom">145<hr/></td><td align="center" valign="bottom">203<hr/></td><td align="center" valign="bottom">144<hr/></td></tr><tr><td align="center">Homogeneity score</td><td align="center">0.88</td><td align="center">0.74</td><td align="center">0.81</td></tr></tbody></table><table-wrap-foot><p>This table compares the subnetworks reconstructed by the MKL, ANAT and Steiner tree algorithms for the viral infecion and the ER export datasets with respect to the following measures: number of labels, number of edges and homogeneity score.</p></table-wrap-foot></table-wrap><p>Next, we scored the enrichments of both subnetworks with viral infection related processes such as: viral reproduction, intracellular receptor mediated signaling pathway and apoptosis. The MKL subnetwork was highly enriched with these processes, outperforming the ANAT and the Steiner subnetworks (Table <xref ref-type="table" rid="T2">2</xref>). In the following we present a detailed analysis of the MKL inferred subnetwork and demonstrate its high predictive power and its ability to characterize viral proteins and host mediators in terms of their temporal effect on their targets. Specifically, we show that this subnetwork suggests that an imbalance in the timing of effect between viral proteins (e.g. M1 and NP) or between host mediators (such as <italic>Smad3</italic> and <italic>UBC</italic>) can reveal their different kinetics of influence on host proteins. This is in large contrast to the results produced by the ANAT tool, which does not provide any timing imbalance among downstream targets of viral proteins or host mediators (data not shown).</p><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Comparison of enrichments between the MKL, ANAT and Steiner tree solutions</p></caption><table frame="hsides" rules="groups" border="1"><colgroup><col align="left"/><col align="center"/><col align="center"/><col align="center"/></colgroup><thead valign="top"><tr><th align="center"><bold>Biological process</bold></th><th align="center"><bold>MKL</bold></th><th align="center"><bold>ANAT</bold></th><th align="left"><bold>Steiner</bold></th></tr></thead><tbody valign="top"><tr><td align="center" valign="bottom"><bold>
<italic>Influenza infection</italic>
</bold><hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">Intracellular receptor mediated<hr/></td><td align="center" valign="bottom">6.5e-10<hr/></td><td align="center" valign="bottom">2.1e-04<hr/></td><td align="center" valign="bottom">1.2e-05<hr/></td></tr><tr><td align="center" valign="bottom">signaling pathway (GO:0030522)<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">Apoptosis (GO:0006915)<hr/></td><td align="center" valign="bottom">3.7e-04<hr/></td><td align="center" valign="bottom">1.7e-04<hr/></td><td align="center" valign="bottom">3.3e-04<hr/></td></tr><tr><td align="center" valign="bottom">Viral reproduction (GO:0016032)<hr/></td><td align="center" valign="bottom">2.5e-03<hr/></td><td align="center" valign="bottom">&#x0003e;0.01<hr/></td><td align="center" valign="bottom">&#x0003e;0.01<hr/></td></tr><tr><td align="center" valign="bottom"><bold>
<italic>ER export</italic>
</bold><hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">Vesicle-mediated transport<hr/></td><td align="center" valign="bottom">1.2e-05<hr/></td><td align="center" valign="bottom">7.6e-04<hr/></td><td align="center" valign="bottom">8.5e-05<hr/></td></tr><tr><td align="center" valign="bottom">(GO:0016192)<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">Cellular membrane organization<hr/></td><td align="center" valign="bottom">1.4e-05<hr/></td><td align="center" valign="bottom">6.6e-05<hr/></td><td align="center" valign="bottom">1.6e-05<hr/></td></tr><tr><td align="center" valign="bottom">(GO:0016044)<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td><td align="center" valign="bottom">&#x000a0;<hr/></td></tr><tr><td align="center" valign="bottom">Intracellular protein transport<hr/></td><td align="center" valign="bottom">9.2e-06<hr/></td><td align="center" valign="bottom">7.8e-06<hr/></td><td align="center" valign="bottom">2.3e-05<hr/></td></tr><tr><td align="center">(GO:0006886)</td><td align="center">&#x000a0;</td><td align="center">&#x000a0;</td><td align="center">&#x000a0;</td></tr></tbody></table><table-wrap-foot><p>This table compares the hypergeometric p-values indicating the significance of the overlap between each of the predicted subnetworks (considering non-input genes only) and the gene sets of GO categories that are of relevance to the investigated biological processes.</p></table-wrap-foot></table-wrap><p>We first present an example of an inferred pathway, selected to demonstrate our MKL approach. The PA-<italic>Rnf5</italic>-<italic>UBC</italic>- <italic>DAXX</italic>-<italic>MX1</italic> and NS1-<italic>SP100</italic>-<italic>MX1</italic> paths are a clear example of a predicted pathway that is well supported by extant experimental findings. It is consistent with the known role of both <italic>DAXX</italic> and <italic>SP100</italic> as major components of the PML bodies which control together the localization of MX1 in distinct nuclear components [<xref ref-type="bibr" rid="B7">7</xref>]. Further, <italic>DAXX</italic> is known to be regulated <italic>in vivo</italic> by ubiquitination through <italic>UBC</italic> and <italic>Rnf5</italic>[<xref ref-type="bibr" rid="B8">8</xref>], supporting our placement of <italic>DAXX</italic> downstream to <italic>UBC</italic>.</p><p>The MKL network shows that the targets of some human proteins have a common temporal behavior, whereas others have different downstream temporal responses. This is consistent with the fact that PPIs naturally represent different mechanisms that might differ in their kinetics. For example, the targets of <italic>Traf2</italic> are mainly early responding genes whereas the targets of <italic>Ccdc33</italic> have longer temporal responses. The early effect of <italic>Traf2</italic> is consistent with the findings that <italic>Traf2</italic> is a signaling transduction kinase protein with fast kinetics. A similar characterization can be applied to other signal transduction proteins such as <italic>Smad3</italic>. Conversely, the <italic>Ccdc33</italic> protein regulates its targets in late time points (6&#x02013;8 hours) by an unknown mechanism. The results here suggest that this mechanism is orders of magnitude slower than phosphorylation. Similarly, the control of <italic>Rnf5</italic> and <italic>UBC</italic> is expected to show fast kinetics through ubiquitination. Nevertheless, we find that all the <italic>Rnf5</italic>&#x02009;/&#x02009;<italic>UBC</italic> 19 targets are controlled in late time points (6&#x02013;8 hours), suggesting a novel temporal (late) control on the activity of <italic>Rnf5</italic>-specific <italic>UBC</italic>-based ubiquitination during the course of influenza infection.</p></sec><sec><title>Regulation of endoplasmic reticulum (ER) export</title><p>The journey of secretory proteins, which make up roughly 30% of the human proteome starts by exit from the ER. Export from the ER is executed by so called COPII vesicles that bud from ER exit sites (ERES). A protein that is of central importance for ERES biogenesis and maintenance is <italic>Sec16A</italic>, a large (~250 kDa) protein that localizes to ERES and interacts with COPII components [<xref ref-type="bibr" rid="B9">9</xref>]. We have recently performed a siRNA screen to test for kinases and phosphatases that regulate the functional organization of the early secretory pathway [<xref ref-type="bibr" rid="B10">10</xref>]. Among the hits identified were 64 kinases/phosphatases that when depleted result in a reduction in the number of ERES. Thus, these are 64 different potential regulators of ER export. More recently, a full genome screen tested for genes that regulate the arrival of a reporter protein from the ER to the cell surface [<xref ref-type="bibr" rid="B11">11</xref>]. There, the depletion of 45 proteins was shown to affect ERES. However, whether the defect in arrival of the reporter to the cell surface was due to an effect on ER export or due to alterations in other organelles along the secretory route (e.g., Golgi apparatus) remains to be determined.</p><p>We applied MKL to these two screens, serving as two &#x0201c;conditions&#x0201d; highlighting different repertoires of ER export signaling-regulatory pathways. As the two screens do not intersect (most likely due to differences in read-outs), there were 109 terminals overall, 85 of them reachable in our human PPI network. Due to its central importance for ER export and ERES formation, we chose <italic>Sec16A</italic> as the anchor for this application. After the heuristic filtering, the network contained 1,907 nodes and 11,329 edges. The resulting MKL subnetwork, which has 145 nodes and 59 internal ones, is depicted in Figure <xref ref-type="fig" rid="F5">5</xref>. In comparison, the ANAT solution contains 190 nodes and 104 internal ones (with 35 internal nodes common to the two solutions). As evident from Table <xref ref-type="table" rid="T1">1</xref>, the MKL solution has a substantially lower cost and is more homogeneous.</p><fig id="F5" position="float"><label>Figure 5</label><caption><p><bold>The MKL subnetwork for the ER export data.</bold> Terminal nodes are colored/shaped according to the screen they were discovered in: [<xref ref-type="bibr" rid="B10">10</xref>] - yellow/triangle, and [<xref ref-type="bibr" rid="B11">11</xref>] - cyan/square.</p></caption><graphic xlink:href="1748-7188-9-1-5"/></fig><p>We assessed the functional enrichment of the MKL subnetwork with biological processes that are of relevance to ER export such as cellular membrane organization, intracellular protein transport and vesicle-mediated transport. All three categories were highly enriched, and the <italic>p</italic>-values attained compare favorably to those computed for the ANAT and the Steiner solutions (Table <xref ref-type="table" rid="T2">2</xref>).</p><p>Interestingly, 4 proteins of the MKL solution are related to autophagy (two of them internal nodes, <italic>p</italic>&#x02009;=&#x02009;0.02). Autophagy is an endomembrane-based cellular process that is responsible for capturing and degradation of surplus organelles and proteins. Links between ER export and autophagy have been proposed [<xref ref-type="bibr" rid="B12">12</xref>] but there is very limited mechanistic insight into this link. The vesicle-mediated transport process includes the <italic>STX17</italic>, <italic>SNAP29</italic> and <italic>ULK1</italic> proteins. The latter is a kinase that initiates the biogenesis of autophagosomes [<xref ref-type="bibr" rid="B13">13</xref>]. <italic>STX17</italic> and <italic>SNAP29</italic> were recently proposed to be involved in autophagy by promoting the formation of ER-mitochondria contact sites and the fusion of autophagosomes with lysosomes [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. As the MKL network was generated with terminals and an anchor that regulate ER export, we propose that this approach could be used to identify the molecular link between secretion and autophagy in the future.</p></sec></sec><sec sec-type="conclusions"><title>Conclusions</title><p>The protein-protein interaction network represents a combination of diverse regulation and interaction mechanisms operating in different conditions and time scales. Integrating such data in a coherent manner to describe a process of interest is a fundamental challenge, which we aim to tackle in this work via a novel ILP-based minimum labeling algorithm. We apply our algorithm to two human datasets and show that it attains compact solutions that capture the dynamics of the data and align well with current knowledge. We expect this type of analysis to gain further momentum as composite datasets spanning multiple conditions and time points continue to accumulate.</p></sec><sec><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec><sec><title>Authors&#x02019; contributions</title><p>AM and RS conceived the study and designed the algorithms. AM implemented the method and performed the computational experiments. IGV and HF performed the biological analyses. All authors read and approved the final manuscript.</p></sec></body><back><sec><title>Acknowledgements</title><p>AM was supported in part by a fellowship from the Edmond J. Safra Center for Bioinformatics at Tel Aviv University.</p><p>RS was supported by a research grant from the Israel Science Foundation (grant no. 241/11).</p></sec><ref-list><ref id="B1"><mixed-citation publication-type="journal"><name><surname>Beisser</surname><given-names>D</given-names></name><name><surname>Klau</surname><given-names>G</given-names></name><name><surname>Dandekar</surname><given-names>T</given-names></name><name><surname>Mueller</surname><given-names>T</given-names></name><name><surname>Dittrich</surname><given-names>M</given-names></name><article-title>BioNet an R-package for the functional analysis of biological networks</article-title><source>Bioinformatics</source><year>2010</year><volume>9</volume><fpage>1129</fpage><lpage>1130</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btq089</pub-id><pub-id pub-id-type="pmid">20189939</pub-id></mixed-citation></ref><ref id="B2"><mixed-citation publication-type="journal"><name><surname>Huang</surname><given-names>S</given-names></name><name><surname>Fraenkel</surname><given-names>E</given-names></name><article-title>
Integrating proteomic, transcriptional, and interactome data reveals hidden components of signaling and regulatory networks</article-title><source>Sci Signal</source><year>2009</year><volume>9</volume><issue>81</issue><fpage>40</fpage></mixed-citation></ref><ref id="B3"><mixed-citation publication-type="journal"><name><surname>Lotem</surname><given-names>E</given-names></name><name><surname>Riva</surname><given-names>L</given-names></name><name><surname>Su</surname><given-names>L</given-names></name><name><surname>Gitler</surname><given-names>A</given-names></name><name><surname>Cashikar</surname><given-names>A</given-names></name><name><surname>King</surname><given-names>O</given-names></name><name><surname>Auluck</surname><given-names>P</given-names></name><name><surname>Geddie</surname><given-names>M</given-names></name><name><surname>Valastyan</surname><given-names>J</given-names></name><name><surname>Karger</surname><given-names>D</given-names></name><name><surname>Lindquist</surname><given-names>S</given-names></name><name><surname>Fraenkel</surname><given-names>E</given-names></name><article-title>Bridging high-throughput genetic and transcriptional data reveals cellular responses to alpha-synuclein toxicity</article-title><source>Nature Genet</source><year>2009</year><volume>9</volume><fpage>316</fpage><lpage>323</lpage><pub-id pub-id-type="doi">10.1038/ng.337</pub-id><pub-id pub-id-type="pmid">19234470</pub-id></mixed-citation></ref><ref id="B4"><mixed-citation publication-type="journal"><name><surname>Yosef</surname><given-names>N</given-names></name><name><surname>Zalckvar</surname><given-names>E</given-names></name><name><surname>Rubinstein</surname><given-names>A</given-names></name><name><surname>Homilius</surname><given-names>M</given-names></name><name><surname>Atias</surname><given-names>N</given-names></name><name><surname>Vardi</surname><given-names>L</given-names></name><name><surname>Berman</surname><given-names>I</given-names></name><name><surname>Zur</surname><given-names>H</given-names></name><name><surname>Kimchi</surname><given-names>A</given-names></name><name><surname>Ruppin</surname><given-names>E</given-names></name><name><surname>Sharan</surname><given-names>R</given-names></name><article-title>ANAT a tool for constructing and analyzing functional protein networks</article-title><source>Sci Signal</source><year>2011</year><volume>9</volume><issue>196</issue><fpage>1</fpage><comment>doi:10.1126/scisignal.2001935</comment><pub-id pub-id-type="pmid">21325206</pub-id></mixed-citation></ref><ref id="B5"><mixed-citation publication-type="other"><name><surname>Garey</surname><given-names>M</given-names></name><name><surname>Johnson</surname><given-names>D</given-names></name><source>Computers and Intractability A Guide to the Theory of NP-Completeness San Francisco: W</source><year>1979</year></mixed-citation></ref><ref id="B6"><mixed-citation publication-type="journal"><name><surname>Shapira</surname><given-names>S</given-names></name><name><surname>Viks</surname><given-names>I</given-names></name><name><surname>Shum</surname><given-names>B</given-names></name><name><surname>Dricot</surname><given-names>A</given-names></name><name><surname>Degrace</surname><given-names>M</given-names></name><name><surname>Liguo</surname><given-names>W</given-names></name><name><surname>Gupta</surname><given-names>P</given-names></name><name><surname>Hao</surname><given-names>T</given-names></name><name><surname>Silver</surname><given-names>S</given-names></name><name><surname>Root</surname><given-names>D</given-names></name><name><surname>Hill</surname><given-names>D</given-names></name><name><surname>Regev</surname><given-names>A</given-names></name><name><surname>Hacohen</surname><given-names>N</given-names></name><article-title>A physical and regulatory map of host-influenza interactions reveals pathways in H1N1 infection</article-title><source>Cell</source><year>2009</year><volume>9</volume><issue>7</issue><fpage>1255</fpage><lpage>1267</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2009.12.018</pub-id><pub-id pub-id-type="pmid">20064372</pub-id></mixed-citation></ref><ref id="B7"><mixed-citation publication-type="journal"><name><surname>Engelhardt</surname><given-names>O</given-names></name><name><surname>Sirma</surname><given-names>H</given-names></name><name><surname>Pandolfi</surname><given-names>P</given-names></name><name><surname>Haller</surname><given-names>O</given-names></name><article-title>Mx1 GTPase accumulates in distinct nuclear domains and inhibits influenza a virus in cells that lack promyelocytic leukaemia protein nuclear bodies</article-title><source>J Gen Virol</source><year>2004</year><volume>9</volume><issue>8</issue><fpage>2315</fpage><lpage>2326</lpage><pub-id pub-id-type="doi">10.1099/vir.0.79795-0</pub-id><pub-id pub-id-type="pmid">15269373</pub-id></mixed-citation></ref><ref id="B8"><mixed-citation publication-type="journal"><name><surname>Wagner</surname><given-names>S</given-names></name><name><surname>Beli</surname><given-names>P</given-names></name><name><surname>Weinert</surname><given-names>B</given-names></name><name><surname>Nielsen</surname><given-names>M</given-names></name><name><surname>Cox</surname><given-names>J</given-names></name><name><surname>Mann</surname><given-names>M</given-names></name><name><surname>Choudhary</surname><given-names>C</given-names></name><article-title>A proteome-wide, quantitative survey of in vivo ubiquitylation sites reveals widespread regulatory roles</article-title><source>Mol Cell Proteomics</source><year>2011</year><volume>9</volume><issue>10</issue><comment>doi:10.1074/mcp.M111.013284</comment></mixed-citation></ref><ref id="B9"><mixed-citation publication-type="journal"><name><surname>Watson</surname><given-names>P</given-names></name><name><surname>Townley</surname><given-names>A</given-names></name><name><surname>Koka</surname><given-names>P</given-names></name><name><surname>Palmer</surname><given-names>K</given-names></name><name><surname>Stephens</surname><given-names>D</given-names></name><article-title>Sec16 defines endoplasmic reticulum exit sites and is required for secretory cargo export in mammalian cells</article-title><source>Traffic</source><year>2006</year><volume>9</volume><issue>12</issue><fpage>1678</fpage><lpage>1687</lpage><pub-id pub-id-type="doi">10.1111/j.1600-0854.2006.00493.x</pub-id><pub-id pub-id-type="pmid">17005010</pub-id></mixed-citation></ref><ref id="B10"><mixed-citation publication-type="journal"><name><surname>Farhan</surname><given-names>H</given-names></name><name><surname>Wendeler</surname><given-names>M</given-names></name><name><surname>Mitrovic</surname><given-names>S</given-names></name><name><surname>Fava</surname><given-names>E</given-names></name><name><surname>Silberberg</surname><given-names>Y</given-names></name><name><surname>Sharan</surname><given-names>R</given-names></name><name><surname>Zerial</surname><given-names>M</given-names></name><name><surname>Hauri</surname><given-names>H</given-names></name><article-title>MAPK signaling to the early secretory pathway revealed by kinase/phosphatase functional screening</article-title><source>J Cell Biol</source><year>2010</year><volume>9</volume><fpage>997</fpage><lpage>1011</lpage><pub-id pub-id-type="doi">10.1083/jcb.200912082</pub-id><pub-id pub-id-type="pmid">20548102</pub-id></mixed-citation></ref><ref id="B11"><mixed-citation publication-type="journal"><name><surname>Simpson</surname><given-names>J</given-names></name><name><surname>Joggerst</surname><given-names>B</given-names></name><name><surname>Laketa</surname><given-names>V</given-names></name><name><surname>Verissimo</surname><given-names>F</given-names></name><name><surname>Cetin</surname><given-names>C</given-names></name><name><surname>Erfle</surname><given-names>H</given-names></name><name><surname>Bexiga</surname><given-names>M</given-names></name><name><surname>Singan</surname><given-names>V</given-names></name><name><surname>H&#x000e9;rich&#x000e9;</surname><given-names>J</given-names></name><name><surname>Neumann</surname><given-names>B</given-names></name><name><surname>Mateos</surname><given-names>A</given-names></name><name><surname>Blake</surname><given-names>J</given-names></name><name><surname>Bechtel</surname><given-names>S</given-names></name><name><surname>Benes</surname><given-names>V</given-names></name><name><surname>Wiemann</surname><given-names>S</given-names></name><name><surname>Ellenberg</surname><given-names>J</given-names></name><name><surname>Pepperkok</surname><given-names>R</given-names></name><article-title>Genome-wide RNAi screening identifies human proteins with a regulatory function in the early secretory pathway</article-title><source>Nat Cell Biol</source><year>2012</year><volume>9</volume><issue>7</issue><fpage>764</fpage><lpage>774</lpage><pub-id pub-id-type="doi">10.1038/ncb2510</pub-id><pub-id pub-id-type="pmid">22660414</pub-id></mixed-citation></ref><ref id="B12"><mixed-citation publication-type="journal"><name><surname>Ishihara</surname><given-names>N</given-names></name><name><surname>Hamasaki</surname><given-names>M</given-names></name><name><surname>Yokota</surname><given-names>S</given-names></name><name><surname>Suzuki</surname><given-names>K</given-names></name><name><surname>Kamada</surname><given-names>Y</given-names></name><name><surname>Kihara</surname><given-names>A</given-names></name><name><surname>Yoshimori</surname><given-names>T</given-names></name><name><surname>Noda</surname><given-names>T</given-names></name><name><surname>Ohsumi</surname><given-names>Y</given-names></name><article-title>Autophagosome requires specific early sec proteins for its formation and NSF/SNARE for vacuolar fusion</article-title><source>Mol Biol Cell</source><year>2001</year><volume>9</volume><issue>11</issue><fpage>3690</fpage><lpage>3702</lpage><pub-id pub-id-type="doi">10.1091/mbc.12.11.3690</pub-id><pub-id pub-id-type="pmid">11694599</pub-id></mixed-citation></ref><ref id="B13"><mixed-citation publication-type="journal"><name><surname>Mizushima</surname><given-names>N</given-names></name><article-title>The role of the Atg1/ULK1 complex in autophagy regulation</article-title><source>Curr Opin Cell Biol</source><year>2010</year><volume>9</volume><issue>2</issue><fpage>132</fpage><lpage>139</lpage><pub-id pub-id-type="doi">10.1016/j.ceb.2009.12.004</pub-id><pub-id pub-id-type="pmid">20056399</pub-id></mixed-citation></ref><ref id="B14"><mixed-citation publication-type="journal"><name><surname>Hamasaki</surname><given-names>M</given-names></name><name><surname>Furuta</surname><given-names>N</given-names></name><name><surname>Matsuda</surname><given-names>A</given-names></name><name><surname>Nezu</surname><given-names>A</given-names></name><name><surname>Yamamoto</surname><given-names>A</given-names></name><name><surname>Fujita</surname><given-names>N</given-names></name><name><surname>Oomori</surname><given-names>H</given-names></name><name><surname>Noda</surname><given-names>T</given-names></name><name><surname>Haraguchi</surname><given-names>T</given-names></name><name><surname>Hiraoka</surname><given-names>Y</given-names></name><name><surname>Amano</surname><given-names>A</given-names></name><name><surname>Yoshimori</surname><given-names>T</given-names></name><article-title>Autophagosomes form at ER-mitochondria contact sites</article-title><source>Nature</source><year>2013</year><volume>9</volume><issue>7441</issue><fpage>389</fpage><lpage>393</lpage><pub-id pub-id-type="doi">10.1038/nature11910</pub-id><pub-id pub-id-type="pmid">23455425</pub-id></mixed-citation></ref><ref id="B15"><mixed-citation publication-type="journal"><name><surname>Itakura</surname><given-names>E</given-names></name><name><surname>Mizushima</surname><given-names>N</given-names></name><article-title>Syntaxin 17 the autophagosomal SNARE</article-title><source>Autophagy</source><year>2013</year><volume>9</volume><issue>6</issue><fpage>917</fpage><lpage>919</lpage><pub-id pub-id-type="doi">10.4161/auto.24109</pub-id><pub-id pub-id-type="pmid">23466629</pub-id></mixed-citation></ref></ref-list></back></article>
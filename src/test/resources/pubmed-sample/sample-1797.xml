
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">19208110</article-id><article-id pub-id-type="pmc">2648791</article-id><article-id pub-id-type="publisher-id">1471-2105-10-S1-S11</article-id><article-id pub-id-type="doi">10.1186/1471-2105-10-S1-S11</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group></article-categories><title-group><article-title>Simultaneous phylogeny reconstruction and multiple sequence alignment</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Yue</surname><given-names>Feng</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>fyue@ucsd.edu</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Shi</surname><given-names>Jian</given-names></name><xref ref-type="aff" rid="I2">2</xref><email>shi2@engr.sc.edu</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Tang</surname><given-names>Jijun</given-names></name><xref ref-type="aff" rid="I2">2</xref><email>jtang@cse.sc.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Ludwig Institute for Cancer Research, UCSD School of Medicine, 9500 Gilman Drive, La Jolla, CA 92093, USA</aff><aff id="I2"><label>2</label>Department of Computer Science and Engineering, University of South Carolina, Columbia, SC 29208, USA</aff><pub-date pub-type="collection"><year>2009</year></pub-date><pub-date pub-type="epub"><day>30</day><month>1</month><year>2009</year></pub-date><volume>10</volume><issue>Suppl 1</issue><supplement><named-content content-type="supplement-title">Selected papers from the Seventh Asia-Pacific Bioinformatics Conference (APBC 2009)</named-content><named-content content-type="supplement-editor">Michael Q Zhang, Michael S Waterman and Xuegong Zhang</named-content></supplement><fpage>S11</fpage><lpage>S11</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10/S1/S11"/><permissions><copyright-statement>Copyright &#x000a9; 2009 Yue et al; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2009</copyright-year><copyright-holder>Yue et al; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Yue
               Feng
               
               fyue@ucsd.edu
            </dc:author><dc:title>
            Simultaneous phylogeny reconstruction and multiple sequence alignment
         </dc:title><dc:date>2009</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 10(Suppl 1): S11-. (2009)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2009)10:Suppl 1&#x0003c;S11&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>A phylogeny is the evolutionary history of a group of organisms. To date, sequence data is still the most used data type for phylogenetic reconstruction. Before any sequences can be used for phylogeny reconstruction, they must be aligned, and the quality of the multiple sequence alignment has been shown to affect the quality of the inferred phylogeny. At the same time, all the current multiple sequence alignment programs use a guide tree to produce the alignment and experiments showed that good guide trees can significantly improve the multiple alignment quality.</p></sec><sec><title>Results</title><p>We devise a new algorithm to simultaneously align multiple sequences and search for the phylogenetic tree that leads to the best alignment. We also implemented the algorithm as a C program package, which can handle both DNA and protein data and can take simple cost model as well as complex substitution matrices, such as PAM250 or BLOSUM62. The performance of the new method are compared with those from other popular multiple sequence alignment tools, including the widely used programs such as ClustalW and T-Coffee. Experimental results suggest that this method has good performance in terms of both phylogeny accuracy and alignment quality.</p></sec><sec><title>Conclusion</title><p>We present an algorithm to align multiple sequences and reconstruct the phylogenies that minimize the alignment score, which is based on an efficient algorithm to solve the median problems for three sequences. Our extensive experiments suggest that this method is very promising and can produce high quality phylogenies and alignments.</p></sec></abstract><conference><conf-date>13&#x02013;16 January 2009</conf-date><conf-name>The Seventh Asia Pacific Bioinformatics Conference (APBC 2009)</conf-name><conf-loc>Beijing, China</conf-loc></conference></article-meta></front><body><sec><title>Background</title><p>Multiple sequence alignment is one of the most fundamental and important issues in computational biology, and its applications include homologous genes identification, protein structure prediction and phylogenetic reconstruction. The most popular and commonly used approach for multiple sequence alignment is progressive alignment. Basically, it works by aligning the two closest sequences first and adding the remaining sequences one by one until all sequences have been aligned. ClustalW [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>] is one of the best-known sequence alignment tools based on progressive approach. The main problem with ClustalW is that the initial pairwise alignments are fixed, and early errors cannot be corrected later, even if those alignments conflict with sequences added later [<xref ref-type="bibr" rid="B3">3</xref>]. T-Coffee is another popular sequence alignment tool and can be viewed as a variant of the progressive method. It has been reported to get the highest scores on BAliBASE benchmark database [<xref ref-type="bibr" rid="B4">4</xref>]. The significant improvement is achieved by pre-processing a data set of all pair-wise alignments and thus allowing for much better use of information in early stages. Roshan et al. [<xref ref-type="bibr" rid="B5">5</xref>] later showed that the quality of progressive alignment can be improved by using high-quality guide trees.</p><p>On the other hand, phylogeny is the evolutionary history among organisms. To date, sequence data is still the most used data type for phylogenetic reconstruction, and Maximum Parsimony (MP) and Maximum Likelihood (ML) are commonly used as the optimization criteria for reconstructing phylogenies. The most common approach for phylogenetic analysis is usually a two-step process: first, the input DNA or protein sequences are aligned with a multiple sequence alignment program, such as ClustalW and T-Coffee; then, the phylogeny will be inferred from the alignment using tools such as PAUP and RAxML. Generally speaking, most phylogenetic reconstruction methods assume a fixed alignment of the input sequences, which is known to have impact on the accuracy of the inferred phylogeny [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B7">7</xref>]. A set of new methods using direct optimization approach have attracted much attention in the past several years, because such approach requires no prior knowledge of multiple sequence alignment. POY [<xref ref-type="bibr" rid="B8">8</xref>] is one of the best known direct optimization methods. However simulations showed that it is inferior to the traditional approach of using MP or ML on aligned sequences [<xref ref-type="bibr" rid="B9">9</xref>], as well as on the accuracy of inferred phylogenies [<xref ref-type="bibr" rid="B10">10</xref>]. In this paper, we will present a new direct optimization method that is based on affine gap models and uses an iterative approach solving many instances of median problems of three sequences. Our simulations show that this method is superior to the traditional approach of phylogenetic reconstruction based on prior alignment; while for sequences with high substitution rates, it is also able to produce better multiple sequence alignment than those widely used sequence alignment tools.</p><sec><title>Multiple sequence alignment</title><p>An important way to compare multiple sequences is <italic>tree alignment</italic>, which is motivated by the fact that in most cases the sequences are not independent of each other but rather related by a evolutionary tree [<xref ref-type="bibr" rid="B11">11</xref>]. The tree alignment problem was developed principally by Sankoff, who also proposed the first exact (exponential-time) algorithm [<xref ref-type="bibr" rid="B12">12</xref>] via dynamic programming.</p><p>However, finding sequence assignment of the internal nodes that maximizes the similarity score is NP-hard [<xref ref-type="bibr" rid="B13">13</xref>]. Various approximation algorithms have also been designed to heuristically compute tree alignments and phylogenies, such as TAAR [<xref ref-type="bibr" rid="B14">14</xref>] and GESTALT [<xref ref-type="bibr" rid="B15">15</xref>]. All of these heuristics compute the alignment along a given tree [<xref ref-type="bibr" rid="B16">16</xref>] or a simple tree such as the neighbor-joining [<xref ref-type="bibr" rid="B17">17</xref>] tree and minimum spanning tree [<xref ref-type="bibr" rid="B15">15</xref>].</p><p>Tree alignment can be further improved with the iterative method proposed by [<xref ref-type="bibr" rid="B18">18</xref>]. For any binary tree, each internal node has three neighbors. Re-optimization for the internal nodes can be achieved by iteratively relabeling each of them using the three neighboring nodes. The process will stop when no further improvement is possible. In our experiment, the tree will always converge after only several iterations. Therefore, how to compute a high quality alignment for three sequences and infer their internal sequence is essential.</p></sec><sec><title>Median problem of three sequences</title><p>For <italic>n </italic>sequences {<italic>S</italic><sub>1</sub>, <italic>S</italic><sub>2</sub>,...,<italic>S</italic><sub><italic>n</italic></sub>}, the <italic>median problem </italic>is to find a sequence <italic>S</italic><sub>0 </sub>such that <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1471-2105-10-S1-S11-i1" overflow="scroll"><mml:semantics><mml:mrow><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mn>0</mml:mn><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:semantics></mml:math></inline-formula> is minimized, where <italic>d</italic><sub>0<italic>i </italic></sub>is the distance between <italic>S</italic><sub>0 </sub>and <italic>S</italic><sub><italic>i</italic></sub>. When <italic>n </italic>= 3 we will call this the <italic>median problem of three</italic>, or just the <italic>median problem</italic>. The median problem is of particular importance since the smallest binary tree has only three leaves. Gotoh [<xref ref-type="bibr" rid="B19">19</xref>] presented the first three sequences alignment algorithm under affine gap model. Powell et al. [<xref ref-type="bibr" rid="B20">20</xref>] presented an algorithm to infer optimal alignments based on tree score by employing Finite State Machines (FSM), which are explicitly used for the generation of the three sequences from a parent sequence. However, the running time and memory space usage in both algorithms are <italic>O</italic>(<italic>n</italic><sup>3</sup>), where <italic>n </italic>is the length of the sequence. The limitation is obvious &#x02013; huge demand of memory space makes it impossible to work for sequences with length of more than a couple of hundred characters. For example, when <italic>n </italic>= 300, the total memory usage will be around 3 G bytes, and when <italic>n </italic>= 1000, the total memory usage will be over 100 G bytes, which are way over current workstation's capacity.</p><p>Powell et al. [<xref ref-type="bibr" rid="B20">20</xref>] presented another algorithm to tackle the memory usage problem. The memory complexity of the new version is <italic>O</italic>(<italic>d</italic><sup>3</sup>), where d is the tree score of the alignment. It is highly efficient when <italic>d </italic>&#x0003c;&#x0003c;<italic>n</italic>, which requires the input sequences be very similar, and the cost model be simple. Thus their algorithm cannot use complex substitution matrix such as PAM [<xref ref-type="bibr" rid="B21">21</xref>] or BLOSUM [<xref ref-type="bibr" rid="B22">22</xref>], where the cost of substitutions can be very high, resulting in very large distances <italic>d </italic>that can easily grow much larger than <italic>n</italic>. Later, Yue and Tang [<xref ref-type="bibr" rid="B23">23</xref>] proposed an algorithm that solved the high memory usage by applying a divide-and-conquer strategy. This median solver reduces the memory usage to <italic>O</italic>(<italic>n</italic><sup>2</sup>) while still producing the optimal alignment, which will be used as the core of our method presented in this paper.</p></sec></sec><sec sec-type="methods"><title>Methods</title><sec><title>Algorithm overview</title><p>Our new algorithm takes <italic>k </italic>un-aligned sequences as input and conducts a search to find the best tree with lowest score. It then reports this tree as the phylogeny. As a by-product of this procedure, we will also produce a multiple alignment with respect to the best tree. There are two major components in this algorithm: 1) a procedure to score a given tree and produce alignment; and 2) a strategy to find the best tree from all possible trees. For a tree with <italic>k </italic>leaf nodes, we can assign each leaf (external) node with one of the given sequences. When the sequences of all <italic>k </italic>- 2 internal nodes are also known, we can easily obtain the <italic>tree score </italic>by summing all edge lengths induced by the pairwise alignment score between the two sequences at both ends of the edge. However, since we do not know any information about the internal sequences, we must explicitly <italic>label </italic>the internal nodes with sequences that produce the minimum tree score, which is computationally very hard. One should note that unlike some other alignment packages, we assume matches to have zero cost, and mismatch and gaps penalties to be positive, thus the best alignment will have the smallest score.</p></sec><sec><title>Scoring a given tree</title><p>For a given tree, each input sequence is assigned to a leaf node with respect to the tree topology. Our strategy for tree labeling and scoring consists of two main steps: 1) initialize each internal node with some sequence; 2) iteratively refine the internal sequences until no further change occurs.</p><p>We need to assign each internal node an initial sequence to start our scoring procedure. This can be done by simply assigning each internal node a random string of DNA or protein sequences. However, other complex procedures will yield much better results. In our algorithm, a better initialization method is devised by assigning each internal node as the median solution from its three nearest leaves (in term of topology), using the median solvers discussed in the next section. We will arbitrarily pick one set of leaves if there are multiple choices of nearest neighboring leaves.</p><sec><title>Solving the median problem</title><p>The inputs to the median problem are three sequences, <italic>A</italic>, <italic>B </italic>and <italic>C </italic>of length <italic>X</italic>, <italic>Y </italic>and <italic>Z </italic>respectively. The output is three aligned sequences, <italic>A'</italic>, <italic>B' </italic>and <italic>C' </italic>of the same length <italic>L</italic>, as well as an aligned median sequence <italic>M' </italic>(with length <italic>L</italic>). The median sequence <italic>M </italic>can then be obtained by simply removing all gaps from <italic>M'</italic>.</p><p>There is a straight-forward solution for the median problem using dynamic programming technique [<xref ref-type="bibr" rid="B20">20</xref>]. Assume each of the three sequences is generated independently from their common parent sequence (the median) by a three-state Finite State Machine (FSM), and the possible states for the FSMs are I (insert), D (delete) and M (match/mismatch). The problem of aligning sequences is then transformed into finding how the aligned sequences are generated. At each site in the aligned sequences, there are 27 (3<sup>3</sup>) possible combinations of states (MMM, IMD, ...). We can construct a cube of size <italic>X </italic>&#x000d7; <italic>Y </italic>&#x000d7; <italic>Z </italic>for each combination of states, and the result can be computed directly and is optimal. However, the time and the memory complexities of this simple algorithm are both O(<italic>n</italic><sup>3</sup>), where <italic>n </italic>is the length of the input sequences. Thus, it is restricted by the high demand of memory usage and can only work on sequences of less than a few hundred characters.</p><p>Myers et al. [<xref ref-type="bibr" rid="B24">24</xref>] presented a linear space algorithm for pairwise alignment using affine gap costs. Our algorithm uses a similar divide-and-conquer approach to split the three-dimensional cube. Let <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1471-2105-10-S1-S11-i2" overflow="scroll"><mml:semantics><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:semantics></mml:math></inline-formula>, the plane defined by <italic>i </italic>will cut the cube into two halves (Figure <xref ref-type="fig" rid="F1">1</xref> left), and we need to find the <italic>midpoint </italic>on plane <italic>i </italic>where the final alignment passes through. Once the midpoint is identified, we will apply the above procedure to the two small cubes, one defined by points (0, 0, 0) and (<italic>i</italic>, <italic>j</italic>, <italic>k</italic>), and the other by (<italic>i</italic>, <italic>j</italic>, <italic>k</italic>) and (<italic>X</italic>, <italic>Y</italic>, <italic>Z</italic>) (Figure <xref ref-type="fig" rid="F1">1</xref> right). The process will be executed recursively until boundary conditions are encountered [<xref ref-type="bibr" rid="B23">23</xref>].</p><fig position="float" id="F1"><label>Figure 1</label><caption><p>How to split a 3-D cube.</p></caption><graphic xlink:href="1471-2105-10-S1-S11-1"/></fig><p>The exact median solver can produce optimal alignment using <italic>O</italic>(<italic>n</italic><sup>2</sup>) memory space, which makes it possible to align sequences with several thousand characters. However, the computation time remains <italic>O</italic>(<italic>n</italic><sup>3</sup>) and it may take several hours to produce an exact median for sequences of length around one thousand characters. Thus this exact solver is not satisfactory for large-scale sequence comparison. To handle longer sequences, we also developed a simple and fast heuristic solution as a substitute. It works as follows: pick up and align the closest two sequences of the three input sequences, and then align the third sequence with the pairwise alignment of the two. The median sequence can be inferred by a consensus vote at each site of the alignment of the three sequences. The time and space complexities of this procedure are both <italic>O</italic>(<italic>n</italic><sup>2</sup>). As shown in the section of experimental results, although the resulted alignment and internal sequence are not as good as those found by the exact median version, it is thousands of times faster and can be used to produce very high quality phylogenies.</p></sec><sec><title>Iterative refinement</title><p>No matter how we obtain the initial internal sequences, they are surely very far away from optimal solutions, thus we must refine these sequences. Inspired by BPAnalysis [<xref ref-type="bibr" rid="B25">25</xref>] and GRAPPA [<xref ref-type="bibr" rid="B26">26</xref>] for genome rearrangement analysis, we devised an iterative refinement procedure which works as the following:</p><p>&#x02022; For each internal node <italic>S</italic><sub><italic>i </italic></sub>in the tree with a sequence assignment <italic>M</italic><sub><italic>i</italic></sub>, we compute a new sequence <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1471-2105-10-S1-S11-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:msup><mml:mi>M</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula> with its three neighboring nodes (internal and external), using the median procedure described above. If there is any gap in the new node, we will remove all gaps so the next median problems still deal with gapless sequences.</p><p>&#x02022; If the sum of the three new edge lengths is improved (i.e., lower value than the previous sum), we replace the previous assignment of <italic>S</italic><sub><italic>i </italic></sub>using the new computed sequence <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1471-2105-10-S1-S11-i3" overflow="scroll"><mml:semantics><mml:mrow><mml:msub><mml:msup><mml:mi>M</mml:mi><mml:mo>&#x02032;</mml:mo></mml:msup><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:semantics></mml:math></inline-formula>. Otherwise, we keep the previous assignment (<italic>M</italic><sub><italic>i</italic></sub>) on <italic>S</italic><sub><italic>i</italic></sub>.</p><p>&#x02022; Starting from the root node, we can repeatedly relabel each internal nodes using the above two steps until no further improvement is possible.</p><p>Our method iterates the internal nodes through a depth-first procedure, although a breadth-first procedure can also be used. If the tree is un-rooted, we can randomly pick an internal node as the root. In our experiments, we found that this procedure is very robust and generally requires only three to four iterations, and the impact of picking different roots is negligible.</p></sec><sec><title>Output final tree alignment</title><p>Now we have a fully labeled tree with each internal and external node assigned a sequence, thus we can compute the final tree score by simply adding all edge scores. Each edge score can be obtained by conducting pairwise alignment on the two sequences at the end of the edge. However, since we also want to obtain an alignment, we need to compute a multiple sequence alignment with respect to the best tree topology, with a basic assumption that the best tree (the phylogeny) will also produce the best alignment.</p><p>Our method of producing the final alignment is similar to those progressive alignment methods. Starting from the root node, we first compute the pairwise alignment between the root and its right child node. After this step, there might be some gap symbols ('-') inserted in the alignment. Next, we need to add a new sequence (for example, the left child node of the root node) to this alignment, using the following steps to align a sequence with an alignment:</p><p>&#x02022; First, we define a special character 'X' with a property that there is no charge of penalty of aligning it with either a character or a gap '-'. Then we replace all the '-' symbol in the alignment with the special character 'X'. Thus, the previous alignment will be transformed into two new sequences with only characters (including the special character) and no gaps.</p><p>&#x02022; We then conduct pairwise alignments between the new sequence and each of the two modified sequence. The best pairwise alignment will be kept as a "pivot", and the other alignments will be discarded. This procedure may introduce some new gaps and as a result, the new alignment will be of a different length with the rest of the previously aligned sequences. In the new alignment, there are two kinds of gaps: 'X', carried gaps from previous alignment; '-', gaps inserted at this step.</p><p>&#x02022; We will verify the position of the newly inserted gaps and add gaps into the same position in the rest of the previously aligned sequences. At this point, the sequence has been aligned with the previous alignment and they are of the same length.</p><p>Using the same strategy, whenever a new sequence is added, we align it with each one of the previous aligned cluster and keep the best pairwise alignment as the "pivot" to generate a new alignment cluster. The computation will continue until all the nodes in the tree have been covered.</p></sec></sec><sec><title>Searching the large tree space</title><p>Finding the best tree from the large tree space is always very difficult. There are a total of (2<italic>n </italic>- 5)!! = (2<italic>n </italic>- 5) &#x000d7; (2<italic>n </italic>- 7) &#x000d7; &#x022ef; &#x000d7; 3 un-rooted trees for any tree with <italic>n </italic>leaves. This number grows very fast: there are 3 trees for <italic>n </italic>= 4, two million trees for <italic>n </italic>= 10, but 2<sup>66 </sup>trees for <italic>n </italic>= 20. To remedy this problem, many heuristics have been developed to search this large space.</p><p>Of course, the simplest way to search for the best tree is to enumerate and score all trees. Not all trees need to be scored though, since some trees are clearly very bad and can be safely discarded by checking some lower bounds [<xref ref-type="bibr" rid="B26">26</xref>]. For example, there are a suite of circular-order lower bounds derived from triangular inequalities. However, these lower bounds are loose here and not too many trees can be pruned, hence the exhaustive approach does not work for datasets with more than 10 sequences.</p><p>Many heuristic tree searching approaches are available, including nearest-neighbor interchanges (NNI), subtree pruning and regrafting (SPR), and tree bisection reconnection (TBR). In NNI, one of the internal edges is chosen at random and the four subtrees (by removing the edge and its two nodes) are reconnected randomly. In SPR, a random edge is selected and two subtrees are created, then one of the two subtrees is removed at random and reinserted along a random edge in the other subtree. In TBR, similar to SPR, one edge is removed and the tree is divided into two subtrees, then they are joined by an edge connecting two midpoints of edges of the two subtrees. All these heuristics require a good start tree. In our experiment, we find that tree returned by distance-based neighbor-joining (NJ) method usually do well on the test dataset, thus we use NJ tree as the start point, and then we run TBR method to generate new trees from the Neighbor-joining tree. Whenever a new tree reports a better score, the best tree is updated and the tree is stored. The whole algorithm will stop when no improvement of tree score is achieved.</p><p>Many methods have been developed by researchers to handle the large tree space, including branch-and-bound methods, quartet-based methods and disk-covering methods [<xref ref-type="bibr" rid="B27">27</xref>]. The tree search method used by our method can be further improved using these more complex methods.</p></sec></sec><sec><title>Results and discussion</title><p>We implement the algorithm as a C program called MSAM and test its accuracy through experiments. MSAM can handle both DNA and protein sequences and allows users to specify different mutation cost matrices such as PAM or BLOSUM series, as well as the costs for gap opening and extension. We also develop MSAM-H, a time-efficient version of MSAM, which adopts the fast heuristic median solver instead of the exact solver during the tree refinement phase. Since phylogeny analysis deals with lost historical information, we concentrate our experiments on simulated datasets, where the true evolutionary history and alignments are known.</p><sec><title>Phylogeny accuracy</title><p>The Rose (Random Model of Sequence Evolution) [<xref ref-type="bibr" rid="B28">28</xref>] software package is a widely used simulator, which implements the HKY85 model of DNA sequence evolution and allows for insertions and deletions. We use the standard measurement of <italic>false positive </italic>and <italic>false negative </italic>[<xref ref-type="bibr" rid="B29">29</xref>] to determine the topological accuracy of a method. If the true tree has an edge defining a bipartition with no equivalent in the reconstructed tree, that edge is a <italic>false negative </italic>(<italic>FN</italic>); conversely, if the reconstructed tree has an edge defining a bipartition with no equivalent in the true tree, that edge is a <italic>false positive (FP)</italic>. The false negative rate is the number of false negative edges divided by the number of edges of the true tree. Since we are dealing with binary trees, FP and FN will be equal, hence only false negative rates are reported here.</p><p>In this experiment, we first use ClustalW or T-Coffee to align the input sequences and then use PAUP [<xref ref-type="bibr" rid="B30">30</xref>] to generate the Maximum Parsimony tree from the alignment. On the other hand, MSAM is tested directly on the un-aligned input sequences. We test ClustalW, T-Coffee and PAUP with their default parameters (most used), and for MSAM and MSAM-H we use the most common parameters, i.e., match costs 0, mis-match costs 1, gap opening penalty is 3, and gap extension penalty is 1. We also test against POY, which is the most used direct optimization methods.</p><p>We use birth-death model trees produced by the r8s software package [<xref ref-type="bibr" rid="B31">31</xref>], with random deviation factor multiplied on each edge to deviate the model trees from ultrametric. For each model tree we generate DNA sequences by using ROSE with the following parameters:</p><p>&#x02022; the sequences are over the character set of {A, C, G, T};</p><p>&#x02022; the transition/transversion ratio is set to 2, the mutation frequencies are set as [0.25, 0.25, 0.25, 0.25];</p><p>&#x02022; the insertion/deletion length frequencies are set as [.2, .2, .2, .1, .1, .1, .1], which control the probabilities for gaps of lengths from 1 to 7;</p><p>&#x02022; two groups of the insertion/deletion threshold are tested: 0.001 and 0.005;</p><p>&#x02022; three substitution rates are tested: 0.1, 0.2 and 0.3;</p><p>&#x02022; four different expected sequence lengths are tested: 200, 400, 800 and 1000.</p><p>We test trees of 10 taxa for each setting of parameters. For each category, we generate 100 dataset and report the average results. Since speed is a major concern here, we use only MSAM-H with the fast heuristic median solver. The results are shown in Figure <xref ref-type="fig" rid="F2">2</xref>, Figure <xref ref-type="fig" rid="F3">3</xref> and Figure <xref ref-type="fig" rid="F4">4</xref>.</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>False negative rate as a function of the sequence length.</bold> Each data set has 10 taxa with substitution rate of 0.1.</p></caption><graphic xlink:href="1471-2105-10-S1-S11-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>False negative rate as a function of the sequence length.</bold> Each data set has 10 taxa with substitution rate of 0.2.</p></caption><graphic xlink:href="1471-2105-10-S1-S11-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>False negative rate as a function of the sequence length.</bold> Each data set has 10 taxa with substitution rate of 0.3.</p></caption><graphic xlink:href="1471-2105-10-S1-S11-4"/></fig><p>From these figures, we find that for datasets produced in this experiment, MSAM-H outperforms POY, Clustal+PAUP and T-Coffee+PAUP in most of the categories, especially when the substitution rate is increased (sequences are more distant). We also need to point out that the topology accuracy error rate decreases with the increase of input sequence length; the error rate also increases with the increase of indel rate, because for these datasets the alignment is more difficult.</p><p>This experiment suggests that even MSAM-H can produce better results than phylogenetic methods using prior knowledge of alignment. The average time for MSAM-H to iteratively score a given tree is less than one second for 200 characters, less than 10 seconds for 800 characters, and less than 25 seconds for 1000 characters. The scoring procedure convergence quickly and all trees require fewer than five iterations to score. On the other hand, the hill-climbing tree search procedure will stop with fewer than 1000 trees being examined. In short, the time used by MSAM-H on 10 taxa ranges from several minutes to an hour. Although more taxa will surely require more time, as we mentioned above, this obstacle can be overcome by using other methods developed in the phylogeny research community.</p></sec><sec><title>Alignment accuracy</title><p>We compare the alignments produced by MSAM with those obtained by POY, ClustalW and T-Coffee. We also report the score from MSAM-H. In this experiment, we use the same datasets created in the previous experiments, and the final tree alignments are produced on the best trees found in the previous section. We test ClustalW and T-Coffee with their default parameters and for MSAM and MSAM-H we use the common parameters of match cost 0, mis-match penalty 1, gap opening penalty 3, and gap extension 1. For POY, We used a testing script similar to that suggested by the authors. The alignments are then assessed using bali_score, a program provided by BAliBASE [<xref ref-type="bibr" rid="B32">32</xref>] to compare the inferred and the supposedly correct alignments. bali_score reports two scores: SP and CS. SP (Sum-of-Pair) score represents percent of residue pairs correctly aligned, and CS (column score) represents percent of columns correctly aligned. Higher SP and CS scores suggest better performance. In our experiments, although SP and CS scores are different, they will not affect the comparison results of all these programs, hence only SP scores are reported.</p><p>Table <xref ref-type="table" rid="T1">1</xref>, Table <xref ref-type="table" rid="T2">2</xref> and Table <xref ref-type="table" rid="T3">3</xref> show the average SP scores from these four programs. When the substitute rate is 0.3 (sequences are distant), MSAM almost always achieves the highest score. In fact, even the fast and heuristic version of our program MSAM-H outperforms POY, T-Coffee and ClustalW in this category. However, when the sequences are closer, POY and the traditional methods outperforms MSAM except when the sequences are short, and indeed POY is arguably more accurate than all methods tested here. Compared to the results presented in [<xref ref-type="bibr" rid="B23">23</xref>], where for three sequences, the exact median solver is clearly better than ClustalW and T-Coffee, we believe our alignment method can be further improved and more information from the inferred internal sequences should be used. We also observe that the scores of MSAM are better than those of MSAM-H (around 7% to 16%), although they go through identical procedures except for the assignment of internal nodes, which clearly shows that better medians (internal sequences) can yield better alignments.</p><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>SP scores for ClustalW, T-Coffee, MSAM and MSAM-H on substitution rates of 0.1</p></caption><table frame="hsides" rules="groups"><thead><tr><td></td><td align="center" colspan="2"><italic>l </italic>= 200</td><td align="center" colspan="2"><italic>l </italic>= 400</td><td align="center" colspan="2"><italic>l </italic>= 800</td><td align="center" colspan="2"><italic>l </italic>= 1000</td></tr></thead><tbody><tr><td align="center"><italic>indel</italic></td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td></tr><tr><td colspan="9"><hr></hr></td></tr><tr><td align="center">Clustal</td><td align="center">0.785</td><td align="center">0.408</td><td align="center">0.790</td><td align="center"><bold>0.439</bold></td><td align="center">0.801</td><td align="center"><bold>0.437</bold></td><td align="center">0.779</td><td align="center"><bold>0.356</bold></td></tr><tr><td align="center">T-Coffee</td><td align="center">0.534</td><td align="center">0.419</td><td align="center">0.602</td><td align="center">0.429</td><td align="center">0.615</td><td align="center">0.431</td><td align="center">0.577</td><td align="center">0.333</td></tr><tr><td align="center">POY</td><td align="center"><bold>0.838</bold></td><td align="center"><bold>0.442</bold></td><td align="center"><bold>0.817</bold></td><td align="center">0.405</td><td align="center"><bold>0.805</bold></td><td align="center">0.430</td><td align="center"><bold>0.784</bold></td><td align="center">0.320</td></tr><tr><td align="center">MSAM-H</td><td align="center">0.652</td><td align="center">0.334</td><td align="center">0.467</td><td align="center">0.291</td><td align="center">0.489</td><td align="center">0.215</td><td align="center">0.476</td><td align="center">0.187</td></tr><tr><td align="center">MSAM</td><td align="center">0.754</td><td align="center">0.366</td><td align="center">0.560</td><td align="center">0.328</td><td align="center">0.586</td><td align="center">0.236</td><td align="center">0.572</td><td align="center">0.217</td></tr></tbody></table></table-wrap><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>SP scores for ClustalW, T-Coffee, MSAM and MSAM-H on substitution rates of 0.2</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center">subrate</td><td align="center" colspan="2"><italic>l </italic>= 200</td><td align="center" colspan="2"><italic>l </italic>= 400</td><td align="center" colspan="2"><italic>l </italic>= 800</td><td align="center" colspan="2"><italic>l </italic>= 1000</td></tr></thead><tbody><tr><td align="center"><italic>indel</italic></td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td></tr><tr><td colspan="9"><hr></hr></td></tr><tr><td align="center">Clustal</td><td align="center">0.441</td><td align="center">0.286</td><td align="center">0.332</td><td align="center"><bold>0.272</bold></td><td align="center">0.350</td><td align="center">0.205</td><td align="center">0.372</td><td align="center">0.173</td></tr><tr><td align="center">T-Coffee</td><td align="center">0.305</td><td align="center">0.247</td><td align="center">0.186</td><td align="center">0.220</td><td align="center">0.262</td><td align="center">0.181</td><td align="center">0.289</td><td align="center">0.153</td></tr><tr><td align="center">POY</td><td align="center">0.448</td><td align="center">0.277</td><td align="center"><bold>0.458</bold></td><td align="center">0.264</td><td align="center"><bold>0.388</bold></td><td align="center"><bold>0.245</bold></td><td align="center"><bold>0.445</bold></td><td align="center"><bold>0.212</bold></td></tr><tr><td align="center">MSAM-H</td><td align="center">0.456</td><td align="center">0.264</td><td align="center">0.269</td><td align="center">0.222</td><td align="center">0.178</td><td align="center">0.168</td><td align="center">0.274</td><td align="center">0.133</td></tr><tr><td align="center">MSAM</td><td align="center"><bold>0.522</bold></td><td align="center"><bold>0.290</bold></td><td align="center">0.289</td><td align="center">0.248</td><td align="center">0.192</td><td align="center">0.183</td><td align="center">0.291</td><td align="center">0.146</td></tr></tbody></table></table-wrap><table-wrap position="float" id="T3"><label>Table 3</label><caption><p>SP scores for ClustalW, T-Coffee, MSAM and MSAM-H on substitution rates of 0.3</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center">subrate</td><td align="center" colspan="2"><italic>l </italic>= 200</td><td align="center" colspan="2"><italic>l </italic>= 400</td><td align="center" colspan="2"><italic>l </italic>= 800</td><td align="center" colspan="2"><italic>l </italic>= 1000</td></tr></thead><tbody><tr><td align="center"><italic>indel</italic></td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td><td align="center">0.001</td><td align="center">0.005</td></tr><tr><td colspan="9"><hr></hr></td></tr><tr><td align="center">Clustal</td><td align="center">0.305</td><td align="center">0.212</td><td align="center">0.221</td><td align="center">0.148</td><td align="center">0.219</td><td align="center">0.130</td><td align="center">0.201</td><td align="center">0.137</td></tr><tr><td align="center">T-Coffee</td><td align="center">0.187</td><td align="center">0.176</td><td align="center">0.128</td><td align="center">0.118</td><td align="center">0.132</td><td align="center">0.092</td><td align="center">0.137</td><td align="center">0.110</td></tr><tr><td align="center">POY</td><td align="center"><bold>0.423</bold></td><td align="center">0.209</td><td align="center">0.114</td><td align="center">0.062</td><td align="center">0.228</td><td align="center">0.119</td><td align="center">0.145</td><td align="center">0.041</td></tr><tr><td align="center">MSAM-H</td><td align="center">0.315</td><td align="center">0.203</td><td align="center">0.213</td><td align="center">0.149</td><td align="center">0.225</td><td align="center">0.113</td><td align="center">0.178</td><td align="center">0.132</td></tr><tr><td align="center">MSAM</td><td align="center">0.359</td><td align="center"><bold>0.219</bold></td><td align="center"><bold>0.234</bold></td><td align="center"><bold>0.154</bold></td><td align="center"><bold>0.240</bold></td><td align="center"><bold>0.132</bold></td><td align="center"><bold>0.211</bold></td><td align="center"><bold>0.141</bold></td></tr></tbody></table></table-wrap><p>In terms of running time, ClustalW is always the fastest, followed by MSAM-H, POY and T-COFFEE. Among all these programs, the execution time of MSAM is the longest, largely due to its exact median computation procedure, which has time complexity of <italic>O</italic>(<italic>n</italic><sup>3</sup>).</p></sec></sec><sec><title>Conclusion</title><p>We have presented an algorithm to align multiple sequences and reconstruct the phylogenies that minimize the alignment score. This method is based on efficient algorithms to solve the median problem of three sequences. For more sequences, our method overcomes various computational problems in tree scoring and tree searching. Our extensive experiments suggest that this method is very promising and can produce high quality phylogenies and alignments.</p><p>Further improvements are needed, however. We need to find a better method to produce the final alignment with respect to the best tree, and use more complex methods to search through the tree space. More experiments are necessary as well. For example, we plan to compare MSAM with other phylogeny tools such as Maximum Likelihood methods and Bayesian methods.</p></sec><sec><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec><sec><title>Authors' contributions</title><p>All authors contribute to the development and implementation of the algorithms, and FY and JS are in charge of conducting simulations and analyzing results.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>The authors were supported by US National Institutes of Health (NIH grant number R01 GM078991). F.Y. is also supported by the laboratory of gene regulation, Ludwig Institute for Cancer Research, UCSD School of Medicine. All experiments were conducted on a 128-core shared memory computer funded by US National Science Foundation (NSF grant number CNS 0708391).</p><p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 10 Supplement 1, 2009: Proceedings of The Seventh Asia Pacific Bioinformatics Conference (APBC) 2009. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/10?issue=S1"/></p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Higgins</surname><given-names>D</given-names></name><name><surname>Sharp</surname><given-names>P</given-names></name></person-group><article-title>CLUSTAL: a package for performing multiple sequence alignment on a microcomputer</article-title><source>Gene</source><year>1988</year><volume>73</volume><fpage>237</fpage><lpage>244</lpage><pub-id pub-id-type="pmid">3243435</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Thompson</surname><given-names>J</given-names></name><name><surname>Higgins</surname><given-names>D</given-names></name><name><surname>Gibson</surname><given-names>T</given-names></name></person-group><article-title>CLUSTAL W: Improving the sensitivity of progressive multiple sequence alignment through sequence weighting position specific gap penalties and weight matrix choice</article-title><source>Nucleic Acids Research</source><year>1994</year><volume>22</volume><fpage>4673</fpage><lpage>4690</lpage><pub-id pub-id-type="pmid">7984417</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Notredame</surname><given-names>C</given-names></name></person-group><article-title>Recent progress in multiple sequence alignment: a survey</article-title><source>Pharmacogenomics</source><year>2002</year><volume>3</volume><fpage>131</fpage><lpage>144</lpage><pub-id pub-id-type="pmid">11966409</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Notredame</surname><given-names>C</given-names></name><name><surname>Higgins</surname><given-names>D</given-names></name><name><surname>Heringa</surname><given-names>J</given-names></name></person-group><article-title>T-Coffee: A novel method for fast and accurate multiple sequence alignment</article-title><source>J Mol Biol</source><year>2000</year><volume>302</volume><fpage>205</fpage><lpage>217</lpage><pub-id pub-id-type="pmid">10964570</pub-id></citation></ref><ref id="B5"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Roshan</surname><given-names>U</given-names></name><name><surname>Livesay</surname><given-names>D</given-names></name><name><surname>Chikkagoudar</surname><given-names>S</given-names></name></person-group><article-title>Improving progressive alignment for phylogeny reconstruction using parsimonious guide-trees</article-title><source>Proc 6th IEEE Symposium on BionInformatics and BioEngineering (BIBE)</source><year>2006</year><fpage>159</fpage><lpage>164</lpage></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wong</surname><given-names>K</given-names></name><name><surname>Suchard</surname><given-names>M</given-names></name><name><surname>Huelsenbeck</surname><given-names>J</given-names></name></person-group><article-title>Alignment uncertainty and genomic analysis</article-title><source>Science</source><year>2008</year><volume>319</volume><fpage>473</fpage><lpage>476</lpage><pub-id pub-id-type="pmid">18218900</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Goldman</surname><given-names>N</given-names></name></person-group><article-title>Effects of sequence alignment procedures on estimates of phylogeny</article-title><source>BioEssays</source><year>1998</year><volume>20</volume><fpage>287</fpage><lpage>290</lpage></citation></ref><ref id="B8"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Varon</surname><given-names>A</given-names></name><name><surname>Vinh</surname><given-names>L</given-names></name><name><surname>Bomash</surname><given-names>I</given-names></name><name><surname>Wheeler</surname><given-names>W</given-names></name></person-group><article-title>POY (Phylogenetic analysis of DNA and other data using dynamic homology)</article-title><source>American Museum of Natural History</source><ext-link ext-link-type="uri" xlink:href="http://research.amnh.org/scicomp/projects/poy.php"/></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ogden</surname><given-names>T</given-names></name><name><surname>Rosenberg</surname><given-names>M</given-names></name></person-group><article-title>Alignment and topological accuracy of the direct optimization approach via POY and traditional phylogenetics via ClustalW + PAUP*</article-title><source>Syst Biol</source><year>2007</year><volume>56</volume><fpage>182</fpage><lpage>193</lpage><pub-id pub-id-type="pmid">17454974</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Strugnell</surname><given-names>J</given-names></name><name><surname>Nishiguchi</surname><given-names>M</given-names></name></person-group><article-title>Molecular phylogeny of coleoid cephalopods (Mollusca: Cephalopoda) inferred from three mitochondrial and six nuclear loci: a comparison of alignment, implied alignment and analysis methods</article-title><source>Journal Molluscan Studies</source><year>2007</year><volume>73</volume><fpage>399</fpage><lpage>41</lpage></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Vingron</surname><given-names>M</given-names></name><name><surname>Haeseler</surname><given-names>A</given-names></name></person-group><article-title>Towards integration of multiple alignment and phylogenetic tree construction</article-title><source>J Comp Biol</source><year>1997</year><volume>4</volume><fpage>23</fpage><lpage>34</lpage></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sankoff</surname><given-names>D</given-names></name></person-group><article-title>Minimal mutation trees of sequences</article-title><source>SIAM J on App Math</source><year>1975</year><volume>28</volume><fpage>35</fpage><lpage>42</lpage></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>L</given-names></name><name><surname>Jiang</surname><given-names>T</given-names></name></person-group><article-title>On the complexity of multiple sequence alignment</article-title><source>J Comp Biol</source><year>1994</year><volume>1</volume><fpage>337</fpage><lpage>348</lpage></citation></ref><ref id="B14"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Jiang</surname><given-names>T</given-names></name><name><surname>Liu</surname><given-names>F</given-names></name></person-group><article-title>Tree alignment and reconstruction application software</article-title><year>1996</year></citation></ref><ref id="B15"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Lancia</surname><given-names>G</given-names></name><name><surname>Ravi</surname><given-names>R</given-names></name></person-group><article-title>GESTALT: Genomic steiner alignments</article-title><source>Proc 10th Annual Symposium on Combinatorial Pattern Matching (CPM)</source><year>1999</year><fpage>101</fpage><lpage>114</lpage></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hein</surname><given-names>J</given-names></name></person-group><article-title>A new method that simultaneously aligns and reconstructs ancestral sequences for any number of homologous sequences, when the phylogeny is given</article-title><source>Mol Biol Evol</source><year>1989</year><volume>6</volume><fpage>649</fpage><lpage>668</lpage><pub-id pub-id-type="pmid">2488477</pub-id></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Saitou</surname><given-names>N</given-names></name><name><surname>Nei</surname><given-names>M</given-names></name></person-group><article-title>The neighbor-joining method: A new method for reconstructing phylogenetic trees</article-title><source>Mol Biol Evol</source><year>1987</year><volume>4</volume><fpage>406</fpage><lpage>425</lpage><pub-id pub-id-type="pmid">3447015</pub-id></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sankoff</surname><given-names>D</given-names></name><name><surname>Cedergren</surname><given-names>R</given-names></name><name><surname>Lapalme</surname><given-names>G</given-names></name></person-group><article-title>Frequency of insertion-deletion, transversion, and transition in the evolution of 5S ribosomal RNA</article-title><source>J Mol Evol</source><year>1976</year><volume>7</volume><fpage>133</fpage><lpage>149</lpage><pub-id pub-id-type="pmid">772222</pub-id></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gotoh</surname><given-names>O</given-names></name></person-group><article-title>Alignment of three biological sequences with an efficient traceback procedure</article-title><source>J Theo Biol</source><year>1986</year><volume>121</volume><fpage>327</fpage><lpage>337</lpage></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Powell</surname><given-names>D</given-names></name><name><surname>Allison</surname><given-names>L</given-names></name><name><surname>Dix</surname><given-names>T</given-names></name></person-group><article-title>Fast, optimal alignment of three sequences using linear gap costs</article-title><source>J Theo Biol</source><year>2000</year><volume>207</volume><fpage>325</fpage><lpage>336</lpage></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pearson</surname><given-names>W</given-names></name></person-group><article-title>Rapid and sensitive sequence comparison with FASTP and FASTA</article-title><source>Methods in Enzymology</source><year>1990</year><volume>183</volume><fpage>63</fpage><lpage>98</lpage><pub-id pub-id-type="pmid">2156132</pub-id></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Henikoff</surname><given-names>S</given-names></name><name><surname>Henikoff</surname><given-names>J</given-names></name></person-group><article-title>Amino acid substitution matrices from protein blocks</article-title><source>Proc Natl Acad Sci USA</source><year>1992</year><volume>89</volume><fpage>10915</fpage><lpage>10919</lpage><pub-id pub-id-type="pmid">1438297</pub-id></citation></ref><ref id="B23"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Yue</surname><given-names>F</given-names></name><name><surname>Tang</surname><given-names>J</given-names></name></person-group><article-title>A divide-and-conquer implementation of three sequence alignment and ancestor inference</article-title><source>Proc 1st IEEE International Conference on Bioinformatics and Biomedicine (BIBM)</source><year>2007</year><fpage>143</fpage><lpage>150</lpage></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Myers</surname><given-names>E</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name></person-group><article-title>Optimal alignments in linear space</article-title><source>Computer Applications in the Biosciences</source><year>1988</year><volume>4</volume><fpage>11</fpage><lpage>17</lpage><pub-id pub-id-type="pmid">3382986</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sankoff</surname><given-names>D</given-names></name><name><surname>Blanchette</surname><given-names>M</given-names></name></person-group><article-title>Multiple genome rearrangement and breakpoint phylogeny</article-title><source>J Comput Biol</source><year>1998</year><volume>5</volume><fpage>555</fpage><lpage>570</lpage><pub-id pub-id-type="pmid">9773350</pub-id></citation></ref><ref id="B26"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Moret</surname><given-names>BME</given-names></name><name><surname>Wyman</surname><given-names>S</given-names></name><name><surname>Bader</surname><given-names>DA</given-names></name><name><surname>Warnow</surname><given-names>T</given-names></name><name><surname>Yan</surname><given-names>M</given-names></name></person-group><article-title>A new implementation and detailed study of breakpoint analysis</article-title><source>Proc 6th Pacific Symp Biocomputing (PSB)</source><year>2001</year><fpage>583</fpage><lpage>594</lpage></citation></ref><ref id="B27"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Huson</surname><given-names>D</given-names></name><name><surname>Nettles</surname><given-names>S</given-names></name><name><surname>Warnow</surname><given-names>T</given-names></name></person-group><article-title>Disk-covering, a fast converging method for phylogenetic tree reconstruction. J</article-title><source>Comput Biol</source><year>1999</year><volume>6</volume><fpage>369</fpage><lpage>386</lpage></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Stoye</surname><given-names>J</given-names></name><name><surname>Evers</surname><given-names>D</given-names></name><name><surname>Meyer</surname><given-names>F</given-names></name></person-group><article-title>Rose: generating sequence families</article-title><source>Bioinformatics</source><year>1998</year><volume>14</volume><fpage>157</fpage><lpage>163</lpage><pub-id pub-id-type="pmid">9545448</pub-id></citation></ref><ref id="B29"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Robinson</surname><given-names>R</given-names></name><name><surname>Foulds</surname><given-names>L</given-names></name></person-group><article-title>Comparison of phylogenetic trees</article-title><source>Mathematical Biosciences</source><year>1981</year><volume>53</volume><fpage>131</fpage><lpage>147</lpage></citation></ref><ref id="B30"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Swofford</surname><given-names>D</given-names></name></person-group><source>PAUP*: Phylogenetic analysis using parsimony (and other methods), ver 4.0</source><publisher-name>Sinauer Associates, Sunderland, Massachusetts</publisher-name></citation></ref><ref id="B31"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Sanderson</surname><given-names>M</given-names></name></person-group><article-title>r8s software package</article-title><ext-link ext-link-type="uri" xlink:href="http://ginger.ucdavis.edu/r8s"/></citation></ref><ref id="B32"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Thompson</surname><given-names>J</given-names></name><name><surname>Plewniak</surname><given-names>F</given-names></name><name><surname>Poch</surname><given-names>O</given-names></name></person-group><article-title>BAliBASE: a benchmark alignment database for the evaluation of multiple alignment programs</article-title><source>Bioinformatics</source><year>1999</year><volume>15</volume><fpage>87</fpage><lpage>88</lpage><pub-id pub-id-type="pmid">10068696</pub-id></citation></ref></ref-list></back></article>



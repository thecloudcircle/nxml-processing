
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="methods-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Front Physiol</journal-id><journal-id journal-id-type="iso-abbrev">Front Physiol</journal-id><journal-id journal-id-type="publisher-id">Front. Physiol.</journal-id><journal-title-group><journal-title>Frontiers in Physiology</journal-title></journal-title-group><issn pub-type="epub">1664-042X</issn><publisher><publisher-name>Frontiers Media S.A.</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">30034343</article-id><article-id pub-id-type="pmc">6043725</article-id><article-id pub-id-type="doi">10.3389/fphys.2018.00787</article-id><article-categories><subj-group subj-group-type="heading"><subject>Physiology</subject><subj-group><subject>Protocols</subject></subj-group></subj-group></article-categories><title-group><article-title>Prediction of Mutations to Control Pathways Enabling Tumor Cell Invasion with the CoLoMoTo Interactive Notebook (Tutorial)</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Levy</surname><given-names>Nicolas</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/547648/overview"/></contrib><contrib contrib-type="author"><name><surname>Naldi</surname><given-names>Aur&#x000e9;lien</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/201686/overview"/></contrib><contrib contrib-type="author"><name><surname>Hernandez</surname><given-names>C&#x000e9;line</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib><contrib contrib-type="author"><name><surname>Stoll</surname><given-names>Gautier</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff5"><sup>5</sup></xref><xref ref-type="aff" rid="aff6"><sup>6</sup></xref><xref ref-type="aff" rid="aff7"><sup>7</sup></xref><xref ref-type="aff" rid="aff8"><sup>8</sup></xref></contrib><contrib contrib-type="author"><name><surname>Thieffry</surname><given-names>Denis</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/131666/overview"/></contrib><contrib contrib-type="author"><name><surname>Zinovyev</surname><given-names>Andrei</given-names></name><xref ref-type="aff" rid="aff9"><sup>9</sup></xref><xref ref-type="aff" rid="aff10"><sup>10</sup></xref><xref ref-type="aff" rid="aff11"><sup>11</sup></xref><xref ref-type="aff" rid="aff12"><sup>12</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/106132/overview"/></contrib><contrib contrib-type="author"><name><surname>Calzone</surname><given-names>Laurence</given-names></name><xref ref-type="aff" rid="aff9"><sup>9</sup></xref><xref ref-type="aff" rid="aff10"><sup>10</sup></xref><xref ref-type="aff" rid="aff11"><sup>11</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/366843/overview"/></contrib><contrib contrib-type="author"><name><surname>Paulev&#x000e9;</surname><given-names>Lo&#x000ef;c</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="c001"><sup>*</sup></xref><uri xlink:type="simple" xlink:href="http://loop.frontiersin.org/people/470785/overview"/></contrib></contrib-group><aff id="aff1"><sup>1</sup><institution>LRI UMR 8623, Centre National de la Recherche Scientifique, Universit&#x000e9; Paris-Sud, Universit&#x000e9; Paris-Saclay</institution>, <addr-line>Orsay</addr-line>, <country>France</country></aff><aff id="aff2"><sup>2</sup><institution>&#x000c9;cole Normale Sup&#x000e9;rieure de Lyon</institution>, <addr-line>Lyon</addr-line>, <country>France</country></aff><aff id="aff3"><sup>3</sup><institution>Computational Systems Biology Team, Institut de Biologie de l'&#x000c9;cole Normale Sup&#x000e9;rieure, Centre National de la Recherche Scientifique UMR8197, INSERM U1024, &#x000c9;cole Normale Sup&#x000e9;rieure, PSL Universit&#x000e9;</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff4"><sup>4</sup><institution>Universit&#x000e9; Paris Descartes, Sorbonne Paris Cit&#x000e9;</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff5"><sup>5</sup><institution>&#x000c9;quipe 11 Labellis&#x000e9;e Ligue Nationale contre le Cancer, Centre de Recherche des Cordeliers</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff6"><sup>6</sup><institution>Institut National de la Sant&#x000e9; et de la Recherche M&#x000e9;dicale</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff7"><sup>7</sup><institution>Universit&#x000e9; Pierre et Marie Curie</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff8"><sup>8</sup><institution>Metabolomics and Cell Biology Platforms, Gustave Roussy Cancer Campus</institution>, <addr-line>Villejuif</addr-line>, <country>France</country></aff><aff id="aff9"><sup>9</sup><institution>Institut Curie, PSL Research University</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff10"><sup>10</sup><institution>INSERM U900</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff11"><sup>11</sup><institution>MINES ParisTech, PSL Research University, CBIO-Centre for Computational Biology</institution>, <addr-line>Paris</addr-line>, <country>France</country></aff><aff id="aff12"><sup>12</sup><institution>Lobachevsky University</institution>, <addr-line>Nizhni Novgorod</addr-line>, <country>Russia</country></aff><author-notes><fn fn-type="edited-by"><p>Edited by: Pierre De Meyts, de Duve Institute, Belgium</p></fn><fn fn-type="edited-by"><p>Reviewed by: Katsuhiko Murakami, Fujitsu Laboratories, Japan; David Phillip Nickerson, University of Auckland, New Zealand</p></fn><corresp id="c001">*Correspondence: Lo&#x000ef;c Paulev&#x000e9; <email>loic.pauleve@lri.fr</email></corresp><fn fn-type="other" id="fn001"><p>This article was submitted to Systems Biology, a section of the journal Frontiers in Physiology</p></fn></author-notes><pub-date pub-type="epub"><day>06</day><month>7</month><year>2018</year></pub-date><pub-date pub-type="collection"><year>2018</year></pub-date><volume>9</volume><elocation-id>787</elocation-id><history><date date-type="received"><day>05</day><month>4</month><year>2018</year></date><date date-type="accepted"><day>06</day><month>6</month><year>2018</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2018 Levy, Naldi, Hernandez, Stoll, Thieffry, Zinovyev, Calzone and Paulev&#x000e9;.</copyright-statement><copyright-year>2018</copyright-year><copyright-holder>Levy, Naldi, Hernandez, Stoll, Thieffry, Zinovyev, Calzone and Paulev&#x000e9;</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.</license-p></license></permissions><abstract><p>Boolean and multi-valued logical formalisms are increasingly used to model complex cellular networks. To ease the development and analysis of logical models, a series of software tools have been proposed, often with specific assets. However, combining these tools typically implies a series of cumbersome software installation and model conversion steps. In this respect, the <italic>CoLoMoTo Interactive Notebook</italic> provides a joint distribution of several logical modeling software tools, along with an interactive web Python interface easing the chaining of complementary analyses. Our computational workflow combines (1) the importation of a GINsim model and its display, (2) its format conversion using the Java library BioLQM, (3) the formal prediction of mutations using the OCaml software Pint, (4) the model checking using the C++ software NuSMV, (5) quantitative stochastic simulations using the C++ software MaBoSS, and (6) the visualization of results using the Python library matplotlib. To illustrate our approach, we use a recent Boolean model of the signaling network controlling tumor cell invasion and migration. Our model analysis culminates with the prediction of sets of mutations presumably involved in a metastatic phenotype.</p></abstract><kwd-group><kwd>Boolean networks</kwd><kwd>stochastic simulations</kwd><kwd>model verification</kwd><kwd>software tools</kwd><kwd>reproducibility</kwd></kwd-group><funding-group><award-group><funding-source id="cn001">Agence Nationale de la Recherche<named-content content-type="fundref-id">10.13039/501100001665</named-content></funding-source><award-id rid="cn001">ANR-15-CE15-0006-01</award-id><award-id rid="cn001">ANR-16-CE12-0034</award-id><award-id rid="cn001">ANR-11-LABEX-0045-DIGICOSME</award-id></award-group></funding-group><counts><fig-count count="13"/><table-count count="1"/><equation-count count="0"/><ref-count count="14"/><page-count count="11"/><word-count count="4951"/></counts></article-meta></front><body><sec id="s1"><title>1. Introduction</title><p>Boolean and multi-valued logical formalisms are increasingly used to model complex cellular networks (see e.g., Helikar et al., <xref rid="B6" ref-type="bibr">2012</xref>; Zaudo and Albert, <xref rid="B14" ref-type="bibr">2015</xref>; Collombet et al., <xref rid="B5" ref-type="bibr">2017</xref>). A logical model is usually defined in three steps:</p><list list-type="order"><list-item><p>The delineation of a regulatory graph, where the vertices (nodes) represent signaling or regulatory components (proteins, genes, microRNAs, etc.), while the arcs (arrows) represent regulatory interactions between pairs of components. These arcs are labeled by a sign: positive in the case of activation, negative in the case of an inhibition (multiple arcs between two nodes may be considered but are not used here).</p></list-item><list-item><p>A discrete variable is associated with each node. In the simplest cases, as hereafter, these variables are Boolean, i.e., they can take only two values (0 or 1), denoting the absence/inactivity or the presence/activity of the corresponding components.</p></list-item><list-item><p>Finally, a logical rule is associated with each component to specify the combinations enabling its activation. More precisely, this rule combines the different variables corresponding to the regulatory components using the logical negation (denoted by <monospace>!</monospace>), conjunction (denoted by <monospace>&#x00026;</monospace>) and disjunction (denoted by <monospace>|</monospace>). For example, the rule associated with the component GF in the model considered below is <monospace>!CDH1 &#x00026; (GF | CDH2)</monospace>, which reads as &#x0201c;the component GF will be activated in the absence of CDH1 and in the presence of CDH2 or GF itself.&#x0201d; In other words, CDH2 is required transiently for GF activation, in the absence of CDH1.</p></list-item></list><p>To support the development and analysis of logical models, a series of software tools have been proposed, often with specific assets (Naldi et al., <xref rid="B9" ref-type="bibr">2009</xref>; Klarner et al., <xref rid="B7" ref-type="bibr">2017</xref>; Paulev&#x000e9;, <xref rid="B12" ref-type="bibr">2017</xref>; Stoll et al., <xref rid="B13" ref-type="bibr">2017</xref>).</p><p>The <italic>CoLoMoTo Interactive Notebook</italic><xref ref-type="fn" rid="fn0001"><sup>1</sup></xref> (Naldi et al., <xref rid="B11" ref-type="bibr">2018b</xref>) relies on Docker<xref ref-type="fn" rid="fn0002"><sup>2</sup></xref> and Jupyter<xref ref-type="fn" rid="fn0003"><sup>3</sup></xref> technologies to assist on editing and sharing reproducible analysis workflows for logical models. In addition to the distribution of a set of software tools to define and analyse Boolean and multi-valued networks, a unified Python interface for each of the integrated tools is provided, greatly easing the execution and chaining of complementary analyses.</p><p>This protocol describes in details the usage of the CoLoMoTso Interactive Notebook to provide a reproducible analysis of a recently published model of the signaling network controlling tumor cell invasion and migration. More specifically, we combine different tools (Table <xref rid="T1" ref-type="table">1</xref>) to compute the model stable states, perform stochastic simulations, compute (sets of) mutations controlling the reachability of specific stable states, and evaluate their efficiency.</p><table-wrap id="T1" position="float"><label>Table 1</label><caption><p>List of software tools used in this notebook.</p></caption><table frame="hsides" rules="groups"><thead><tr><th valign="top" align="left" rowspan="1" colspan="1"><bold>Tool</bold></th><th valign="top" align="left" rowspan="1" colspan="1"><bold>Website</bold></th><th valign="top" align="left" rowspan="1" colspan="1"><bold>Role in this notebook</bold></th></tr></thead><tbody><tr><td valign="top" align="left" rowspan="1" colspan="1">GINsim</td><td valign="top" align="left" rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://ginsim.org">ginsim.org</ext-link></td><td valign="top" align="left" rowspan="1" colspan="1">Model input and display, conversion to bioLQM and NuSMV</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">bioLQM</td><td valign="top" align="left" rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://colomoto.org/biolqm">colomoto.org/biolqm</ext-link></td><td valign="top" align="left" rowspan="1" colspan="1">Fixpoint computation, conversion to MaBoSS and Pint</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">MaBoSS</td><td valign="top" align="left" rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="https://maboss.curie.fr">maboss.curie.fr</ext-link></td><td valign="top" align="left" rowspan="1" colspan="1">Stochastic simulations, assess impact of mutations on propensity of reaching phenotypes</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">Pint</td><td valign="top" align="left" rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://loicpauleve.name/pint">loicpauleve.name/pint</ext-link></td><td valign="top" align="left" rowspan="1" colspan="1">Formal prediction of mutants</td></tr><tr><td valign="top" align="left" rowspan="1" colspan="1">NuSMV</td><td valign="top" align="left" rowspan="1" colspan="1"><ext-link ext-link-type="uri" xlink:href="http://nusmv.fbk.eu">nusmv.fbk.eu</ext-link></td><td valign="top" align="left" rowspan="1" colspan="1">Formal verification of phenotypes reachability and stability</td></tr></tbody></table></table-wrap></sec><sec id="s2"><title>2. Materials and equipment</title><sec><title>2.1. Executable and reproducible model analysis</title><p>This protocol has been actually edited entirely as a Jupyter notebook before being converted to a LaTeX document for journal-specific editing purposes. The original notebook file is provided as Supplemental Material. It can also be visualized and downloaded for execution in the CoLoMoTo Interactive Notebook at <ext-link ext-link-type="uri" xlink:href="https://nbviewer.jupyter.org/gist/pauleve/a86717b0ae8750440dd589f778db428f/Usecase%20-%20Mutations%20enabling%20tumour%20invasion.ipynb">https://nbviewer.jupyter.org/gist/pauleve/a86717b0ae8750440dd589f778db428f/Usecase%20-%20Mutations%20enabling%20tumour%20invasion.ipynb</ext-link>.</p><p>The blocks beginning with <monospace>In [.]</monospace> correspond to Jupyter <italic>code cells</italic>, which contain the Python instructions to execute. When relevant, the blocks beginning with <monospace>Out [.]</monospace> display the result of the last instruction of the corresponding code cell.</p><p>Provided Docker and Python are installed, the CoLoMoTo Interactive notebook can be installed by typing and executing the following command<xref ref-type="fn" rid="fn0004"><sup>4</sup></xref> on GNU/Linux, macOS, and Microsoft Windows:</p><preformat>
pip&#x000a0;install&#x000a0;-U&#x000a0;colomoto-docker
</preformat><p>Once installed, the notebook can be executed by typing</p><preformat>
colomoto-docker&#x000a0;-V&#x000a0;2018-05-29
</preformat><p>The execution of this command will open a web page with the Jupyter notebook interface, enabling the loading and execution of the code. Note that &#x0201c;SHIFT+ENTER&#x0201d; must be used to execute each code cell. More information on <monospace>colomoto-docker</monospace> usage can be obtained by typing <monospace>colomoto-docker --help</monospace> and by visiting <ext-link ext-link-type="uri" xlink:href="https://github.com/colomoto/colomoto-docker">https://github.com/colomoto/colomoto-docker</ext-link>.</p></sec><sec><title>2.2. Notebook preparation</title><p>This notebook makes use of the following Python modules:</p><p><inline-graphic xlink:href="fphys-09-00787-i0001.jpg"/></p></sec></sec><sec id="s3"><title>3. Stepwise procedures</title><sec><title>3.1. Model</title><p>We analyse a Boolean model of the signaling network controlling cell tumor invasion, which was recently reported in Cohen et al. (<xref rid="B4" ref-type="bibr">2015</xref>). This model can be loaded directly from the GINsim model repository at <ext-link ext-link-type="uri" xlink:href="http://ginsim.org/models_repository">http://ginsim.org/models_repository</ext-link>.</p><p>We first show how to use GINsim (Naldi et al., <xref rid="B10" ref-type="bibr">2018a</xref>) to fetch and parse the GINML file (GINsim graph-based XML format, encapsulated in a zginml archive) and display the regulatory graph of the network. To load the model, we copied the URL of the <monospace>.zginml</monospace> file from the model repository page at <ext-link ext-link-type="uri" xlink:href="http://ginsim.org/node/191">http://ginsim.org/node/191</ext-link>. The file is also available as Supplemental Data (Data Sheet <xref ref-type="supplementary-material" rid="SM1">1</xref>).</p><p><inline-graphic xlink:href="fphys-09-00787-i0002.jpg"/></p><p>The regulatory graph (using the graphical setting specified in the model file) can be displayed with the following command:</p><p><inline-graphic xlink:href="fphys-09-00787-i0003.jpg"/></p><p>The resulting graphics is reproduced in Figure <xref ref-type="fig" rid="F1">1</xref>.</p><fig id="F1" position="float"><label>Figure 1</label><caption><p>Graphical output resulting from the input code: <monospace>In [3]: ginsim.show(lrg)</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0001"/></fig><p>In this regulatory graph, the gray boxes denote input and output vertices (nodes). Green arrows and red T arrows respectively denote activatory and inhibitory interactions. A set of rules combining the vertices with the Boolean operators NOT, AND, and OR, which must be consistent with the regulatory graph, then allows the computation of enabled transitions for each network state. These rules have been defined in Cohen et al. (<xref rid="B4" ref-type="bibr">2015</xref>) and are specified within the GINsim model.</p></sec><sec><title>3.2. Identification of stable states</title><p>First, we compute the complete list of logical stable states (or fixpoints) of the model using the Java library <monospace>bioLQM</monospace> (Naldi, <xref rid="B8" ref-type="bibr">2018</xref>). We thus need to convert the GINsim model into bioLQM:</p><p><inline-graphic xlink:href="fphys-09-00787-i0004.jpg"/></p><p>At that stage, <monospace>lrg</monospace> is a Python object representing the model suitable for GINsim, and <monospace>lqm</monospace> is a Python object representing the equivalent model suitable for bioLQM.</p><p>The list of stable states of a bioLQM model is computed as follows:</p><p><inline-graphic xlink:href="fphys-09-00787-i0005.jpg"/></p><p>Here, <monospace>fixpoints</monospace> is a Python list of states. A state is encoded as a Python association table (dictionary), which maps each node of the network to a value.</p><p>For a nice display of the list of stable states, one can use the <monospace>tabulate</monospace> function provided in the <monospace>colomoto_jupyter</monospace> Python library, imported at the beginning of the notebook:</p><p><inline-graphic xlink:href="fphys-09-00787-i0006.jpg"/></p><p>Figure <xref ref-type="fig" rid="F2">2</xref> shows the table as displayed in the notebook. The complete table is given in Supplemental Data.</p><fig id="F2" position="float"><label>Figure 2</label><caption><p>Graphical output resulting from the input code: <monospace>In [6]: tabulate(fixpoints).</monospace></p></caption><graphic xlink:href="fphys-09-00787-g0002"/></fig><p>It results that the model has nine stable states, each corresponding to a row in the table, four of which enable apoptosis (rows with value 1 in fourth column &#x0201c;Apoptosis&#x0201d;). Note that the input node <monospace>DNAdamage</monospace> is also active in each of these four states.</p><p>A state can be visualized on the regulatory graph using GINsim. For example, the third stable state can be displayed using the following command:</p><p><inline-graphic xlink:href="fphys-09-00787-i0007.jpg"/></p><p>The resulting graphics is reproduced in Figure <xref ref-type="fig" rid="F3">3</xref>.</p><fig id="F3" position="float"><label>Figure 3</label><caption><p>Graphical output resulting from the input code: <monospace>In [7]: ginsim.show(lrg, fixpoints[2]).</monospace></p></caption><graphic xlink:href="fphys-09-00787-g0003"/></fig><p>In this graph, the vertices shown in white or orange denote components that are OFF (value 0) or ON (value 1) respectively.</p></sec><sec><title>3.3. Assessing the probabilities to reach alternative attractors using MaBoSS</title><p>MaBoSS (Stoll et al., <xref rid="B13" ref-type="bibr">2017</xref>) is a C++ software enabling the stochastic simulation of Boolean networks by translating them into continuous time Markov processes. Each node activation and inactivation is associated with an <italic>up</italic> and a <italic>down rate</italic>, which specify the propensity of the corresponding transitions. From a given state, the simulation integrates all the possible node updates and derives a probability and a duration for each transition. By default, all transitions are assigned the same rate. For a given set of initial conditions, MaBoSS produces time trajectories and estimates probabilities of model states over the whole simulation time. Steady state distributions can thus be approximated, provided that a sufficient number of sufficiently long simulations have been performed.</p><p>The aim of this section is to reproduce part of the results obtained by Cohen et al. (<xref rid="B4" ref-type="bibr">2015</xref>), which show that a Notch (NICD) gain-of-function together with a p53 loss-of-function prevent reaching a stable apoptotic phenotype.</p><p>First, we convert the bioLQM model to MaBoSS:</p><p><inline-graphic xlink:href="fphys-09-00787-i0008.jpg"/></p><p>The variable <monospace>wt_sim</monospace> is a Python object that gathers both the Boolean network rules and the settings for the simulations, including the transition rates.</p><sec><title>3.3.1. Simulation setup</title><p>The stochastic simulation of Boolean networks with MaBoSS requires the specification of several parameters.</p><sec><title>3.3.1.1. Initial states</title><p>First, a distribution of initial states must be specified: each simulation then starts from a state sampled from this distribution. The distribution is determined by assigning a probability to start in state <monospace>0</monospace> or in state <monospace>1</monospace> to each node. By default, a node has a probability <monospace>1</monospace> to start in state <monospace>0</monospace>.</p><p>The <monospace>maboss</monospace> Python library provides <italic>widgets</italic> to ease the assignment of this initial distribution. The following code enables the definition of a distribution of initial states with all nodes at <monospace>0</monospace>, except <monospace>DNAdamage</monospace> and <monospace>ECMicroenv</monospace> with equiprobable <monospace>0</monospace> and <monospace>1</monospace> values. After pressing &#x0201c;OK,&#x0201d; the notebook cell will be replaced by the actual Python call resulting in equal probabilities for these two nodes to start in active or inactive states.</p><p><inline-graphic xlink:href="fphys-09-00787-i0009.jpg"/></p><p>The notebook will then display the widgets reproduced in Figure <xref ref-type="fig" rid="F4">4</xref>. The selection of nodes and of initial conditions shown in this figure are then translated in the following code:</p><p><inline-graphic xlink:href="fphys-09-00787-i0010.jpg"/></p></sec><sec><title>3.3.1.2. Output nodes</title><p>Using MaBoSS, we can focus on the <italic>output</italic> nodes and ignore the other nodes, which enable us to identify the corresponding phenotypes. This can be done using the following code:</p><p><inline-graphic xlink:href="fphys-09-00787-i0011.jpg"/></p><fig id="F4" position="float"><label>Figure 4</label><caption><p>Graphical output resulting from the input code: <monospace>In [9]: maboss.wg_set_istate(wt_sim)</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0004"/></fig></sec><sec><title>3.3.1.3. Simulation parameters</title><p>The <monospace>update_parameters</monospace> method can be used to specify several parameters for the stochastic simulation algorithm. We show below the complete list of parameters with the values obtained by default when translating a model from GINsim. The method can be called with any subset of these parameters.</p><p>Among the parameter list, <monospace>sample_count</monospace> corresponds to the number of simulations performed to compute statistics, while <monospace>max_time</monospace> is the maximum (simulated) duration of a trajectory. Note that for a proper estimation of probabilities of the stable states, <monospace>max_time</monospace> needs to be long enough for the simulation to reach an asymptotic solution.</p><p><inline-graphic xlink:href="fphys-09-00787-i0012.jpg"/></p></sec></sec><sec><title>3.3.2. Simulation of the wild-type model</title><p>The object <monospace>wt_sim</monospace> represents the input of MaBoSS, encompassing both the network and simulation parameters. The simulations are triggered with the <monospace>.run()</monospace> method and return a Python object for accessing the results.</p><p><inline-graphic xlink:href="fphys-09-00787-i0013.jpg"/></p><p>The resulting object gives access to the output data generated by MaBoSS. It includes notably the mean probability over time for the activity of the output states integrated over all the performed simulations.</p><p>The function <monospace>plot_piechart</monospace> displays proportionally the mean probability of each output state at the <italic>last</italic> time point. Provided the simulation time has been set high enough, this gives an approximation of the probabilities of the stable states reachable from the specified initial conditions.</p><p><inline-graphic xlink:href="fphys-09-00787-i0014.jpg"/></p><p>The resulting graphics is reproduced in Figure <xref ref-type="fig" rid="F5">5</xref>.</p><fig id="F5" position="float"><label>Figure 5</label><caption><p>Graphical output resulting from the input code: <monospace>In [13]: wt_results.plot_piechart()</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0005"/></fig><p>In this chart, a state is described by the set of its active output nodes and is associated to a phenotype. For instance, the &#x0201c;<monospace>&#x0003c;nil&#x0003e;</monospace>&#x0201d; phenotype has all output nodes set to 0, which was referred to as the &#x0201c;homeostatic state&#x0201d; in the original article; in the case of the &#x0201c;<monospace>Apoptosis -- CellCycleArrest</monospace>&#x0201d; phenotype, the two output nodes <monospace>Apoptosis</monospace> and <monospace>CellCycleArrest</monospace> are simultaneously active, while the other output nodes are inactive; the &#x0201c;<monospace>EMT -- CellCycleArrest</monospace>&#x0201d; phenotype denotes cells that have gone through the epithelial to mesenchymal transition (EMT), but did not invade the tissue, hence the output nodes <monospace>Invasion</monospace>, <monospace>Migration</monospace> and <monospace>Metastasis</monospace> are inactive; finally the &#x0201c;<monospace>Migration -- Metastasis -- Invasion -- EMT -- CellCycleArrest</monospace>&#x0201d; phenotype corresponds to a metastatic state, i.e., to cells that went through EMT, invaded the tissue and migrated to a distant site.</p><p>From this plot, we can deduce that, from the specified set of initial conditions, the apoptotic state (orange section), the EMT (purple section) and the metastatic states (green section) can be reached (the proportion of simulations that reached none of these phenotypes correspond to the red section).</p><p>The mean value of each output node during the simulations can be plotted with the following command:</p><p><inline-graphic xlink:href="fphys-09-00787-i0015.jpg"/></p><p>The resulting graphics is reproduced in Figure <xref ref-type="fig" rid="F6">6</xref>.</p><fig id="F6" position="float"><label>Figure 6</label><caption><p>Graphical output resulting from the input code: <monospace>In [14]: wt_results.plot_node_trajectory(until=40)</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0006"/></fig></sec><sec><title>3.3.3. Simulation of double mutant notch++/p53--</title><p>In the original article (Cohen et al., <xref rid="B4" ref-type="bibr">2015</xref>), the authors analyzed the double Notch++/p53-- mutant, i.e., the combination of a Notch gain-of-function combined with a p53 loss-of-function, showing that all trajectories lead to a metastatic state.</p><p>A mutant can be configured by copying the wild-type model, and use the <monospace>mutate</monospace> method to model the desired gains and losses of function:</p><p><inline-graphic xlink:href="fphys-09-00787-i0016.jpg"/></p><p>The modified model can then be simulated exactly as for the wild-type case:</p><p><inline-graphic xlink:href="fphys-09-00787-i0017.jpg"/></p><p><inline-graphic xlink:href="fphys-09-00787-i0018.jpg"/></p><p>The resulting graphics is reproduced in Figure <xref ref-type="fig" rid="F7">7</xref>.</p><fig id="F7" position="float"><label>Figure 7</label><caption><p>Graphical output resulting from the input code: <monospace>In [17]: mut_results.plot_piechart()</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0007"/></fig><p>Using the same parameters as for the wild-type model, all the trajectories obtained for the double mutant model reach the metastatic invasive state exclusively. This suggests that such a double mutation can be responsible for a loss of apoptotic capability of cancer cells.</p></sec></sec><sec><title>3.4. Formal analysis with pint and NuSMV</title><p>In the above section, the conclusion regarding the loss of apoptotic stable state relies on stochastic simulations, which, in general, may not offer a complete coverage of the possible trajectories. Therefore, one may want to formally verify whether the loss of reachable stable apoptosis state is total or not. First, we show how to use Pint (Paulev&#x000e9;, <xref rid="B12" ref-type="bibr">2017</xref>) to predict combinations of mutations which are guaranteed to prevent the activation of apoptosis. Next, we use the software NuSMV (Cimatti et al., <xref rid="B2" ref-type="bibr">2002</xref>) to evaluate formally the Notch++/p53-- double mutant. Finally, we use MaBoSS to assess the efficiency of new combinations of mutations predicted by Pint.</p><sec><title>3.4.1. Formal predictions of mutations from the wild-type model</title><p>Pint implements formal methods that allow deducing combinations of mutations guaranteed to block the reachability of a given state.</p><p>First, we convert the bioLQM model to Pint:</p><p><inline-graphic xlink:href="fphys-09-00787-i0019.jpg"/></p><p>Then, we transfer the initial conditions defined in MaBoSS to the Pint model <monospace>an</monospace>. Like MaBoSS, Pint supports multiple initial values for a single node. However, in contrast to MaBoSS, Pint does not consider probability distributions.</p><p><inline-graphic xlink:href="fphys-09-00787-i0020.jpg"/></p><p>Given a (partial) state specification, Pint provides the method <monospace>oneshot_mutations_for_cut</monospace>, which returns different sets of mutations guaranteed to prevent any trajectory from any possible initial state to reach, <italic>even transiently</italic>, the specified state.</p><p><inline-graphic xlink:href="fphys-09-00787-i0021.jpg"/></p><p>Among the returned mutation sets, one can spot the mutation <monospace>{'NICD': 1, 'p53': 0, 'p73': 0}, which combines a gain-of-function of Notch ('NICD': 1) with a loss-of-function of p53 ('p53': 0), along with a loss-of-function of p73 ('p73': 0</monospace>).</p><p>Noteworthy, forbidding <italic>transient</italic> reachability entails a stronger constraint than just preventing any <italic>stable</italic> state with the specified property. Indeed, some mutations may remove the stability of the specified states, while some trajectories may still traverse these states, but only transiently.</p><p>Therefore, the sets of mutations returned by Pint, albeit correct, might be non-minimal for controlling only the long-term dynamics of the system. Finally, note that the analysis of Pint can give incomplete results. This is due to the technology on which the computation relies (static analysis), which allows addressing very large scale networks.</p></sec><sec><title>3.4.2. Revisiting the notch++/p53-- double mutant</title><p>We will first formally analyse the Notch++/p53-- double mutant to show that asymptotic apoptosis is forbidden, although transient activation of apoptosis node might still be possible.</p><p>One can apply a mutation on a Pint model using the <monospace>lock</monospace> method. A new model is returned with a constant value for the corresponding nodes.</p><p><inline-graphic xlink:href="fphys-09-00787-i0022.jpg"/></p><p>Then, we use the temporal logic CTL (Clarke and Emerson, <xref rid="B3" ref-type="bibr">1982</xref>) to specify formally the dynamical properties to verify. CTL expression can be built using the <monospace>colomoto.temporal_logics</monospace> Python module.</p><p><inline-graphic xlink:href="fphys-09-00787-i0023.jpg"/></p><p>First, the existence of a trajectory leading to a <italic>transient</italic> state where <monospace>Apoptosis</monospace> is active can be specified as follows:</p><p><inline-graphic xlink:href="fphys-09-00787-i0024.jpg"/></p><p><monospace>EF</monospace> is a temporal logic operator that is true if there exists at least one trajectory leading to a state verifying the properties given as argument. Here the property <monospace>S(Apoptosis=1)</monospace> specifies that the state has the node <monospace>Apoptosis</monospace> active.</p><p>Next, the existence of a trajectory leading to a <italic>stable</italic>
<monospace>Apoptosis</monospace> activation can be specified as follows:</p><p><inline-graphic xlink:href="fphys-09-00787-i0025.jpg"/></p><p>Here, <monospace>AG</monospace> enforces that <italic>all</italic> the states reachable via any trajectory have the node <monospace>Apoptosis</monospace> active.</p><p>Finally, we gather these two properties in a Python dictionary for later use:</p><p><inline-graphic xlink:href="fphys-09-00787-i0026.jpg"/></p><p>The adequation of a model with a CTL property can be assessed using a <italic>model-checker</italic> such as NuSMV (Abou-Jaoud&#x000e9; et al., <xref rid="B1" ref-type="bibr">2015</xref>).</p><p>Pint provides a conversion to NuSMV models. By default, the NuSMV model considers any initial state. With the <monospace>skip_init=False</monospace> option, we enforce that the properties are verified only from the initial states defined earlier.</p><p><inline-graphic xlink:href="fphys-09-00787-i0027.jpg"/></p><p>We then add the properties defined above, and ask NuSMV to verify them.</p><p><inline-graphic xlink:href="fphys-09-00787-i0028.jpg"/></p><p>Interestingly, the Notch++/p53-- double mutant can still reach an apoptotic state, but only transiently: the property <monospace>stable-apoptosis</monospace> being false, it is guaranteed that all trajectories eventually lead to stable apoptosis inactivation.</p><p>To complete our analysis, we now consider the triple mutant obtained by adding a loss-of-function of <monospace>p73</monospace>. As predicted by Pint, transient reachability of apoptosis is impossible in this triple mutant. We can use NuSMV to further verify that it is the case, using the following code:</p><p><inline-graphic xlink:href="fphys-09-00787-i0029.jpg"/></p></sec><sec><title>3.4.3. Analysis of formally predicted SNAI2++/ZEB1++/miR203++ triple mutant</title><p>The mutant combinations predicted with Pint should be refined when the aim is to control specifically stable behaviors. In general, given a set of mutations guaranteed to block any transient activation of a node, one may verify whether only a subset of them are sufficient to achieve proper control of the sole stable states.</p><p>We show here how we can take advantage of the Python environment to provide a small program, which, for each subset of mutations of a multiple mutant (here a triple gain-of-function for <monospace>SNAI2</monospace>, <monospace>ZEB1</monospace> and <monospace>miR203</monospace>), performs stochastic simulations with MaBoSS to assess the probabilities to reach the different stable behaviors from the specified set of states.</p><p>The computation can take a couple of minutes. The results are shown in a graphical form (colored pie charts) for each single and double loss-of-function combination. In the pie charts, &#x0201c;Others&#x0201d; regroup states with an individual probability less than 1%, which often correspond to simulated trajectories having not reached an attractor in the given amount of time.</p><p><inline-graphic xlink:href="fphys-09-00787-i0030.jpg"/></p><p>The resulting graphics are reproduced in Figures <xref ref-type="fig" rid="F8">8</xref>&#x02013;<xref ref-type="fig" rid="F13">13</xref>.</p><fig id="F8" position="float"><label>Figure 8</label><caption><p>Graphical output resulting from the input code: <monospace>In [29]</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0008"/></fig><fig id="F9" position="float"><label>Figure 9</label><caption><p>Graphical output resulting from the input code: <monospace>In [29]</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0009"/></fig><fig id="F10" position="float"><label>Figure 10</label><caption><p>Graphical output resulting from the input code: <monospace>In [29]</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0010"/></fig><fig id="F11" position="float"><label>Figure 11</label><caption><p>Graphical output resulting from the input code: <monospace>In [29]</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0011"/></fig><fig id="F12" position="float"><label>Figure 12</label><caption><p>Graphical output resulting from the input code: <monospace>In [29]</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0012"/></fig><fig id="F13" position="float"><label>Figure 13</label><caption><p>Graphical output resulting from the input code: <monospace>In [29]</monospace>.</p></caption><graphic xlink:href="fphys-09-00787-g0013"/></fig><p>Note that only one of the pie charts shows an absence of apoptotic state: the SNAI2++/miR203++ double mutant (Figure <xref ref-type="fig" rid="F13">13</xref>).</p><p>This can be formally verified with NuSMV, as we did for the Notch++/p53-- mutant:</p><p><inline-graphic xlink:href="fphys-09-00787-i0031.jpg"/></p></sec></sec></sec><sec id="s4"><title>4. Anticipated results</title><p>With this protocol, we showed how the Python interface and Jupyter integration of GINsim, bioLQM, MaBoSS, and Pint ease the delineation of sophisticated re-executable computational analyses of qualitative models of biological networks, combining and chaining different software with a unified interface.</p><p>Leaning on the CoLoMoTo Docker image and on the companion Jupyter notebook, we have demonstrated the benefits of this framework by revisiting the analysis of a recent Boolean model of the signaling network controlling cancer cell metastasis. We could reproduce results previously obtained with GINsim and MaBoSS, which demonstrate that the Notch++/p53-- double mutant can suppress the apoptotic outcome. Furthermore, a formal analysis of trajectories with Pint enabled us to deduce novel &#x0201c;anti-apoptotic&#x0201d; combinations of mutations, including a triple mutant that forbids even transient activation of apoptosis, which were subsequently quantified using MaBoSS.</p><p>The predicted of mutations point to potential synergistic genetic interactions underlying uncontrolled tumor proliferation. These combinations would deserve further analysis, in particular regarding potential correlations with specific clinical outcomes. For example, one could check whether the loss of apoptosis triggering correlates with higher tumor grades.</p><p>Similar computational analyses could be performed to predict combinations of perturbations enforcing the existence of a given stable phenotype, e.g., apoptosis, which could then serve as a basis to design novel therapeutic strategies.</p></sec><sec id="s5"><title>Author contributions</title><p>NL, AN, CH, LP implemented the necessary Python modules, their integration in the Jupyter interface, and the Docker image. NL, AN, GS, DT, AZ, LC, LP participated to the general design of the notebook. All authors participated to the writing of the article.</p><sec><title>Conflict of interest statement</title><p>The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.</p></sec></sec></body><back><fn-group><fn id="fn0001"><p><sup>1</sup>Available at <ext-link ext-link-type="uri" xlink:href="http://colomoto.org/notebook">http://colomoto.org/notebook</ext-link></p></fn><fn id="fn0002"><p><sup>2</sup><ext-link ext-link-type="uri" xlink:href="https://docker.com">https://docker.com</ext-link></p></fn><fn id="fn0003"><p><sup>3</sup><ext-link ext-link-type="uri" xlink:href="https://jupyter.org">https://jupyter.org</ext-link></p></fn><fn id="fn0004"><p><sup>4</sup>You may have to use <monospace>pip3</monospace> instead of <monospace>pip</monospace> depending on your configuration.</p></fn></fn-group><fn-group><fn fn-type="financial-disclosure"><p><bold>Funding.</bold> DT and CH acknowledge support from the French Plan Cancer, in the context of the projects CoMET (2014-2017) and SYSTAIM (2015-2019). DT and AN acknowledge support from the French Agence Nationale pour la Recherche (ANR), in the context of the project SCAPIN [ANR-15-CE15-0006-01]. AZ acknowledges support by the Ministry of education and science of Russia (Project No. 14.Y26.31.0022). AZ and LC acknowledge support from ITMO Cancer, in the context of the INVADE grant (Call Systems Biology 2012), and from the EU ERACoSysMed programme, in the context of the COLOSYS project. AZ, LC, and LP acknowledge support from the ANR in context of the ANR-FNR project AlgoReCell [ANR-16-CE12-0034]. LP acknowledge support from Paris Ile-de-France Region (DIM RFSI) and Labex DigiCosme [ANR-11-LABEX-0045-DIGICOSME] operated by ANR as part of the program Investissement d'Avenir Idex Paris-Saclay [ANR-11-IDEX-0003-02].</p></fn></fn-group><sec sec-type="supplementary-material" id="s7"><title>Supplementary material</title><p>The Supplementary Material for this article can be found online at: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fphys.2018.00787/full#supplementary-material">https://www.frontiersin.org/articles/10.3389/fphys.2018.00787/full#supplementary-material</ext-link></p><p>The supplemental data &#x0201c;Notebook&#x0201d; (Data Sheet <xref ref-type="supplementary-material" rid="SM1">1</xref>) includes the source notebook file (<monospace>.ipynb</monospace> extension) which can be uploaded and executed within the Jupyter interface of the CoLoMoTo notebook, using the Docker image <monospace>colomoto/colomoto-docker:2018-05-29</monospace>. We further provide a static HTML file to preview the Jupyter rendering of the notebook, along with the file containing the Boolean model used.</p><p>The supplemental data &#x0201c;Fixpoints&#x0201d; (Data Sheet <xref ref-type="supplementary-material" rid="SM2">2</xref>) gives the complete description of the fixpoints computed by code cell <monospace>In [6]</monospace>.</p><supplementary-material content-type="local-data" id="SM1"><media xlink:href="Data_Sheet_1.ZIP"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material><supplementary-material content-type="local-data" id="SM2"><media xlink:href="Data_Sheet_2.CSV"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material></sec><ref-list><title>References</title><ref id="B1"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Abou-Jaoud&#x000e9;</surname><given-names>W.</given-names></name><name><surname>Monteiro</surname><given-names>P. T.</given-names></name><name><surname>Naldi</surname><given-names>A.</given-names></name><name><surname>Grandclaudon</surname><given-names>M.</given-names></name><name><surname>Soumelis</surname><given-names>V.</given-names></name><name><surname>Chaouiya</surname><given-names>C.</given-names></name><etal/></person-group>. (<year>2015</year>). <article-title>Model checking to assess t-helper cell plasticity</article-title>. <source>Front. Bioeng. Biotechnol.</source>
<volume>2</volume>:<fpage>86</fpage>. <pub-id pub-id-type="doi">10.3389/fbioe.2014.00086</pub-id><pub-id pub-id-type="pmid">25674559</pub-id></mixed-citation></ref><ref id="B2"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Cimatti</surname><given-names>A.</given-names></name><name><surname>Clarke</surname><given-names>E.</given-names></name><name><surname>Giunchiglia</surname><given-names>E.</given-names></name><name><surname>Giunchiglia</surname><given-names>F.</given-names></name><name><surname>Pistore</surname><given-names>M.</given-names></name><name><surname>Roveri</surname><given-names>M.</given-names></name><etal/></person-group> (<year>2002</year>). <article-title>NuSMV 2: An opensource tool for symbolic model checking</article-title>, in <source>Computer Aided Verification, Vol. 2404 of Lecture Notes in Computer Science</source>, eds <person-group person-group-type="editor"><name><surname>Brinksma</surname><given-names>E.</given-names></name><name><surname>Larsen</surname><given-names>K. G.</given-names></name></person-group> (<publisher-loc>Copenhagen</publisher-loc>: <publisher-name>Springer</publisher-name>), <fpage>359</fpage>&#x02013;<lpage>364</lpage>. <pub-id pub-id-type="doi">10.1007/3-540-45657-0_29</pub-id></mixed-citation></ref><ref id="B3"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Clarke</surname><given-names>E. M.</given-names></name><name><surname>Emerson</surname><given-names>E. A.</given-names></name></person-group> (<year>1982</year>). <article-title>Design and synthesis of synchronization skeletons using branching-time temporal logic</article-title>, in <source>Logic of Programs</source>, ed <person-group person-group-type="editor"><name><surname>Kozen</surname><given-names>D.</given-names></name></person-group> (<publisher-loc>New York, NY</publisher-loc>: <publisher-name>Springer</publisher-name>), <fpage>52</fpage>&#x02013;<lpage>71</lpage>. <pub-id pub-id-type="doi">10.1007/BFb0025774</pub-id></mixed-citation></ref><ref id="B4"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cohen</surname><given-names>D. P. A.</given-names></name><name><surname>Martignetti</surname><given-names>L.</given-names></name><name><surname>Robine</surname><given-names>S.</given-names></name><name><surname>Barillot</surname><given-names>E.</given-names></name><name><surname>Zinovyev</surname><given-names>A.</given-names></name><name><surname>Calzone</surname><given-names>L.</given-names></name></person-group> (<year>2015</year>). <article-title>Mathematical modelling of molecular pathways enabling tumour cell invasion and migration</article-title>. <source>PLoS Comput. Biol.</source>
<volume>11</volume>:<fpage>e1004571</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004571</pub-id><pub-id pub-id-type="pmid">26528548</pub-id></mixed-citation></ref><ref id="B5"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Collombet</surname><given-names>S.</given-names></name><name><surname>van Oevelen</surname><given-names>C.</given-names></name><name><surname>Sardina Ortega</surname><given-names>J. L.</given-names></name><name><surname>Abou-Jaoud&#x000e9;</surname><given-names>W.</given-names></name><name><surname>Di Stefano</surname><given-names>B.</given-names></name><name><surname>Thomas-Chollier</surname><given-names>M.</given-names></name><etal/></person-group>. (<year>2017</year>). <article-title>Logical modeling of lymphoid and myeloid cell specification and transdifferentiation</article-title>. <source>Proc. Natl. Acad. Sci. U.S.A.</source>
<volume>114</volume>, <fpage>5792</fpage>&#x02013;<lpage>5799</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1610622114</pub-id><pub-id pub-id-type="pmid">28584084</pub-id></mixed-citation></ref><ref id="B6"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Helikar</surname><given-names>T.</given-names></name><name><surname>Kowal</surname><given-names>B.</given-names></name><name><surname>McClenathan</surname><given-names>S.</given-names></name><name><surname>Bruckner</surname><given-names>M.</given-names></name><name><surname>Rowley</surname><given-names>T.</given-names></name><name><surname>Madrahimov</surname><given-names>A.</given-names></name><etal/></person-group>. (<year>2012</year>). <article-title>The cell collective: toward an open and collaborative approach to systems biology</article-title>. <source>BMC Syst. Biol.</source>
<volume>6</volume>:<fpage>96</fpage>. <pub-id pub-id-type="doi">10.1186/1752-0509-6-96</pub-id><pub-id pub-id-type="pmid">22871178</pub-id></mixed-citation></ref><ref id="B7"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Klarner</surname><given-names>H.</given-names></name><name><surname>Streck</surname><given-names>A.</given-names></name><name><surname>Siebert</surname><given-names>H.</given-names></name></person-group> (<year>2017</year>). <article-title>Pyboolnet: a python package for the generation, analysis and visualization of boolean networks</article-title>. <source>Bioinformatics</source>
<volume>33</volume>, <fpage>770</fpage>&#x02013;<lpage>772</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btw682</pub-id><pub-id pub-id-type="pmid">27797783</pub-id></mixed-citation></ref><ref id="B8"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Naldi</surname><given-names>A.</given-names></name></person-group> (<year>2018</year>). <article-title>bioLQM: a java library for the manipulation and conversion of Logical Qualitative Models of biological networks</article-title>. <source>bioRxiv</source>. <pub-id pub-id-type="doi">10.1101/287011</pub-id></mixed-citation></ref><ref id="B9"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Naldi</surname><given-names>A.</given-names></name><name><surname>Berenguier</surname><given-names>D.</given-names></name><name><surname>Faur&#x000e9;</surname><given-names>A.</given-names></name><name><surname>Lopez</surname><given-names>F.</given-names></name><name><surname>Thieffry</surname><given-names>D.</given-names></name><name><surname>Chaouiya</surname><given-names>C.</given-names></name></person-group> (<year>2009</year>). <article-title>Logical modelling of regulatory networks with GINsim 2.3</article-title>. <source>Biosystems</source>
<volume>97</volume>, <fpage>134</fpage>&#x02013;<lpage>139</lpage>. <pub-id pub-id-type="doi">10.1016/j.biosystems.2009.04.008</pub-id><pub-id pub-id-type="pmid">19426782</pub-id></mixed-citation></ref><ref id="B10"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Naldi</surname><given-names>A.</given-names></name><name><surname>Hernandez</surname><given-names>C.</given-names></name><name><surname>Abou-Jaoud&#x000e9;</surname><given-names>W.</given-names></name><name><surname>Monteiro</surname><given-names>P. T.</given-names></name><name><surname>Chaouiya</surname><given-names>C.</given-names></name><name><surname>Thieffry</surname><given-names>D.</given-names></name></person-group> (<year>2018a</year>). <article-title>Logical modelling and analysis of cellular regulatory networks with GINsim 3.0</article-title>. <source>Front. Physiol.</source>
<volume>9</volume>:<fpage>646</fpage>
<pub-id pub-id-type="doi">10.3389/fphys.2018.00646</pub-id><pub-id pub-id-type="pmid">29971008</pub-id></mixed-citation></ref><ref id="B11"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Naldi</surname><given-names>A.</given-names></name><name><surname>Hernandez</surname><given-names>C.</given-names></name><name><surname>Levy</surname><given-names>N.</given-names></name><name><surname>Stoll</surname><given-names>G.</given-names></name><name><surname>Monteiro</surname><given-names>P. T.</given-names></name><name><surname>Chaouiya</surname><given-names>C.</given-names></name><etal/></person-group> (<year>2018b</year>). <article-title>The CoLoMoTo interactive notebook: accessible and reproducible computational analyses for qualitative biological networks</article-title>. <source>Front. Physiol.</source>
<volume>9</volume>:<fpage>680</fpage>
<pub-id pub-id-type="doi">10.3389/fphys.2018.00680</pub-id><pub-id pub-id-type="pmid">29971009</pub-id></mixed-citation></ref><ref id="B12"><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Paulev&#x000e9;</surname><given-names>L.</given-names></name></person-group> (<year>2017</year>). <article-title>Pint: a static analyzer for transient dynamics of qualitative networks with IPython interface</article-title>, in <source>CMSB 2017 - 15th Conference on Computational Methods for Systems Biology, Vol. 10545 of Lecture Notes in Computer Science</source>, eds <person-group person-group-type="editor"><name><surname>Feret</surname><given-names>J.</given-names></name><name><surname>Koeppl</surname><given-names>H.</given-names></name></person-group> (<publisher-loc>Darmstadt</publisher-loc>: <publisher-name>Springer</publisher-name>), <fpage>309</fpage>&#x02013;<lpage>316</lpage>. <pub-id pub-id-type="doi">10.1007/978-3-319-67471-1_20</pub-id></mixed-citation></ref><ref id="B13"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stoll</surname><given-names>G.</given-names></name><name><surname>Caron</surname><given-names>B.</given-names></name><name><surname>Viara</surname><given-names>E.</given-names></name><name><surname>Dugourd</surname><given-names>A.</given-names></name><name><surname>Zinovyev</surname><given-names>A.</given-names></name><name><surname>Naldi</surname><given-names>A.</given-names></name><etal/></person-group>. (<year>2017</year>). <article-title>MaBoSS 2.0: an environment for stochastic Boolean modeling</article-title>. <source>Bioinformatics</source>
<volume>33</volume>, <fpage>2226</fpage>&#x02013;<lpage>2228</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btx123</pub-id><pub-id pub-id-type="pmid">28881959</pub-id></mixed-citation></ref><ref id="B14"><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zaudo</surname><given-names>J. G. T.</given-names></name><name><surname>Albert</surname><given-names>R.</given-names></name></person-group> (<year>2015</year>). <article-title>Cell fate reprogramming by control of intracellular network dynamics</article-title>. <source>PLoS Comput. Biol.</source>
<volume>11</volume>:<fpage>e1004193</fpage>
<pub-id pub-id-type="doi">10.1371/journal.pcbi.1004193</pub-id><pub-id pub-id-type="pmid">25849586</pub-id></mixed-citation></ref></ref-list></back></article>
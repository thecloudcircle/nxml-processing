
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="product-review"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">18507856</article-id><article-id pub-id-type="pmc">2443380</article-id><article-id pub-id-type="publisher-id">1471-2105-9-250</article-id><article-id pub-id-type="doi">10.1186/1471-2105-9-250</article-id><article-categories><subj-group subj-group-type="heading"><subject>Software</subject></subj-group></article-categories><title-group><article-title>TileQC: A system for tile-based quality control of Solexa data</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Dolan</surname><given-names>Peter C</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>dolanp@science.oregonstate.edu</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Denver</surname><given-names>Dee R</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>denver@cgrb.oregonstate.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Department of Zoology and Center for Genome Research and Biocomputing, Oregon State University, Corvallis, Oregon 97331, USA</aff><pub-date pub-type="collection"><year>2008</year></pub-date><pub-date pub-type="epub"><day>28</day><month>5</month><year>2008</year></pub-date><volume>9</volume><fpage>250</fpage><lpage>250</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/9/250"/><history><date date-type="received"><day>31</day><month>1</month><year>2008</year></date><date date-type="accepted"><day>28</day><month>5</month><year>2008</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2008 Dolan and Denver; licensee BioMed Central Ltd.</copyright-statement><copyright-year>2008</copyright-year><copyright-holder>Dolan and Denver; licensee BioMed Central Ltd.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p><!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Dolan
               C
               Peter
               
               dolanp@science.oregonstate.edu
            </dc:author><dc:title>
            TileQC: A system for tile-based quality control of Solexa data
         </dc:title><dc:date>2008</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 9(1): 250-. (2008)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2008)9:1&#x0003c;250&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>--></license></permissions><abstract><sec><title>Background</title><p>Next-generation DNA sequencing technologies such as Illumina's Solexa platform and Roche's 454 approach provide new avenues for investigating genome-scale questions. However, they also present novel analytical challenges that must be met for their effective application to biological questions.</p></sec><sec><title>Results</title><p>Here we report the availability of <italic>tileQC</italic>, a tile-based quality control system for Solexa data written in the R language. <italic>TileQC </italic>provides a means of recognizing bias and error in Solexa output by graphically representing data generated by flow cell tiles. The data represented in the images is then made available in the R environment for further analysis and automation of error detection.</p></sec><sec><title>Conclusion</title><p><italic>TileQC </italic>offers a highly adaptable and powerful tool for the quality control of Solexa-based DNA sequence data.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>New high-throughput sequencing technologies have arisen over the last decade that produce very large numbers of small sequencing reads (hundreds of thousands to millions), making possible the rapid and inexpensive sequencing and resequencing of genomes [<xref ref-type="bibr" rid="B1">1</xref>]. Despite the excitement generated by these new technologies, they also present substantial challenges that include sequence assembly of millions of short-read fragments (~30 bp for Illumina's Solexa sequencing approach) for de novo sequencing applications [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B3">3</xref>], and the rapid and accurate mapping of short sequence reads to genomic locations for resequencing [<xref ref-type="bibr" rid="B4">4</xref>]. Regardless of the application, one major concern is the ability to effectively characterize the reliabilities of DNA sequence reads deriving from "next-generation" platforms that rely on novel sequencing chemistries such as Solexa's reversible dye-labeled terminator approach. Furthermore, these platforms have abandoned the electrophoresis-based approaches of traditional Sanger sequencing; instead, DNA sequence data is collected in real-time from novel sequencing substrates. Development of quality-control tools for these next-generation DNA sequencing technologies is critical for their effective and accurate application to biological questions.</p><p>Illumina's Solexa sequencing approach consists of a process whereby DNA samples are nebulized to small pieces (~150 bp), then ligated to adapters that bind to linker molecules on the surface of a flow cell where amplified DNA clusters are ultimately sequenced in real-time using Solexa's reversible dye terminator approach [<xref ref-type="bibr" rid="B5">5</xref>]. Each flow cell contains eight lanes onto which DNA molecules from distinct samples can be independently sequenced. Each lane is subdivided into hundreds of tiles (200 tiles in earlier systems, 300 in the most recent system) &#x02013; four images are collected from each tile (one for each of the four base dyes) per sequencing cycle. These tile images constitute the raw data from which DNA sequence information is ultimately derived. Illumina provides a standard front-end analysis pipeline for Solexa data where image analysis is carried out by Firecrest and base calls are made by Bustard. In making a base call, Bustard assigns a quality score (Q-score) to each of the 4 potential nucleotides. These Solexa quality scores range from -40 to 40. They are not equal to Phred quality scores, but are asymptotically identical [<xref ref-type="bibr" rid="B10">10</xref>]. Assuming no ambiguity, the nucleotide with the highest Q-score is called. In an ideal call, there is one +40 and three -40 s. The aggregate quality score (Q<sub>AG</sub>-score) for a base call is the maximum Q-score minus the sum of the remaining three Q-scores.</p><p>After Firecrest and Bustard, Eland provides alignments of individual Solexa sequence reads to a user-defined reference genome. Eland subdivides all sequence reads into eight categories: those where sequences align to unique genomic regions with 0, 1 or 2 mismatches (U0, U1 and U2, respectively), those where sequences align to repetitive regions with 0, 1 or 2 mismatches (R0, R1 and R2, respectively), those where there are three or more mismatches to the reference genome which is defined as the "no match" (NM) category, and those containing two or more bases that were unable to be called (QC).</p><p>Here we provide an openly available software program, <italic>tileQC</italic>, for quality control of Solexa output. <italic>TileQC </italic>relies on the R programming environment and a mySQL database server configured for use by the <italic>tileQC </italic>program. Minor changes in the initialization script allow almost any SQL server to be used. Initial configuration is minimal but flexible enough that a gamut of security options is possible.</p><p><italic>TileQC </italic>features both qualitative and quantitative error detection. The qualitatively oriented functions display the locations of reads on a tile as dots in a square. The read's color and size are coded using Eland categorizations and/or the Q<sub>AG</sub>-score data derived from Bustard. The Eland-coded images represent the data after all other processing has occurred and reveal irregularities arising during any stage of the processing pipeline. Q<sub>AG</sub>-score coded images, on the other hand, are produced from the Bustard output and not only produce a greater range of values than the Eland categorizations, but also have greater resolution, allowing the Solexa output to be analyzed down to the level of individual read cycles. This increased flexibility may obscure errors that are obvious at the Eland level. However, once an error is detected, the Q<sub>AG</sub>-score coding allows for a more accurate assessment of that detected error's underlying cause and/or location.</p><p>The guiding philosophy behind <italic>tileQC</italic>'s qualitative error assessment features is that the researcher's visual pattern recognition is the best way to detect novel errors. Once a new type of error is identified the data extraction features of the program may then be used as a starting point for the programmatic detection and filtration of similar errors.</p></sec><sec><title>Implementation</title><p>The current version (<italic>tileQC </italic>1.0, see Additional file 1) runs on Windows, Linux, and Macintosh operating systems, and requires the programming environment R (version 2.5 or higher) and a properly configured MySQL server (detailed directions for configuration are available at [<xref ref-type="bibr" rid="B8">8</xref>]). The package 'RMySQL' must also be installed within the R environment. (The package 'RMySQL' also requires the package 'DBI', however, installing 'RMySQL' will install the 'DBI' package automatically).</p><p>The R software is available for download [<xref ref-type="bibr" rid="B6">6</xref>] as is the 'RMySQL' package (see the FAQ at [<xref ref-type="bibr" rid="B6">6</xref>] for details on downloading and installing an R package). The database server MySQL is also available for free download [<xref ref-type="bibr" rid="B7">7</xref>]. The <italic>TileQC </italic>system was implemented using the R language: source code, installation instructions and tutorials are available at the <italic>tileQC </italic>website [<xref ref-type="bibr" rid="B8">8</xref>].</p><p>In order to convert text-files into database form (and/or import data directly from the text files) the utilities <italic>sed</italic>, <italic>tr</italic>, <italic>grep</italic>, and <italic>wc </italic>must also be installed. These programs are part of the standard installation on most flavors of Unix (including recent versions of the Macintosh OS). For the win32 platform all the necessary programs are included in GNU utilities for win32 available at [<xref ref-type="bibr" rid="B9">9</xref>].</p></sec><sec><title>Results and Discussion</title><p>Throughout this section all Solexa data used in examples was generated from several of our <italic>Caenorhabditis elegans </italic>genomic DNA runs (unpublished data) on an Illumina Genome Analyzer. All <italic>C. elegans </italic>data were subject to the standard Solexa data analysis pipeline prior to application of <italic>tileQC </italic>tools.</p><p>The first role of <italic>tileQC </italic>is to facilitate the conversion of text based Solexa pipeline output to a more flexible SQL database format (in our case the MySQL database server). If a compatible database does not already exist, <italic>tileQC </italic>will (upon request) create one. Creating a database requires that both the SQL server and the <italic>tileQC </italic>program be properly configured (see [<xref ref-type="bibr" rid="B8">8</xref>] for details). Once the Eland and Q<sub>AG</sub>-score data is in database form the full power of both SQL and R may be brought to bear upon the analysis of that data. Encapsulating the database connection within an R object enables the mundane details to be managed invisibly and frees the researcher to focus on the analysis of the data rather than the mechanics of accessing and manipulating that data. Although supplementary to the package's primary purpose of tile-based quality control (QC), this feature is useful in its own right, and simplifies the mechanics of querying a database containing Solexa data. The standard SQL query language is enhanced by the inclusion of a simple form of expression substitution. Here, for example, we see the extraction of five reads covering the location 332,080 in Chromosome I of the <italic>C. elegans </italic>genome (note the use of #current.table# in the SQL command):</p><p>&#x0003e; celegans$runSQL("select seq, type, locus, muta, mutb from #current.table#</p><p>where locus &#x0003e;= 332048 and locus &#x0003c;= 332080 and segment = 'CHR_I' limit 5")</p><p>seq type locus muta mutb</p><p>1 AATTTTTTGAATTTGCTCGCCGCATTTCGACTTTCT U2 332053 23A 28T</p><p>2 TGAATTTGCTCGCCGAATTTCGACTTTCTTACAATT U2 332060 21T 30G</p><p>3 GAATTTGCTCGCCGAATTTCGACTTTCTGACAATTT U1 332061 20T</p><p>4 GAATTTGCTCGCCGAATTTCGCCTTTCTGACACTTG U2 332061 20T 22A</p><p>5 GAATTTGCTCGCCGAATTTCGACTTTCTTACAATTT U2 332061 20T 29G</p><p>The primary purpose of the package is, of course, tile-based quality control. Often there are patterns in the errors generated during the Solexa sequencing process that become visible when the physical locations of a tile's reads are plotted in colors and sizes that depend upon the category to which they have been assigned by Eland. For this purpose, the <italic>tileQC </italic>package contains functions that are optimized to create such qualitative displays. The visual representation appears on the left and a relative frequency histogram of the number of reads in each Eland category for that tile appears to the right. The researcher may select which categories of read are to be displayed, and even filter the unique reads based upon whether they match the forward strand, the reverse strand, or either. The homogeneity of the Solexa process ensures that, when the machine is functioning properly, the relative frequencies are similar from tile to tile and distributed uniformly across each tile. Major discrepancies in these conditions are immediately discerned by sight.</p><p>Many such discrepancies are small and their effects are limited to one, or (possibly) a few, tiles. Figure <xref ref-type="fig" rid="F1">1</xref> contains examples of three such situations. Often these aberrations have obvious causes such as bubbles in the reagents. However some, such as the rectangle in Figure <xref ref-type="fig" rid="F1">1a</xref>, remain mysterious. Detection of aberrant tiles is particularly important for researchers doing single nucleotide polymorphism (SNP) detection as a single tile with an increased error rate may yield a variety of false positives.</p><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Aberrant Solexa tiles</bold>. This figure displays three distinct types of errors that we have seen occur on Solexa tiles. The image was generated using <italic>plotQTile </italic>with the color-by category option. The tile data was drawn from tiles 129, 85, and 6 respectively &#x02013; all produced from the same lane and run. The error depicted in 1b appears to be caused by a bubble in one of the reagents. This bubble increased the error rate, converting U0 reads into U1 reads. From further investigation we know this occurred during cycle 28. The error depicted in 1c is an area in which no reads at all occurred &#x02013; possibly a problem with the DNA binding to the flow cell, or a smudge on the surface of the flow cell. The error depicted in 1a remains enigmatic.</p></caption><graphic xlink:href="1471-2105-9-250-1"/></fig><p>Tile-plots using Q<sub>AG</sub>-score data allow for a more in depth analysis of the data and a better identification of an error's source, but one must be cautious &#x02013; many types of errors that are clear from the Eland perspective may be difficult to discern from the Q<sub>AG</sub>-score perspective. Sometimes, this can be alleviated by knowing the proper way to transform the Q<sub>AG</sub>-score data into intensity data. Any desired function may be applied to a read's set of Q<sub>AG</sub>-scores and the output of that function is normalized and transformed into an intensity value for the dot corresponding to that read. An example of this process can be seen in Figure <xref ref-type="fig" rid="F2">2</xref> where we see three views of the same tile. The first, Figure <xref ref-type="fig" rid="F2">2a</xref>, uses Eland encoding, whereas Figures <xref ref-type="fig" rid="F2">2b</xref> and <xref ref-type="fig" rid="F2">2c</xref> use two distinct Q<sub>AG</sub>-score encodings. In Figure <xref ref-type="fig" rid="F2">2b</xref> we see the results of applying the function <italic>mean </italic>across the first 32-cycles of a read. The error detected through Eland categorization is invisible in this image, but once again is easily detectable in Figure <xref ref-type="fig" rid="F2">2c</xref> where the minimum of the 32 inter-read Q<sub>AG</sub>-scores are being plotted. The source of the error becomes apparent in Figure <xref ref-type="fig" rid="F2">2d</xref> &#x02013; a <italic>cycleplot </italic>displaying the mean Q<sub>AG</sub>-score for the first 32 cycles of the aberrant tile. We see from this graph, that the problem arises during cycle 28, and Figure <xref ref-type="fig" rid="F3">3</xref>, showing the minimum Q<sub>AG</sub>-scores for a variety of cycles, confirms this interpretation. From this example, one might be tempted to assume that any tile with a cycle whose mean Q<sub>AG</sub>-score drops below a certain value is to be discarded, but it is possible for a non-aberrant tile to have mean Q<sub>AG</sub>-scores this low (as can be seen in Figure <xref ref-type="fig" rid="F4">4</xref>).</p><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Analysis of a single tile using <italic>plotQTile </italic>and <italic>cycleplot</italic></bold>. Here we see three distinct views of tile 47 from Figure 1b. Similar to Figure 1, Figures 2a&#x02013;2c were generated using the function <italic>plotQTile</italic>. Figure 2a uses the color-by category option to display the position of the reads color-coded according to their Eland category. In Figure 2b, the gray intensity values are generated by taking the mean across the first 32 cycles and then normalizing. Figure 2c is similar to 2b, but uses the minimum value across those 32 cycles instead of the mean. Figure 2c shows that some bubbles are visible from a Q<sub>AG</sub>-score perspective, but the contrast between 2b and 2c shows that one must be careful to choose the proper aggregating function. Figure 2d was generated using the <italic>cycleplot </italic>function. It displays the mean Q<sub>AG</sub>-score for cycles 1&#x02013;32 on tile 47, and showcases the ability to detect the source of an error by decomposing the data according to cycle. Here we see the drop in average intensity that occurred during cycle 28.</p></caption><graphic xlink:href="1471-2105-9-250-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Filtering the data by cycle</bold>. This figure is a closer exploration of the bubble on tile 47 analyzed in Figure 2. The <italic>tileQC </italic>system allows the output of the <italic>plotQTile </italic>function to be filtered according to cycle. This graph was generated using <italic>plotQTile </italic>and the <italic>cycles </italic>option. Fig. 3a shows the minimum Q<sub>AG</sub>-score across cycles 1&#x02013;27 by using <italic>cycles = 1:27</italic>, Fig. 3b restricts to the 28<sup>th </sup>cycle by using the <italic>cycle = 28 </italic>option, and Fig. 3c restricts to cycles 28&#x02013;32. From these 3 tiles it is clear that the problem behind the bubble occurred during cycle 28.</p></caption><graphic xlink:href="1471-2105-9-250-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>An erratic tile with believable results</bold>. This image was generated using both <italic>plotTile</italic>, and <italic>cycleplot</italic>. It shows two tiles. One of the tiles (tile 1) has the usual number of reads for a tile from that run, and a typical breakdown of those reads into the Eland categories. Note the number of reads in the U0 and U1 categories in the histogram on the top right. Nevertheless, as can be seen in Figure 4a this tile has widely varying differences amongst the mean intensities (per cycle). The other tile is the familiar tile 47. The intensity levels are much better behaved, except for the problem in cycle 28. But despite this fact, there is an elevation in the U1 levels on tile 47. This is particularly notable because the lowest intensity cycle on tile 47 is at roughly the same level as the lowest found on tile 1.</p></caption><graphic xlink:href="1471-2105-9-250-4"/></fig><p>The visual pattern recognition of a researcher may also discern more subtle and global biases that escape simple numeric detection as in Figures <xref ref-type="fig" rid="F1">1</xref>, <xref ref-type="fig" rid="F2">2</xref>, <xref ref-type="fig" rid="F3">3</xref>, <xref ref-type="fig" rid="F4">4</xref> where we see problematic reads occurring more frequently on the boundary of tiles, or in Figure <xref ref-type="fig" rid="F5">5</xref> where a consistent increase in error rate is associated with reads from the upper left corner of a tile. Once such errors are known to occur, more sophisticated statistical techniques may be used to detect and remove the resulting biases, or at the very least to filter out the offending data.</p><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>Consistent errors across multiple tiles</bold>. Here multiple tiles are shown. In each of the tiles, the upper left corner looks faded. That is due to an increase in error rate that causes reads to be categorized as NM. This is a global issue &#x02013; spanning multiple tiles.</p></caption><graphic xlink:href="1471-2105-9-250-5"/></fig><p>Despite the power of the human visual system, some patterns of error that occur over an entire lane of Solexa data may not be apparent from direct observation of the 200&#x02013;300 QC plots associated with that lane. However, some of these global biases are revealed when summarizing statistics are extracted for each tile and plotted in a single graph. In Figure <xref ref-type="fig" rid="F6">6</xref> the blue dots correspond to the total number of perfect matches in each tile. The tiles within each lane are arranged as two vertical strips. In Figure <xref ref-type="fig" rid="F6">6</xref>, the left strip contains tiles 1&#x02013;100 (with 1 at the top). The right strip contains tiles 101&#x02013;200, but this time 101 is at the bottom and 200 at the top. The droop in the graph is indicative of an error rate that increased as the machine worked its way from the top of the lane to bottom. Aberrant tiles may also become visible from this perspective &#x02013; in this same figure a tile with a particularly low number of unique matches was identified (the dot marked by yellow), and the graph of that tile's Eland categorized reads was superimposed upon a blank section of the summarization graph to illustrate how a bubbled tile may be detected in a summarization graph. We are presently working to improve the summary statistics features of <italic>tileQC </italic>and anticipate more advanced summary reports in future versions of this software.</p><fig position="float" id="F6"><label>Figure 6</label><caption><p><bold>Problems at the boundaries</bold>. Here we see a typical tile (tile 44) superimposed upon a summarization plot. The tile graph was generated using <italic>plotTile</italic>, and the summarization using <italic>plotSummary </italic>with <italic>summary = 2</italic>. The overlap of the two graphs (and the arrow) were produced using R, but are not produced automatically by <italic>tileQC</italic>. The red dots on the top of the tile indicate reads for which Bustard was unable to make a base-call. The dots in the summarization graph denote the number of reads (per tile) in each of the Eland categories. Note the droop in the blue U0 dots.</p></caption><graphic xlink:href="1471-2105-9-250-6"/></fig></sec><sec><title>Conclusion</title><p>The <italic>tileQC </italic>system offers a versatile and powerful tool for the quality control of Solexa-based DNA sequence data. Future challenges include the development of an interface that unifies the task of summarization with that of quantitative testing. This short-term goal (partially completed) will lead to a plug-in style of summarization and analysis that will allow researchers to flexibly encapsulate any desired post-processing or data extraction within a shareable R object. Mid-range goals include an interactive graphical interface for more convenient data exploration as well as a freely available library of analytic modules.</p></sec><sec><title>Availability and requirements</title><p>The <italic>tileQC </italic>system is freely available from [<xref ref-type="bibr" rid="B8">8</xref>]. It requires R (version 2.5 or higher), the R package 'RMySQL' and MySQL (version 5.0 or higher). In order to convert Solexa output from text to database form it requires the Solexa pipeline (up to version 0.3) output files of the form '_prb.txt' and '_eland_result.txt' as well as the utilities <italic>wc, grep, tr</italic>, and <italic>sed</italic>.</p></sec><sec><title>Abbreviations</title><p>The abbreviations are Q<sub>AG</sub>-score: aggregate quality score; SNP: single nucleotide polymorphism.</p></sec><sec><title>Authors' contributions</title><p>PCD contributed to writing the manuscript and developed the software. DRD contributed to writing the manuscript. Both authors have read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>We thank Larry J. Wilhelm and Dana K. Howe for help with developing <italic>tileQC</italic>. Thanks to Chris Sullivan and Mark Dasenko at the OSU Center for Genome Research and Biocomputing for assistance with Solexa data and computing support. Also thanks to Brian Knaus, Dr. Rongkun Shen, and Dr. Albyn Jones for valuable advice. We are grateful to the National Institutes of Health and OSU Computational and Genome Biology Initiative for funding support.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mardis</surname><given-names>ER</given-names></name></person-group><article-title>Anticipating the 1,000 dollar genome</article-title><source>Genome Biol</source><year>2006</year><volume>7</volume><fpage>112</fpage><pub-id pub-id-type="pmid">17224040</pub-id><pub-id pub-id-type="doi">10.1186/gb-2006-7-7-112</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Warren</surname><given-names>RL</given-names></name><name><surname>Sutton</surname><given-names>GG</given-names></name><name><surname>Jones</surname><given-names>SJ</given-names></name><name><surname>Holt</surname><given-names>RA</given-names></name></person-group><article-title>Assembling millions of short DNA sequences using SSAKE</article-title><source>Bioinformatics</source><year>2007</year><volume>23</volume><fpage>500</fpage><lpage>501</lpage><pub-id pub-id-type="pmid">17158514</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btl629</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Jeck</surname><given-names>WR</given-names></name><name><surname>Reinhardt</surname><given-names>JA</given-names></name><name><surname>Baltrus</surname><given-names>DA</given-names></name><name><surname>Hickenbotham</surname><given-names>MT</given-names></name><name><surname>Magrini</surname><given-names>V</given-names></name><name><surname>Mardis</surname><given-names>ER</given-names></name><name><surname>Dangl</surname><given-names>JL</given-names></name><name><surname>Jones</surname><given-names>CD</given-names></name></person-group><article-title>Extending assembly of short DNA sequences to handle error</article-title><source>Bioinformatics</source><year>2007</year><volume>23</volume><fpage>2942</fpage><lpage>2944</lpage><pub-id pub-id-type="pmid">17893086</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btm451</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bentley</surname><given-names>DR</given-names></name></person-group><article-title>Whole-genome re-sequencing</article-title><source>Curr Opin Genet Dev</source><year>2006</year><volume>16</volume><fpage>545</fpage><lpage>552</lpage><pub-id pub-id-type="pmid">17055251</pub-id><pub-id pub-id-type="doi">10.1016/j.gde.2006.10.009</pub-id></citation></ref><ref id="B5"><citation citation-type="other"><article-title>SS DNA Sequencing</article-title><ext-link ext-link-type="uri" xlink:href="http://www.illumina.com/downloads/SS_DNAsequencing.pdf"/></citation></ref><ref id="B6"><citation citation-type="other"><article-title>The R Project for Statistical Computing</article-title><ext-link ext-link-type="uri" xlink:href="http://www.r-project.org/"/></citation></ref><ref id="B7"><citation citation-type="other"><article-title>MySQL</article-title><ext-link ext-link-type="uri" xlink:href="http://www.mysql.com/"/></citation></ref><ref id="B8"><citation citation-type="other"><article-title>TileQC Homepage</article-title><ext-link ext-link-type="uri" xlink:href="http://science.oregonstate.edu/~dolanp/tileqc"/></citation></ref><ref id="B9"><citation citation-type="other"><article-title>Sourceforge: UnxUtils</article-title><ext-link ext-link-type="uri" xlink:href="http://sourceforge.net/projects/unxutils"/></citation></ref><ref id="B10"><citation citation-type="other"><article-title>Understanding Qualities</article-title><ext-link ext-link-type="uri" xlink:href="http://maq.sourceforge.net/qual.shtml"/></citation></ref></ref-list></back></article>



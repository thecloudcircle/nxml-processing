
<article xmlns:ali="http://www.niso.org/schemas/ali/1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Sensors (Basel)</journal-id><journal-id journal-id-type="iso-abbrev">Sensors (Basel)</journal-id><journal-id journal-id-type="publisher-id">sensors</journal-id><journal-title-group><journal-title>Sensors (Basel, Switzerland)</journal-title></journal-title-group><issn pub-type="epub">1424-8220</issn><publisher><publisher-name>MDPI</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">26633393</article-id><article-id pub-id-type="pmc">4721687</article-id><article-id pub-id-type="doi">10.3390/s151229766</article-id><article-id pub-id-type="publisher-id">sensors-15-29766</article-id><article-categories><subj-group subj-group-type="heading"><subject>Article</subject></subj-group></article-categories><title-group><article-title>Throughput Maximization for Sensor-Aided Cognitive Radio Networks with Continuous Energy Arrivals</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Nguyen</surname><given-names>Thanh-Tung</given-names></name><xref ref-type="author-notes" rid="fn1-sensors-15-29766">&#x02020;</xref></contrib><contrib contrib-type="author"><name><surname>Koo</surname><given-names>Insoo</given-names></name><xref rid="c1-sensors-15-29766" ref-type="corresp">*</xref><xref ref-type="author-notes" rid="fn1-sensors-15-29766">&#x02020;</xref></contrib></contrib-group><contrib-group><contrib contrib-type="editor"><name><surname>Reindl</surname><given-names>Leonhard M.</given-names></name><role>Academic Editor</role></contrib></contrib-group><aff id="af1-sensors-15-29766">Department of Electrical/Electronics and Computer Engineering, University of Ulsan, 93-Daehak-ro, Nam-gu, Ulsan 680-749, Korea; <email>nguyenthanhtung@ctu.edu.vn</email></aff><author-notes><corresp id="c1-sensors-15-29766"><label>*</label>Correspondence: <email>iskoo@ulsan.ac.kr</email>; Tel.: +82-52-259-1249; Fax: +82-52-259-1686</corresp><fn id="fn1-sensors-15-29766"><label>&#x02020;</label><p>These authors contributed equally to this work.</p></fn></author-notes><pub-date pub-type="epub"><day>27</day><month>11</month><year>2015</year></pub-date><pub-date pub-type="collection"><month>12</month><year>2015</year></pub-date><volume>15</volume><issue>12</issue><fpage>29782</fpage><lpage>29801</lpage><history><date date-type="received"><day>31</day><month>8</month><year>2015</year></date><date date-type="accepted"><day>19</day><month>11</month><year>2015</year></date></history><permissions><copyright-statement>&#x000a9; 2015 by the authors; licensee MDPI, Basel, Switzerland.</copyright-statement><copyright-year>2015</copyright-year><license><license-p><!--CREATIVE COMMONS-->This article is an open access article distributed under the terms and conditions of the Creative Commons by Attribution (CC-BY) license (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p></license></permissions><abstract><p>We consider a Sensor-Aided Cognitive Radio Network (SACRN) in which sensors capable of harvesting energy are distributed throughout the network to support secondary transmitters for sensing licensed channels in order to improve both energy and spectral efficiency. Harvesting ambient energy is one of the most promising solutions to mitigate energy deficiency, prolong device lifetime, and partly reduce the battery size of devices. So far, many works related to SACRN have considered single secondary users capable of harvesting energy in whole slot as well as short-term throughput. In the paper, we consider two types of energy harvesting sensor nodes (EHSN): Type-I sensor nodes will harvest ambient energy in whole slot duration, whereas type-II sensor nodes will only harvest energy after carrying out spectrum sensing. In the paper, we also investigate long-term throughput in the scheduling window, and formulate the throughput maximization problem by considering energy-neutral operation conditions of type-I and -II sensors and the target detection probability. Through simulations, it is shown that the sensing energy consumption of all sensor nodes can be efficiently managed with the proposed scheme to achieve optimal long-term throughput in the window.</p></abstract><kwd-group><kwd>sensor network</kwd><kwd>sensor scheduling</kwd><kwd>energy harvesting</kwd><kwd>cooperative spectrum sensing</kwd><kwd>cognitive radio network</kwd></kwd-group></article-meta></front><body><sec id="sec1-sensors-15-29766"><title>1. Introduction</title><p>Cognitive radio (CR) technology and green wireless systems have received much attention from the radio research community as promising approaches for improving spectrum utilization and enhancing energy efficiency, respectively. In wireless communications, the demand for broadband wireless spectrum is increasing. Due to the increase in personal wireless mobile devices with a growing number of online interactive applications embedded in them, such as multimedia services, gaming, <italic>etc.</italic>, mobile devices need a broadband wireless spectrum to transfer more data for higher quality of service. There seems to be a serious problem due to the scarcity of the spectrum, but according to the FCC [<xref rid="B1-sensors-15-29766" ref-type="bibr">1</xref>,<xref rid="B2-sensors-15-29766" ref-type="bibr">2</xref>], many frequency bands are under-utilized in temporal and spatial dimensions while others are heavily used. Hence, ineffective spectrum access is the reason for such problems rather than physical scarcity of the spectrum. In this context, in 1999 in his dissertation Mitola first proposed CR technology was to cope with the urgent problem of spectrum scarcity. The proposal is of interest to the radio research community because unlicensed/secondary users (SUs) or cognitive radio users (CUs) can be allowed to exploit under-utilized licensed radio channels simultaneously used by licensed/primary users (PUs) in order to improve the channel performance while avoiding interference with the PUs.</p><p>Along with ineffective usage of spectrum resources, saving energy consumption for mobile devices is also realized as a problem and becomes a key objective in the design of both energy-efficient future hardware and green radio communications [<xref rid="B3-sensors-15-29766" ref-type="bibr">3</xref>]. Future radio hardware designs must also cope with the utilization of renewable energy harvesting sources from the ambient environment such as in the cases of solar, wind, vibration, thermal source, and radio power transmission. Most of the research done on energy harvesting in the context of cognitive radio [<xref rid="B4-sensors-15-29766" ref-type="bibr">4</xref>,<xref rid="B5-sensors-15-29766" ref-type="bibr">5</xref>,<xref rid="B6-sensors-15-29766" ref-type="bibr">6</xref>,<xref rid="B7-sensors-15-29766" ref-type="bibr">7</xref>,<xref rid="B8-sensors-15-29766" ref-type="bibr">8</xref>,<xref rid="B9-sensors-15-29766" ref-type="bibr">9</xref>] has considered different scenarios of single secondary user settings with an energy harvester. In [<xref rid="B4-sensors-15-29766" ref-type="bibr">4</xref>], Sultan investigated access policies for only a single SU with an energy harvester [<xref rid="B4-sensors-15-29766" ref-type="bibr">4</xref>]. At the beginning of each timeslot, based on available energy and possibilities of arrival harvested energy packets, an MDP framework is utilized to determine which action to perform, spectrum sensing, transmission, or sleeping, to maximize long-term throughput. In one study, the problem of maximizing the short-term throughput of an energy harvesting node was investigated [<xref rid="B5-sensors-15-29766" ref-type="bibr">5</xref>]. The authors investigated two related problems pertaining to short-term throughput maximization and the minimization of transmission completion time. The optimum transmission policies are identified under constraints on energy causality and replenishment. A model with discrete packets of energy arrivals is considered. The goal is to find optimum power allocation for maximizing the total data transferred from an energy harvesting node under a deadline constraint. In another study, a secondary user capable of harvesting energy is considered [<xref rid="B6-sensors-15-29766" ref-type="bibr">6</xref>]. This work states that sensing threshold affects the probability of accessing the idle/occupied spectrum of the secondary user and that the secondary user can operate in two modes, the spectrum-limited regime or the energy-limited regime, depending on the energy arrival rate and the expected energy consumption for sensing and spectrum access. Given a fixed sensing duration, this work determines an optimal sensing threshold to maximize the number of successful spectrum accesses in order to maximize expected total throughput of the secondary user. Especially, an extended version of this work [<xref rid="B6-sensors-15-29766" ref-type="bibr">6</xref>] is investigated in a different study [<xref rid="B7-sensors-15-29766" ref-type="bibr">7</xref>]. Throughput maximization for a single secondary user with energy harvesting function is also considered where a pair of sensing threshold and sensing duration is fully studied. The work aims to find both the optimal sensing threshold and the optimal sensing duration for the secondary user such that the shorter sensing duration which still satisfies the collision constraint is preferred for saving energy consumption. This positively affects expected throughput of the secondary user. In [<xref rid="B8-sensors-15-29766" ref-type="bibr">8</xref>], Chen <italic>et al.</italic> considered an information transmitter and aims to find an optimal tradeoff between harvesting RF energy from a power source in the first phase and utilized the harvested energy for transferring information to an information receiver in the second phase such that average information transmission rate is improved. In [<xref rid="B9-sensors-15-29766" ref-type="bibr">9</xref>], Zhang <italic>et al.</italic> considered a system in which information is transferred from a base station to an information-decoding user and is also eavesdropped by an energy harvesting use when the transmitter and receivers are equipped with multi-antenna. The objective is to determine the optimal transmit direction of antennas in beam-forming scheme at the base station for maximizing secrecy rate while the harvested energy requirement for the energy harvesting user is satisfied.</p><p>In [<xref rid="B10-sensors-15-29766" ref-type="bibr">10</xref>], Sensor-Aided Cognitive Radio Network (SACRN) in which sensors are completely powered by batteries and distributed over the network was considered to support cognitive radio networks in detecting the activity of the PU network. SACRN is now considered one of the most appealing approaches to perform cost-effective spectrum sensing in CR. The base station of cognitive radio network examined sensing the results of each sensor and the base station divided sensors into several non-disjoint groups of sensors where global probability of detection is satisfied in each group. The objective is to schedule on/off of each sensor group for cooperative spectrum sensing to detect the absence/presence of a primary user in an energy efficiency manner such that it prolongs the sensor network lifetime. In [<xref rid="B11-sensors-15-29766" ref-type="bibr">11</xref>], Liu <italic>et al.</italic> developed a group-based cooperative MAC protocol (GC-MAC) for selecting multiple SUs to form several teams of SUs where SUs in each team are cooperative in spectrum sensing for one distinct channel until at least one available channel is found. The tradeoff between sensing accuracy and efficiency for two types of channel condition: time-invariant channel and time-varying channel were investigated. In [<xref rid="B10-sensors-15-29766" ref-type="bibr">10</xref>,<xref rid="B11-sensors-15-29766" ref-type="bibr">11</xref>], energy harvesting is not considered and further only short-term throughput is considered.</p><p>In the paper, we consider a SACRN in which sensor nodes capable of harvesting energy are distributed over CR network to support secondary transmitters in sensing the licensed channel. Unlike previous papers related to SACRN [<xref rid="B10-sensors-15-29766" ref-type="bibr">10</xref>,<xref rid="B11-sensors-15-29766" ref-type="bibr">11</xref>], we investigate the maximization of long-term throughput of SACRN by considering the scheduling window composed of multiple time slots as well as continuous energy arrival rate. Further, two types of energy harvesting sensor nodes (EHSN) are considered where type-I sensor nodes will harvest ambient energy in whole slot duration, whereas type-II sensor nodes will only harvest energy after carrying out spectrum sensing. The objective of the paper is to schedule harvested-energies of different sensor nodes for Cooperative Spectrum Sensing (CSS) over the scheduling window to detect availability of licensed channel for SU access as well as to maximize long-term throughput under the constraints of energy-neutral operation and primary user collision. The energy-neutral operation is to guarantee that the energy consumption must be less than the sum of available energy and energy harvested in a particular amount of time, whereas the collision constraint needs to be satisfied to protect primary users from licensed channel access of secondary users.</p><p>The remainder of this paper is organized as follows: in <xref ref-type="sec" rid="sec2-sensors-15-29766">Section 2</xref>, we describe a system model in which a primary network, a cognitive radio network, and a sensor network are the main components In <xref ref-type="sec" rid="sec3-sensors-15-29766">Section 3</xref>, we describe the energy constraints of two types of sensors for spectrum sensing. In <xref ref-type="sec" rid="sec4-sensors-15-29766">Section 4</xref>, we formulate the throughput maximization problem by considering energy-neutral operation conditions of type-I and -II sensors and the target detection probability, and further describe the numerical solving method. In <xref ref-type="sec" rid="sec5-sensors-15-29766">Section 5</xref>, three simulation experiments are presented to show the effectiveness of the proposed scheme. In <xref ref-type="sec" rid="sec6-sensors-15-29766">Section 6</xref>, we draw the conclusions.</p></sec><sec id="sec2-sensors-15-29766"><title>2. Energy Harvesting Sensor-Aided Network Model</title><p>In this section, we will describe different aspects of the operation of a primary network and energy harvesting SACRN. Generally, the sensor network architecture comprises three parts, as shown in <xref ref-type="fig" rid="sensors-15-29766-f001">Figure 1</xref>, where the sensor network is deployed on a primary network and performs spectrum sensing, whereas cognitive radio network requests the sensor network for sensing licensed channels to perceive the channel state.</p><fig id="sensors-15-29766-f001" position="float"><label>Figure 1</label><caption><p>Sensor-Aided Cognitive Radio Network (SACRN).</p></caption><graphic xlink:href="sensors-15-29766-g001"/></fig><sec id="sec2dot1-sensors-15-29766"><title>2.1. Primary Network Model</title><p>We consider a simple primary network setting, as shown in <xref ref-type="fig" rid="sensors-15-29766-f001">Figure 1</xref>, where a licensed channel with a bandwidth <italic>W</italic> operates in a time-slotted fashion with equal slot durations. In previous works, a licensed channel is usually modeled as Markov chain with two states: The idle state and the busy state [<xref rid="B4-sensors-15-29766" ref-type="bibr">4</xref>]. Transition probabilities between two states are assumed to be known such that a secondary user can track the channel state for a spectrum sensing strategy and decide to sense the channel or not based on available energy at the beginning of current timeslot. However, in this paper, we simply assume that the probability of an idle channel at each timeslot can be measured by the cooperation between the sensor network and the cognitive radio network in spectrum sensing and channel access, respectively. We denote <italic>I</italic> &#x02208; {0 (<italic>idle</italic>), 1 (<italic>occupied</italic>)} as the action set of the primary user on the licensed channel and define <italic>P</italic><sub>0</sub> = Pr {<italic>I</italic> = 0} as the probability that the licensed channel is not occupied by the primary user and is available for a SU utilization.</p></sec><sec id="sec2dot2-sensors-15-29766"><title>2.2. Cognitive Radio Network Model</title><p>In Cognitive Radio Network (CRN), as shown in <xref ref-type="fig" rid="sensors-15-29766-f001">Figure 1</xref>, we consider a link established on the licensed channel between two secondary users and assume that data is always available to be transferred from the secondary transmitter to the secondary receiver. Based on sensing results periodically reported from the sensor network, the secondary transmitter will determine whether or not to send data to the secondary receiver over the link. Whenever a report of an idle channel is sent from the sensor network, there exist two possibilities of data transmission. In the case that the licensed channel is actually free under hypothesis <italic>H</italic><sub>0</sub>, the secondary transmitter sends data to the secondary receiver successfully. In this case, the throughput obtained in the whole slot duration over the secondary link can be approximated and is given by <italic>C</italic><sub>0</sub> = <italic>W</italic>log(1 + &#x003b3;), where &#x003b3; refers to the signal-to-noise ratio (SNR) of the transmitting signal measured at the secondary receiver. In practice, however, the amount of transferred data is less than <italic>C</italic><sub>0</sub> due to the sensing time before data transmission. Thus, less sensing time is an important control parameter for optimal throughput. In the simulation, we only study the throughput with a designed value of <italic>C</italic><sub>0</sub> without further considering the SNR at the secondary receiver. In the second case of data transmission, the channel is misunderstood as in an idle state under hypothesis <italic>H</italic><sub>1</sub> due to an incorrect decision from the sensor network. In this case, the secondary transmitter fails to send its data to the secondary receiver for an interference collision with an existing primary user on the channel.</p></sec><sec id="sec2dot3-sensors-15-29766"><title>2.3. Sensor Network Model</title><p>Much recent research states that a single sensor node cannot reliably detect the presence/absence of a primary user due to the effect of multipath fading or shadowing in the transmission environment, which is a crucial issue in spectrum sensing. Cooperation among sensor nodes in spectrum sensing greatly enhances the probability of detection due to the diversity of multiple sensor nodes. For this reason, as with the reference [<xref rid="B10-sensors-15-29766" ref-type="bibr">10</xref>] in which sensor nodes powered by a battery are considered, we investigate a sensor network (SN) deploying multiple EHSNs where all sensor nodes are not only powered by batteries but also have the capability of harvesting energy for self-operation over time. Due to being in different locations in the network, different EHSNs receive different signal-to-noise (SNR) from the primary user and harvest different amounts of energy from the environment.</p><p>Furthermore, cluster formation and scheduling can be utilized to increase network lifetime of sensor neworks [<xref rid="B12-sensors-15-29766" ref-type="bibr">12</xref>,<xref rid="B13-sensors-15-29766" ref-type="bibr">13</xref>] where sensor nodes are grouped into non-disjoint clusters, and each cluster is activated successively to extend the network lifetime. For cluster formation, the residual energy of sensor nodes and SNR to the primary channel can be taken into account such that minimum energy level and minimum SNR of sensor nodes of each cluster can be guaranteed for performing spectrum sensing. Therefore, in the paper we divide the whole sensor network into clusters (cluster formation) and update the clusters if needed. In the cluster formation, the residual energy of sensor nodes and SNR to the primary channel are also taken into account to guarantee minimum sensing performance of each cluster. That is, only sensors that satisfy minimum energy level and minimum SNR are grouped in to clusters by the FC. Therefore, we can assume that minimum energy level and minimum SNR of sensor nodes of each cluster are guaranteed for each sensor to participate in spectrum sensing throughput cluster formation. After SN is decomposed into disjoint clusters, activating only one cluster, instead of all clusters in a SN, significantly reduces energy consumption because deactivated clusters are switched to sleep mode. It is noteworthy that the objective of this paper is to investigate long-term throughput of each active cluster for given scheduling window, and formulate the throughput maximization problem by considering energy-neutral operation conditions of two types of sensors and the target detection probability.</p><p>In addition, the amount of energy consumption must follow some constraints for optimal performance in CSS of each cluster. Correspondingly, CSS among EHSNs in a cluster under the initial energy, distributed amount of energy harvesting, and constraints of energy consumption need to be examined and investigated for long-term throughput of the CRN. Energy scheduling is performed by the FC of the SN, and the designed sensing time for each EHSN in a cluster is therefore assigned before the beginning of spectrum sensing with objective to satisfy the collision threshold constraint and to achieve optimal long-term throughput of the CRN. For each cluster, the FC will control distributed EHSNs in spectrum sensing in an optimal way and frequently report global decisions to the CRN to serve the channel accesses of a pair of secondary users. In this paper, we assume that each cluster of SN is consisted of <italic>V</italic> EHSNs distributed over the network for exploiting the opportunities of accessing the licensed channel accesses of the secondary users.</p></sec></sec><sec id="sec3-sensors-15-29766"><title>3. Energy-Constraint Operation</title><p>This section investigates sensing operation of EHSNs in a cluster under energy constraints based on initial energy, energy harvested during the sensing duration and transmission, and remaining energy. The aim is to determine how much energy each EHSN should spend for CSS in designed timeslots.</p><sec id="sec3dot1-sensors-15-29766"><title>3.1. Spectrum Sensing</title><p>Spectrum sensing plays a crucial role in the procedure of licensed channel access of any SU. In overlay mode, before a SU accesses the licensed channel, a sensor node senses the spectrum for a duration referring to sensing time and denoted by &#x003c4; &#x02208; [0, <italic>T</italic>] where <italic>T</italic> is the slot duration. Two important parameters associated with spectrum sensing results are probability of detection and probability of false alarm, which are the probability that a sensor can detect the presence of a primary user under hypothesis <italic>H</italic><sub>1</sub> and the probability that a sensor does not detect an idle licensed channel under hypothesis <italic>H</italic><sub>0</sub>, respectively. On the one hand, from the PU perspective, spectrum sensing protects PU from collisions in opportunistic channel access of SUs. A good system should have a high probability of detection to reduce collisions between the SU and the PU. For instance, if a higher probability of detection is guaranteed, the primary users are protected better. On the other hand, in the SU perspective, spectrum sensing offers valuable chances to utilize licensed channels, such that a lower probability of false alarm is obtained, and there is a higher chance that SUs can successfully access a licensed channel in the case of PU absence. Moreover, sensing time has tremendous impacts on two sensing parameters. For example, in the case that a sensor node spends more time for spectrum sensing, the probability of detection becomes higher and the probability of false alarm becomes smaller. However, more sensing time means that SUs have less time for data transmission, and that more energy is consumed. It is clearly that time spent for sensing is limited by the amount of available energy in battery. In this paper, we assume that sensing energy is linearly related to sensing time, such that <italic>e<sub>s</sub></italic> = &#x003c4;<italic>P<sub>s</sub></italic> where <italic>P<sub>s</sub></italic> = &#x0211c;<sup>+</sup> is the sensing power of sensor nodes.</p><p>As previously mentioned, licensed channels are organized in a timeslot structure with equal slot durations. To exploit the licensed channel, EHSNs in a cluster perform CSS before SUs transmit data. Energy consumption due to the sensing operation needs to satisfy an energy causality constraint which is mentioned in the next subsection. Let us assume that a sensor node <italic>v</italic> in the cluster carries out spectrum sensing on a licensed channel at timeslot <italic>s</italic>, and denote <inline-formula><mml:math id="mm6"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm7"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as the local probability of detection and the local probability of false alarm extracted from the spectrum sensing results of sensor <italic>v</italic> at timeslot <italic>s</italic> respectively. In this case, the local probability of detection and the local probability of false alarm are given as in a previous study [<xref rid="B14-sensors-15-29766" ref-type="bibr">14</xref>]:
<disp-formula id="FD1"><label>(1)</label><mml:math id="mm8"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:msqrt><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msqrt></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD2"><label>(2)</label><mml:math id="mm9"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>Q</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:msqrt><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msqrt></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm10"><mml:mrow><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac bevelled="true"><mml:mn>1</mml:mn><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi mathvariant="sans-serif">&#x003c0;</mml:mi></mml:mrow></mml:msqrt></mml:mfrac></mml:mstyle><mml:mrow><mml:msubsup><mml:mo>&#x0222b;</mml:mo><mml:mi>x</mml:mi><mml:mi mathvariant="sans-serif">&#x0221e;</mml:mi></mml:msubsup><mml:mrow><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mstyle scriptlevel="+1"><mml:mfrac bevelled="true"><mml:msup><mml:mi>t</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mn>2</mml:mn></mml:mfrac></mml:mstyle></mml:mrow></mml:msup><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> is the complementary distribution function of a standard Gaussian random variable. <inline-formula><mml:math id="mm11"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm12"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>Q</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> are inverse translations of the local probability of false alarm and the local probability of detection, respectively. <inline-formula><mml:math id="mm13"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:msub><mml:mi mathvariant="sans-serif">&#x003b3;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="mm14"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003b3;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:msqrt><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:msqrt></mml:mrow></mml:math></inline-formula>, &#x003b3;<sub><italic>v</italic></sub> indicates the SNR presented at sensor <italic>v</italic> and <italic>f<sub>s</sub></italic> is the sampling frequency (<italic>&#x003be;<sub>v</sub></italic> &#x0003e; 0, <italic>&#x003b4;<sub>v</sub></italic> &#x0003e; 0). &#x003c4;<sub><italic>vs</italic></sub> is the sensing time of the sensor <italic>v</italic> on the licensed channel at timeslot <italic>s</italic>. In Equations (1) and (2), given SNR, if we fix either probability of detection or probability of false alarm and vary sensing time, we can find probability of false alarm or probability of detection, respectively.</p><p>From Equations (1) and (2), the sensing time &#x003c4;<sub><italic>vs</italic></sub> of sensor <italic>v</italic> at timeslot <italic>s</italic> with respect to the local probability of detection and the local probability of false alarm can be derived as follows [<xref rid="B15-sensors-15-29766" ref-type="bibr">15</xref>]:
<disp-formula id="FD3"><label>(3)</label><mml:math id="mm15"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></disp-formula>
</p><p>From Equation (3), it can be inferred that, for the energy issue, we first design the local probability of detection and the local probability of false alarm in order to determine a corresponding sensing time. Therefore, sensing energy, in this case, can be computed.</p><p>We assume that FC uses the &#x0201c;OR&#x0201d; rule in making a global decision in the presence/absence of a PU. In this rule, FC determines timeslot <italic>s</italic> as free if all sensor nodes report the same result that a PU is absent from the channel (<italic>I</italic> = 0) to the FC. In this case, the global probability of detection and the global probability of false alarm at the timeslot <italic>s</italic> are respectively given by:
<disp-formula id="FD4"><label>(4)</label><mml:math id="mm16"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>D</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD5"><label>(5)</label><mml:math id="mm17"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munder><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p></sec><sec id="sec3dot2-sensors-15-29766"><title>3.2. Scheduling Window</title><p>In an activating cluster, based on available energy at beginning of a timeslot and the capability of harvesting energy of each EHSN in the timeslot, FC will calculate how much time each EHSN should spend for CSS to maximize achievable throughput in the timeslot [<xref rid="B10-sensors-15-29766" ref-type="bibr">10</xref>,<xref rid="B11-sensors-15-29766" ref-type="bibr">11</xref>]. However, more than one timeslot can be considered to efficiently manage energy consumption of all sensor nodes in the cluster and further to get more throughput. Therefore, in the paper we consider the scheduling window for more efficient energy consumption of sensor nodes. <xref ref-type="fig" rid="sensors-15-29766-f002">Figure 2</xref> shows an example for the scheduling window that is consisted of <italic>S</italic> time slot when four sensor nodes exist. Here, let us define <italic>S</italic> as the window size (WS). For the scheduling window, energy operation of EHSNs will be managed more effectively by the proposed scheme.</p><fig id="sensors-15-29766-f002" position="float"><label>Figure 2</label><caption><p>Structure of scheduling window and timeslot where scheduling window is consisted of <italic>S</italic> time slots when four sensor nodes exist. &#x003c4;<sub><italic>is</italic></sub> is sensing time of the ith sensor node where <italic>i</italic> = 1, &#x02026;, 4, and <inline-formula><mml:math id="mm19"><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> is transmission time of SU at time slot <italic>s</italic>.</p></caption><graphic xlink:href="sensors-15-29766-g002"/></fig></sec><sec id="sec3dot3-sensors-15-29766"><title>3.3. Evaluation Method</title><p>In this paper, we evaluate the spectrum sensing performance of the considered cluster through achievable throughput of SU. In overlay mode, a SU transmitter can only send its data over a licensed channel after a CSS among EHSNs is completed and the channel is determined to be free. Transmission time of SU in timeslot <italic>s</italic> is mainly affected by the sensing duration of EHSNs, and can be expressed as:
<disp-formula id="FD6"><label>(6)</label><mml:math id="mm20"><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mi>s</mml:mi><mml:mrow><mml:mi>T</mml:mi><mml:mi>r</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm21"><mml:mrow><mml:msubsup><mml:mi>t</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the reporting time of sensor <italic>v</italic> on a licensed channel at timeslot <italic>s</italic>, and &#x003c4;<sub><italic>s</italic></sub> is a period of time at the beginning of timeslot <italic>s</italic> in which all EHSNs must finish sensing the channel and report sensing results to FC, as shown in <xref ref-type="fig" rid="sensors-15-29766-f002">Figure 2</xref>. In this paper, the reporting time is assumed to be fixed.</p><p>Based on the mentioned scheduling window, we now denote <italic>R<sub>s</sub></italic> as achievable throughput of SU in timeslot <italic>s</italic>. The throughput approximation can be calculated by:
<disp-formula id="FD7"><label>(7)</label><mml:math id="mm22"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mi>T</mml:mi></mml:mfrac><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></disp-formula>
where <italic>C</italic><sub>0</sub> is maximal throughput which is mentioned in <xref ref-type="sec" rid="sec2dot2-sensors-15-29766">Section 2.2</xref>. Under hypothesis <italic>H</italic><sub>0</sub>, the expression <inline-formula><mml:math id="mm23"><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> represents the probability that SU can access a licensed channel successfully. The notation <italic>P</italic><sub>0</sub> represents the probability that a timeslot <italic>s</italic> is free on a licensed channel, which depends on traffic of the PU on the considering channel. It is clear that achievable throughput is affected by three factors: sensing capability of EHSNs in SN, channel condition that SU suffers from in SACRN, and channel utilization of the PU in primary network. In this paper, we try to impact the first mentioned factor in the best way.</p><p>Basically, the main problem is to maximize achievable throughput of SACRN in a designed scheduling window, which can be expressed as follows:
<disp-formula id="FD8"><label>(8)</label><mml:math id="mm24"><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mo>&#x000a0;</mml:mo><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>R</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD9"><label>(9)</label><mml:math id="mm25"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mo>.</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>D</mml:mi></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>The constraint expressed by Equation (9) guarantees that the global probability of detection must be greater than a desired threshold in every timeslot of the scheduling window.</p></sec><sec id="sec3dot4-sensors-15-29766"><title>3.4. Energy Harvesting Operation</title><p>Energy efficiency can be evaluated based on initial energy and remaining energy both in each timeslot and in their whole scheduling window. Thus, in this subsection, we first describe the initial energy and energy harvesting operation of EHSNs in the considered cluster, and then consider energy consumption of EHSNs along with energy constraint settings.</p><sec id="sec3dot4dot1-sensors-15-29766"><title>3.4.1. Energy-Harvesting Model</title><p>Although batteries and their corresponding capacities are modeled in different ways in existing works, such as ideal/imperfect battery with a finite/infinite capacity, throughout this paper we merely consider sensor nodes outfitted with an ideal battery having an infinite capacity. Specifically, each sensor node is equipped with an energy harvester. Such sensors will gather continuous flows of ambient energy from sources of continuous energy arrival fashion.</p><p>It is assumed that instantaneous energy arrival rate at time instant <italic>t</italic>, denoted by <italic>g</italic>(<italic>t</italic>), is non-negative and integrable where <italic>g</italic>(<italic>t</italic>) &#x02208; [<italic>g<sub>min</sub></italic>, <italic>g<sub>max</sub></italic>] and <italic>g<sub>min</sub></italic> &#x0003e; 0. Generally, the total energy of an EHSN at time instant <italic>t</italic> comprises the available energy <italic>e</italic><sub>0</sub> in battery at the beginning of a timeslot and the energy harvested by time <italic>t</italic> [<xref rid="B16-sensors-15-29766" ref-type="bibr">16</xref>] as following:
<disp-formula id="FD10"><label>(10)</label><mml:math id="mm29"><mml:mrow><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x0222b;</mml:mo><mml:mn>0</mml:mn><mml:mi>t</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>d</mml:mi><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>Obviously, the total energy is non-decreasing by time and mainly depends on instantaneous energy arrival rate <italic>g</italic>(<italic>t</italic>) which varies in specific ranges as depicted in <xref ref-type="fig" rid="sensors-15-29766-f003">Figure 3</xref>. In the paper, we assume that the energy arrival rate <italic>g</italic>(<italic>t</italic>) varies very gently and slowly between <italic>g<sub>min</sub></italic> and <italic>g<sub>max</sub></italic> per window not time slot. Therefore, the value of <italic>g</italic>(<italic>t</italic>) is calculated at the beginning time of each window and will be maintained as constant for that window. At the beginning time of next window, the value of <italic>g</italic>(<italic>t</italic>) will be calculated again, and be maintained as constant for in the window, and so on. In the paper, we use <italic>g<sub>min</sub></italic> for scheduling the total energy for sensing operations among timeslots in a scheduling window. Throughout the paper, the lower bound of instantaneous energy arrival rate is also used as the energy harvesting rate of sensor node. For this assumption, the minimum cumulative amount of energy at time instant <italic>t</italic> can be simplified as follows:
<disp-formula id="FD11"><label>(11)</label><mml:math id="mm37"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>h</mml:mi></mml:msubsup><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:msub><mml:mi>t</mml:mi></mml:mrow></mml:math></disp-formula>
</p><fig id="sensors-15-29766-f003" position="float"><label>Figure 3</label><caption><p>Example of energy harvesting rate and harvested energy by time.</p></caption><graphic xlink:href="sensors-15-29766-g003"/></fig></sec><sec id="sec3dot4dot2-sensors-15-29766"><title>3.4.2. Type of Sensors</title><p>In a practical sensor network, each sensor node may have a typical type of energy harvester depending on energy source, such as thermal source, solar, vibration, <italic>etc</italic>. In the paper, we consider two types of EHSN: Type-I sensor nodes can harvest ambient energy in the whole slot duration. On the other hand, type-II sensor nodes can only harvest energy after carrying out spectrum sensing. That is, type-II sensor nodes cannot harvest energy during spectrum sensing.</p><p>Let us assume that the activating cluster of SN comprises <italic>N</italic> type-I sensor nodes and <italic>M</italic> type-II sensor nodes, and the number of sensor nodes in the cluster therefore will be <italic>V</italic> = <italic>N</italic> + <italic>M</italic>.</p><p>Generally, let <inline-formula><mml:math id="mm39"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>h</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi mathvariant="sans-serif">&#x0211c;</mml:mi><mml:mo>+</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> denote the amount of harvested energy of a sensor <italic>v</italic> of the cluster at timeslot <italic>s</italic>, where <italic>v</italic> &#x02208; {<italic>n</italic>, <italic>m</italic>}. Specially, depending on energy harvesting rate <italic>g<sub>v</sub></italic>(<italic>t</italic>), a type-I sensor node <italic>n</italic> of the cluster can harvest a constant amount of energy given by <inline-formula><mml:math id="mm44"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>h</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mi>T</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> where <italic>n</italic> &#x02208; [1, <italic>N</italic>] and <italic>g<sub>n</sub></italic>(<italic>t</italic>) = <italic>g<sub>n</sub></italic>, regardless of whether they are performing spectrum sensing or not. At the same time, a type-II sensor node <italic>m</italic> of the cluster gathers a varying amount of energy <inline-formula><mml:math id="mm47"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>h</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, where <italic>m</italic> &#x02208; [1, <italic>M</italic>] and <italic>g<sub>m</sub></italic>(<italic>t</italic>) = <italic>g<sub>m</sub></italic>. This means that if more the sensing time &#x003c4;<sub><italic>ms</italic></sub> is spent, less energy is harvested. Obviously, it is necessary to measure the sensing time of a type-II sensor node in order to know how much energy it harvests. It is worth noting that type-I sensor nodes can operate in Mode II, whereas the type-II sensor nodes cannot operate in Mode I.</p><p>Now, let us further denote <inline-formula><mml:math id="mm51"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> as sensing energy of a sensor <italic>v</italic> on a licensed channel in timeslot <italic>s</italic>. Generally, in a scheduling window, available energy of the sensor <italic>v</italic> at the beginning of timeslot <italic>s</italic> comprises the initial energy at the first timeslot and energy which is harvested and consumed before timeslot <italic>s</italic>. Hence, the available energy of the sensor <italic>v</italic> of the cluster at timeslot <italic>s</italic> can be calculated as:
<disp-formula id="FD12"><label>(12)</label><mml:math id="mm52"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mi>h</mml:mi></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></disp-formula>
</p><p>From the above expression, available energy at the beginning of timeslot <italic>s</italic> of a type-I sensor node <italic>n</italic> and of a type-II sensor node <italic>m</italic> is respectively expressed as follows:
<disp-formula id="FD13"><label>(13)</label><mml:math id="mm53"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>T</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>n</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD14"><label>(14)</label><mml:math id="mm54"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>T</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>m</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm55"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the sensing power of the type-II sensor node <italic>m</italic>.</p></sec><sec id="sec3dot4dot3-sensors-15-29766"><title>3.4.3. Energy-Neutral Operation</title><p>As in [<xref rid="B6-sensors-15-29766" ref-type="bibr">6</xref>,<xref rid="B7-sensors-15-29766" ref-type="bibr">7</xref>], Energy-Neutral Operation (ENO) can be defined as follows: Energy used is less than the energy harvested from the environment. To satisfy ENO, total energy consumption <italic>e<sub>c</sub></italic>(<italic>t</italic>) of each sensor node at given time instant <italic>t</italic> must satisfy the following energy causality constraint:
<disp-formula id="FD15"><label>(15)</label><mml:math id="mm57"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x0222b;</mml:mo><mml:mn>0</mml:mn><mml:mi>t</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>d</mml:mi><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>In the paper, we consider a cluster with two types of EHSN: Type-I sensor node and type-II sensor node. In the following sub-section, we will examine ENO for each type of sensor nodes to find the relationship of sensing time among timeslots in a scheduling window.</p><sec><title>Energy-Neutral Operation of Type-I Sensor Node</title><p>At first, we consider ENO and investigate the energy causality constraint for type-I sensor nodes in a timeslot <italic>s</italic>, which can be expressed as follows:
<disp-formula id="FD16"><label>(16)</label><mml:math id="mm58"><mml:mrow><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x0222b;</mml:mo><mml:mn>0</mml:mn><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:munderover></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x0222b;</mml:mo><mml:mn>0</mml:mn><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:munderover></mml:mstyle><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow></mml:math></disp-formula>
</p><p>This is due to the previously mentioned capability of the type-I sensor node with which it can harvest energy and perform spectrum sensing simultaneously. The constraint Equation (16) can be explained that the energy consumed due to spectrum sensing by time instant <italic>t</italic> cannot exceed the total of available energy in the battery at the beginning of the current timeslot and the amount of energy harvested while sensing the licensed channel by time instant <italic>t</italic>. By substituting Equation (13) into Equation (16), we can rewrite constraint Equation (16) as following:
<disp-formula id="FD17"><label>(17)</label><mml:math id="mm59"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x021d4;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm60"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> means that sensing power is greater than the power of energy harvesting. The right-hand quantity <inline-formula><mml:math id="mm61"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> of Equation (16) indicates the maximum possible sensing time of a type-I sensor, and it depends on available energy at the beginning of the timeslot <italic>s</italic>, <inline-formula><mml:math id="mm62"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, which is given by Equation (13) and <inline-formula><mml:math id="mm63"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>. Accordingly, the constraint Equation (16) for energy causality can be changed to a new constraint Equation (17) in terms of maximum possible sensing time in the scheduling window, which will be utilized as a constraint of throughput maximization formulation in <xref ref-type="sec" rid="sec4-sensors-15-29766">Section 4</xref>.</p><p>Even though a type-I sensor node of the cluster has sufficient energy in the battery, the sensing time of type-I sensor cannot exceed the slot duration. Subsequently, the energy causality constraint for the type-I sensor nodes should be changed by considering the slot duration <italic>T</italic> such that we have:
<disp-formula id="FD18"><label>(18)</label><mml:math id="mm65"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>From Equation (18), we have two cases of energy causality constraints for the type-I sensor node follows as follows.</p><p>In the first case that <inline-formula><mml:math id="mm66"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#x0003c;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>, the maximum sensing time is less than slot duration. The constraint for sensing time at a timeslot <italic>s</italic> is affected by sensing time at previous timeslots and itself also make effect on sensing time at subsequent next timeslots. That is, the relationship among sensing times of timeslots in the scheduling window can be explained by following equation that can be obtained by substituting Equation (13) into Equation (17):
<disp-formula id="FD19"><label>(19)</label><mml:math id="mm67"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>T</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
</p><p>In the second case that if <inline-formula><mml:math id="mm68"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02265;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>, the maximum sensing time is larger than slot duration <italic>T</italic>. In the case, the sensing time is limited to the slot duration, which is expressed as <inline-formula><mml:math id="mm70"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x02264;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. Due to abundant amount of available energy at the beginning of a timeslot <italic>s</italic>, the sensing time in timeslot <italic>s</italic> is not affected by the sensing time at previous timeslots, but it makes effect on sensing times of subsequent timeslots in the scheduling window.</p><p>Particularly for energy efficiency, we need to control the amount of remaining energy of a sensor <italic>n</italic> at timeslot <italic>s</italic>. For this purpose, we can control the amount of energy spent for spectrum sensing in the current timeslots. Now, let <inline-formula><mml:math id="mm71"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi mathvariant="sans-serif">&#x0211c;</mml:mi><mml:mo>+</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> denote the amount of remaining energy of a type-I sensor node <italic>n</italic> at the end of a timeslot <italic>s</italic>. Obviously, this remaining energy also directly refers to available energy for the next timeslot <italic>s</italic> + 1. Thus, the constraint for this case in terms of energy is expressed as follows:
<disp-formula id="FD20"><label>(20)</label><mml:math id="mm73"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm74"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi mathvariant="sans-serif">&#x0211c;</mml:mi><mml:mo>+</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> represents a designed threshold of remaining energy at timeslot <italic>s</italic>. It is noteworthy that for each sensor node we can set up remaining energy threshold either at every timeslot <italic>s</italic> &#x02208; [1, <italic>S</italic>] or at the last timeslot <italic>S</italic> in the scheduling window only.</p><p>In terms of sensing time, the constraint for controlling remaining energy at timeslot <italic>s</italic> also can be expressed as follows:
<disp-formula id="FD21"><label>(21)</label><mml:math id="mm76"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>s</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi>s</mml:mi><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>h</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
</p><p>The first term in constraint Equation (21) represents the total energy consumption for sensing a licensed channel, whereas the second term is the maximum energy that the type-I sensor node can consume in the given time slot. This constraint represents the energy causality for the case of controlling energy.</p></sec><sec><title>Energy-Neutral Operation of Type-II Sensor Node</title><p>For the second case of the operation mode, energy causality and remaining energy constraints for the type-II sensor node <italic>m</italic> of the cluster can be similarly determined as follows:
<disp-formula id="FD22"><label>(22)</label><mml:math id="mm77"><mml:mrow><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x0222b;</mml:mo><mml:mn>0</mml:mn><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:munderover></mml:mstyle><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x0222b;</mml:mo><mml:mn>0</mml:mn><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:munderover></mml:mstyle><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup></mml:mrow></mml:math></disp-formula>
</p><p>In this case, the type-II sensor node cannot harvest energy while performing spectrum sensing. Thus, energy harvesting rate in the sensing duration actually becomes zero, <italic>g<sub>m</sub></italic> = 0. This type of sensor must first consume available energy in the battery for performing spectrum sensing before harvesting energy.</p><p>Combining the constraints Equations (14) and (22) gives us the energy causality constraint, which is further arranged as follows:
<disp-formula id="FD23"><label>(23)</label><mml:math id="mm79"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>&#x021d4;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></disp-formula>
</p><p>Consequently, the energy causality constraint for the type-II sensor node will become:
<disp-formula id="FD24"><label>(24)</label><mml:math id="mm80"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>Like Equation (18), two cases of energy causality constraints for the type-II sensor nodes can be further explained as follows: In the case that <inline-formula><mml:math id="mm81"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#x0003c;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>, the sensor node will be in energy-limited situation. The constraint can also be expended as:
<disp-formula id="FD25"><label>(25)</label><mml:math id="mm82"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:munderover></mml:mstyle><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mi>T</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
</p><p>In the case that <inline-formula><mml:math id="mm83"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>&#x02265;</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:math></inline-formula>, the sensor node has much energy for sensing in timeslot <italic>s</italic>. Similarly to that of the type-I sensor nodes, the sensing time of the sensor must be restricted to slot duration. So, the energy causality constraint for this case is simplified as <inline-formula><mml:math id="mm84"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. In the context of energy, the sensing time at the timeslot <italic>s</italic> is not affected by the sensing times of previous timeslots and will affect those of later timeslots.</p><p>Similarly to the case of the type-I sensor nodes, remaining energy of the type-II sensor nodes can be also manually controlled for various purposes. Let us denote <inline-formula><mml:math id="mm85"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup><mml:mo>&#x02208;</mml:mo><mml:msup><mml:mi mathvariant="sans-serif">&#x0211c;</mml:mi><mml:mo>+</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> as the remaining energy of a sensor <italic>m</italic> at the end of timeslot <italic>s</italic>. Then the constraint for the remaining energy can be expressed as:
<disp-formula id="FD26"><label>(26)</label><mml:math id="mm86"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></disp-formula>
</p><p>In terms of sensing time, this constraint for controlling the remaining energy is expressed by the following equation:
<disp-formula id="FD27"><label>(27)</label><mml:math id="mm87"><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>s</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:mi>s</mml:mi><mml:mi>T</mml:mi><mml:msub><mml:mi>g</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
</p></sec></sec></sec></sec><sec id="sec4-sensors-15-29766"><title>4. Throughput Maximization Formulation</title><p>In this section, we present how to evaluate the spectrum sensing performance of the activating cluster adopting multiple distributed EHSNs. In general, we can say that performance of the cluster of the SN is associated with the SACRN performance, which is represented by a considerable amount of data transferred over a licensed channel within a time duration. Recall the achievable throughput mentioned in <xref ref-type="sec" rid="sec3dot3-sensors-15-29766">Section 3.3</xref>. The total throughput of SACRN is evaluated over timeslots in a scheduling window, such that the optimal throughput will be a summation of optimal achievable throughput obtained in these all timeslots.</p><p>We first continue analyzing the achievable throughput of the SACRN as follows:
<disp-formula id="FD28"><label>(28)</label><mml:math id="mm88"><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>R</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mfrac><mml:mrow><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mi>T</mml:mi></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></disp-formula>
</p><p>The expression can be further expanded as follows:
<disp-formula id="FD29"><label>(29)</label><mml:math id="mm89"><mml:mrow><mml:mi>R</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>T</mml:mi></mml:mfrac><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi>T</mml:mi><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>It is obvious that the first term in Equation (29) gives us a constant value. This is because the parameter <italic>C</italic><sub>0</sub> is a constant that depends on both bandwidth of the licensed channel and SNR presented at the secondary receiver in SACRN, whereas the parameter <italic>P</italic><sub>0</sub> is conditional upon the traffic of PU, but it can be approximately estimated over time. As a result, we can change the problem of throughput maximization to problem of the second term minimization of Equation (29). Thus, our problem is now formulated as follows:
<disp-formula id="FD30"><label>(30)</label><mml:math id="mm90"><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mtext>arg</mml:mtext><mml:mo>&#x000a0;</mml:mo><mml:mtext>min</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mi>U</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mtext>arg</mml:mtext><mml:mo>&#x000a0;</mml:mo><mml:mtext>min</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:msub><mml:mi>U</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>&#x02211;</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>S</mml:mi></mml:munderover></mml:mstyle><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mi>T</mml:mi><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo>+</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
subject to:
<disp-formula id="FD31"><label>(31)</label><mml:math id="mm91"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>D</mml:mi></mml:msubsup><mml:mo>&#x02264;</mml:mo><mml:mn>0</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD32"><label>(32)</label><mml:math id="mm92"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD33"><label>(33)</label><mml:math id="mm93"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02264;</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>P</mml:mi><mml:mi>m</mml:mi><mml:mi>s</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>}</mml:mo></mml:mrow><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD34"><label>(34)</label><mml:math id="mm94"><mml:mrow><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>r</mml:mi></mml:msubsup><mml:mo>&#x02265;</mml:mo><mml:msubsup><mml:mi>e</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo>{</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD35"><label>(35)</label><mml:math id="mm95"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02265;</mml:mo><mml:mn>0</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:mi>v</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mo>{</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>}</mml:mo><mml:mo>,</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD36"><label>(36)</label><mml:math id="mm96"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math id="mm97"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is the target global probability of detection that CSS among EHSNs needs to satisfy the constraint Equation (31) to protect the PU from illegal access of the SU in all timeslots of the scheduling window. The constraints Equations (32) and (33) represent energy-neutral operation for the type-I sensor nodes and the type-II sensor nodes of the cluster at every timeslot in the scheduling window, respectively, which are analyzed in the previous section. In addition, the constraint Equation (34) will control the amount of energy consumption in spectrum sensing at each timeslot, or the whole scheduling window, through controlling RE. Furthermore, the convexity of objective Function (30) is proved in <xref ref-type="app" rid="app1-sensors-15-29766">Appendix A</xref>. For more details, see <xref ref-type="app" rid="app1-sensors-15-29766">Appendix A</xref>.</p><p>Due to the complex diversity of setting constraints in the problem formulation, we could not directly solve the problem by any analyzed method, which may rely on the Karush-Kuhn-Tucker (KKT) condition as in the traditional method. Instead, we utilize an available optimization function called as <italic>&#x0201c;fmincon()&#x0201d;</italic> from the Matlab optimization toolbox to get <inline-formula><mml:math id="mm98"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> from Equation (30). The <italic>&#x0201c;fmincon()&#x0201d;</italic> is based on the active-set algorithm [<xref rid="B17-sensors-15-29766" ref-type="bibr">17</xref>]. The active-set method is two-phase iteration method that provides an estimation of the set of active and inactive constraints at an optimal solution. In the first phase (the feasible phase), the objective is ignored while a feasible point is found for the constraints. In the second phase (the optimality phase), the objective is minimized by generating an iterative sequence of feasible points to converge to the solution while the feasibility is still maintained. Moreover, at each iteration in the second phase for finding a solution, the active set algorithm computes Lagrange multipliers &#x003bb; associated with active constraints, such that the optimal solution is found if all &#x003bb; &#x02265; 0 [<xref rid="B18-sensors-15-29766" ref-type="bibr">18</xref>]. If the solution is not feasible, the algorithm will determine a new solution by adjusting step size parameter from the current solution such that the new solution is a feasible one. The active-set method is motivated by the fact that if the set of active and inactive inequality constraints at an optimal solution were known by the estimation, a solution could be found by solving a simpler equality constrained quadratic programming.</p><p>After getting <inline-formula><mml:math id="mm99"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> through numerical method based on &#x0201c;<italic>fmincon()</italic>&#x0201d; function, we can obtain optimal sensing time by using Equation (3) for sensor <italic>v</italic> of the cluster at the slot <italic>s</italic> that maximizes the throughput of sensor-aided cognitive radio network where <italic>s</italic> = 1, &#x02026;, <italic>S</italic>, and <italic>v</italic> = 1, &#x02026;, <italic>V</italic>.</p></sec><sec id="sec5-sensors-15-29766"><title>5. Performance Evaluations</title><p>In this section, we present simulation results to show the achievable throughput with SACRN under different EHSN energy harvesting scenarios. Throughput of SACRN is examined over 12 timeslots, and various WS is set up as <italic>S</italic> &#x02208; [1, 2, 3, 4, 6, 12] to fit in the 12-timeslots. Recall that, due to different locations of EHSNs, the received SNR of the primary signal, the available energy in the battery, and the energy harvesting rate at an EHSN node can differ from those at other nodes. For simulations, the SNR at an EHSN node is generated by an exponential distribution with the mean &#x003bc;. For energy harvesting rate of a sensor node, a value of <italic>g<sub>min</sub></italic> is generated randomly in (0.2, 0.6), and is set as constant for in the window. The main simulation parameters for the whole SACRN are given in <xref ref-type="table" rid="sensors-15-29766-t001">Table 1</xref>.</p><table-wrap id="sensors-15-29766-t001" position="float"><object-id pub-id-type="pii">sensors-15-29766-t001_Table 1</object-id><label>Table 1</label><caption><p>Main simulation parameters.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Parameters</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Description</th><th align="center" valign="middle" style="border-top:solid thin;border-bottom:solid thin" rowspan="1" colspan="1">Value/Metric</th></tr></thead><tbody><tr><td align="center" valign="middle" rowspan="1" colspan="1"><italic>T</italic></td><td align="center" valign="middle" rowspan="1" colspan="1">slot duration</td><td align="center" valign="middle" rowspan="1" colspan="1">10 ms</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1"><italic>C</italic><sub>0</sub></td><td align="center" valign="middle" rowspan="1" colspan="1">maximal throughput of channel</td><td align="center" valign="middle" rowspan="1" colspan="1">10 kb/slot</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1"><italic>P</italic><sub>0</sub></td><td align="center" valign="middle" rowspan="1" colspan="1">probability of free slot</td><td align="center" valign="middle" rowspan="1" colspan="1">0.4</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1"><italic>f<sub>s</sub></italic></td><td align="center" valign="middle" rowspan="1" colspan="1">sampling frequency of PU signal</td><td align="center" valign="middle" rowspan="1" colspan="1">200 kHz</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1">&#x003bc;</td><td align="center" valign="middle" rowspan="1" colspan="1">mean of SRN distribution</td><td align="center" valign="middle" rowspan="1" colspan="1">&#x02212;10 dB</td></tr><tr><td align="center" valign="middle" rowspan="1" colspan="1"><inline-formula><mml:math id="mm102"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></td><td align="center" valign="middle" rowspan="1" colspan="1">sensing power of sensor nodes</td><td align="center" valign="middle" rowspan="1" colspan="1">15 mW</td></tr><tr><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1"><inline-formula><mml:math id="mm103"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow><mml:mi>d</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">probability of detection threshold</td><td align="center" valign="middle" style="border-bottom:solid thin" rowspan="1" colspan="1">0.9</td></tr></tbody></table></table-wrap><p>For the first experiment, we consider a cluster where four EHSN nodes with different SNRs and energy harvesting rates exist, and no control of remaining energy is considered. Here, &#x0201c;no control of remaining energy&#x0201d; means that the constraint expressed by Equation (34) is not considered in the experiment.</p><p>Initial energy for EHSNs at the beginning of the scheduling window, which means the available energy at the beginning of the first timeslot, is set to 20 &#x000b5;J. Further we consider the two modes. In the Mode I, all four sensor nodes operate as type-I node. On the other hand in the Mode II, all four sensor nodes operate as type-II node. <xref ref-type="fig" rid="sensors-15-29766-f004">Figure 4</xref> shows the throughput of the SACRN during 12 timeslots according to various sizes of scheduling windows. For both of mode operations, the throughput increases as the WS increases. The SACRN also get more throughput when it is operated in Mode I. That is due to the fact that EHSN nodes under Mode II can harvest less energy since they do not harvest energy in the sensing duration. Also, <xref ref-type="fig" rid="sensors-15-29766-f004">Figure 4</xref> shows that the throughput of SACRN comes to a minimum value when the WS is one. The scheduling when WS = 1 is quite similar to the &#x0201c;Myopic scheme&#x0201d; [<xref rid="B4-sensors-15-29766" ref-type="bibr">4</xref>], where a single secondary user only tries to take immediate throughput or reward at a current timeslot without considering other future timeslots for long-term throughput.</p><p><xref ref-type="fig" rid="sensors-15-29766-f005">Figure 5</xref> shows the remaining energy of four sensor nodes according to different window sizes in the Mode I and Mode II respectively. It is observed that the remaining energy of all EHSN nodes when <italic>WS</italic> = 12 differs from those of other cases. Since the sensor node 1 has higher energy harvesting rates and low SNR, the sensor node 1 would not consume as much energy for spectrum sensing. That is, sensor nodes with higher SNR participated in the spectrum sensing more while sensor nodes with lower SNR participated in the spectrum sensing less. Therefore, the remaining of sensor nodes 1 is quite large while the remaining energies of other sensor nodes are low.</p><fig id="sensors-15-29766-f004" position="float"><label>Figure 4</label><caption><p>Throughput of SACRN according to two operation modes when the control of remaining energy is not considered.</p></caption><graphic xlink:href="sensors-15-29766-g004"/></fig><fig id="sensors-15-29766-f005" position="float"><label>Figure 5</label><caption><p>Remaining energy of EHSN nodes after 12 timeslot scheduling when the control of remaining energy is not considered.</p></caption><graphic xlink:href="sensors-15-29766-g005"/></fig><p><xref ref-type="fig" rid="sensors-15-29766-f006">Figure 6</xref> shows the details of remaining energy and sensing time of four EHSN nodes over 12 timeslots for both operation modes when WS = 1 and WS = 12, respectively. When WS = 1, it is clearly observed that all EHSN nodes tried to independently perform CSS in each timeslot without consideration of other timeslots. For example, in the first timeslot EHSN nodes spent much energy for sensing to obtain much throughput, which resulted in less remaining energy. After that, these sensor nodes only relied on harvested energy for sensing in subsequent timeslots. When WS = 12, on the other hand, energy for spectrum sensing was distributed in a better way. The remaining energy at some sensor nodes might reduce gradually as timeslot goes and the remaining energy of sensor node 1 is still high due to the low SNR. Furthermore, the sensing times of EHSN nodes in Mode I are longer than those in Mode II. This decreases the global probability of false alarm and increases throughput while maintaining the global probability of detection above the given threshold.</p><fig id="sensors-15-29766-f006" position="float"><label>Figure 6</label><caption><p>Remaining energy and sensing time of each sensor at each timeslot when WS = 1 and WS = 12, and the control of remaining energy is not considered; (<bold>a</bold>) in the mode I (<bold>b</bold>) in the mode II.</p></caption><graphic xlink:href="sensors-15-29766-g006"/></fig><p>For the second experiment, we utilize the same simulation parameters used in the first experiment, but we consider the control of remaining energy, which is equivalent to the constraint Equation (34). That is, remaining energy of all sensor nodes after 12-timeslot scheduling should be larger than 10 &#x003bc;J. In this case, throughput of SACRN, remaining energy, and sensing time of each EHSN node are observed. At first, <xref ref-type="fig" rid="sensors-15-29766-f007">Figure 7</xref>a shows the achievable throughput of SACRN under the control of remaining energy. When <xref ref-type="fig" rid="sensors-15-29766-f007">Figure 7</xref>a is compared with <xref ref-type="fig" rid="sensors-15-29766-f004">Figure 4</xref>, we can observe that, due to limit of energy consumption on spectrum sensing, the throughput when the control of remaining energy is used is less than that when the control of remaining energy is not considered. <xref ref-type="fig" rid="sensors-15-29766-f007">Figure 7</xref>b shows that the remaining energies of EHSN nodes after 12-timeslot scheduling are well kept at 10 &#x003bc;J as required.</p><fig id="sensors-15-29766-f007" position="float"><label>Figure 7</label><caption><p>Throughput of SACRN and remaining energy of each EHSN node in two modes when remaining energy is controlled. (<bold>a</bold>) The achievable throughput of SACRN under the control of remaining energy; (<bold>b</bold>) The remaining energy of EHSN nodes under the control of remaining energy.</p></caption><graphic xlink:href="sensors-15-29766-g007"/></fig><p><xref ref-type="fig" rid="sensors-15-29766-f008">Figure 8</xref> shows remaining energy and sensing time of EHSNs over timeslots, similarly to the case of no control of remaining energy shown in <xref ref-type="fig" rid="sensors-15-29766-f006">Figure 6</xref>. <xref ref-type="fig" rid="sensors-15-29766-f008">Figure 8</xref>a shows remaining energy in Mode I and Mode II when WS = 1. When WS = 1, all EHSNs tried to maximize throughput in each slot such that they consumed much energy for spectrum sensing at the first timeslot, and remaining energy of all EHSNs was immediately reduced to 10 &#x003bc;J. <xref ref-type="fig" rid="sensors-15-29766-f008">Figure 8</xref>b shows that energy can be used in better way when WS = 12. When WS = 12, remaining energy decreases gradually as timeslot goes, which implies that energy is shared reasonably and distributed among timeslots within the window. Therefore, we can achieve more throughput of SACRN when WS = 12. <xref ref-type="fig" rid="sensors-15-29766-f008">Figure 8</xref> also shows that the sensing time of EHSNs in Mode I is longer than that in Mode II due to more harvesting energy, similarly to observation of the first experiment.</p><fig id="sensors-15-29766-f008" position="float"><label>Figure 8</label><caption><p>Remaining and sensing time of EHSNs over 12 timeslots when remaining energy is controlled. (<bold>a</bold>) Remaining energy and sensing time of EHSNs in Mode I and Mode II when WS = 1; (<bold>b</bold>) Remaining energy and sensing time of EHSNs in Mode I and Mode II when WS = 12.</p></caption><graphic xlink:href="sensors-15-29766-g008a"/><graphic xlink:href="sensors-15-29766-g008b"/></fig><p>In the last experiment, we consider SACRN in which three type-I sensor nodes (<italic>N</italic> = 3) and three type-II sensor nodes (<italic>M</italic> = 3) coexist. Initial energy of all EHSNs was also set to 20 &#x003bc;J. Four remaining energy constraints after 12 timeslots are considered, and are given by 15 &#x003bc;J, 17 &#x003bc;J, 19 &#x003bc;J and 21 &#x003bc;J, respectively.</p><p><xref ref-type="fig" rid="sensors-15-29766-f009">Figure 9</xref> shows the throughput of SACRN according to WS for different remaining energy constraints. It is observed that SACRN achieves higher throughput when less remaining energy constraint is required since more energy can be spent for spectrum sensing, which results in lower false alarm probability and consequently more throughput. <xref ref-type="fig" rid="sensors-15-29766-f009">Figure 9</xref> also show that the effect of WS on throughput is more significant when less remaining energy constraint is required. When remaining energy constraint is given as 21 &#x003bc;J, which is higher than the initial energy, EHSN nodes try to accumulate energy from environment rather than spending energy for spectrum sensing such that the throughput is little improved by increasing WS.</p><fig id="sensors-15-29766-f009" position="float"><label>Figure 9</label><caption><p>Throughput of SACRN according to WS for different remaining energy constraints.</p></caption><graphic xlink:href="sensors-15-29766-g009"/></fig></sec><sec id="sec6-sensors-15-29766"><title>6. Conclusions</title><p>In this paper, cognitive radio technology and green wireless systems are discussed with the objective of maximizing total achievable throughput of SACRN under the limitation of energy supply and energy harvesting scenarios. We first consider two operation modes for different types of EHSNs from ambient energy harvesting, and then investigate the energy constraints for spectrum sensing operations in a scheduling window. We also examine aspects of remaining energy in the scheduling window to take the control of sensing energy consumption into account. We present the convex function formulation-based sensor scheduling method under several energy scenarios in the energy harvesting sensor network to maximize the throughput. The simulation results indicate that energy harvesting sensor nodes need to be scheduled over more timeslots for better throughput in an energy harvesting scenario. The size of scheduling window may depend on practical conditions, such as computational complexity and computing capability of devices. However, the SACRN can achieve better throughput when factors that affect sensor scheduling and energy distribution, such as energy harvesting rate can be estimated.</p></sec></body><back><ack><title>Acknowledgments</title><p>This work was supported by the National Research Foundation (NRF) of Korea funded by the MEST (Nos. NRF-2013R1A2A2A05004535 and NRF-2015R1A2A1A15053452).</p></ack><notes><title>Author Contributions</title><p>Thanh-Tung Nguyen conceived the idea, performed the experiments, and wrote the paper. Insoo Koo supervised the research, critically reviewed and revised the paper. Thanh-Tung Nguyen and Insoo Koo designed the experiments and analyzed the data.</p></notes><notes><title>Conflicts of Interest</title><p>The authors declare no conflict of interest.</p></notes><app-group><app id="app1-sensors-15-29766"><title>Appendix A</title><p>To prove the convexity of objective Function (30), let&#x02019;s begin to show the first and second derivatives of Q function as follows:
<disp-formula id="FD37"><label>(A1)</label><mml:math id="mm105"><mml:mrow><mml:mfrac><mml:mrow><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi mathvariant="sans-serif">&#x003c0;</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD38"><label>(A2)</label><mml:math id="mm106"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mi>x</mml:mi><mml:mrow><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi mathvariant="sans-serif">&#x003c0;</mml:mi></mml:mrow></mml:msqrt></mml:mrow></mml:mfrac><mml:mi>e</mml:mi><mml:mi>x</mml:mi><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>Using Equation (3), we can obtain the first and second derivatives of &#x003c4;<sub><italic>vs</italic></sub> with respect to <italic>x<sub>vs</sub></italic> and <italic>y<sub>vs</sub></italic> as follows:
<disp-formula id="FD39"><label>(A3)</label><mml:math id="mm110"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD40"><label>(A4)</label><mml:math id="mm111"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mn>2</mml:mn><mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD41"><label>(A5)</label><mml:math id="mm112"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD42"><label>(A6)</label><mml:math id="mm113"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003be;</mml:mi><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="sans-serif">&#x003b4;</mml:mi><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
</p><p>Using Equation (4), we can obtain the first and second derivatives of <inline-formula><mml:math id="mm114"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> with respect to <italic>x<sub>vs</sub></italic> as follows:
<disp-formula id="FD43"><label>(A7)</label><mml:math id="mm115"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>d</mml:mi><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>z</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD44"><label>(A8)</label><mml:math id="mm116"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>d</mml:mi><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mstyle displaystyle="true"><mml:munder><mml:mo>&#x0220f;</mml:mo><mml:mrow><mml:mi>z</mml:mi><mml:mo>&#x02260;</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder></mml:mstyle><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>Q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>Similarly, we can obtain <inline-formula><mml:math id="mm117"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>D</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="mm118"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>D</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>z</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&#x0003c;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> using Equation (5).</p><p>Therefore, we can obtain the first and second derivatives of <italic>U</italic> with respect to <italic>y<sub>vs</sub></italic> and <italic>x<sub>vs</sub></italic> as follows:
<disp-formula id="FD45"><label>(A9)</label><mml:math id="mm119"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:mi>U</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD46"><label>(A10)</label><mml:math id="mm120"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mi>U</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x000a0;</mml:mo><mml:mo>&#x02200;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD47"><label>(A11)</label><mml:math id="mm121"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:mi>U</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD48"><label>(A12)</label><mml:math id="mm122"><mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mi>U</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:msub><mml:mi>C</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn>2</mml:mn><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mfrac><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mo>&#x02202;</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="sans-serif">&#x003c4;</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
</p><p>From Equations (A9) and (A10), therefore we know that <italic>U</italic> is a decreasing and convex function with respect to <italic>y<sub>vs</sub></italic>. The second derivative of <italic>U</italic> with respect to <italic>x<sub>vs</sub></italic> is always positive if the second derivative of <inline-formula><mml:math id="mm123"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> with respect to <italic>x<sub>vs</sub></italic> is positive. Since <inline-formula><mml:math id="mm124"><mml:mrow><mml:msubsup><mml:mi>P</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>s</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> is always given less than 0.5, we get <italic>x<sub>vs</sub></italic> &#x0003e; 0. Since <italic>x<sub>vs</sub></italic> &#x0003e; 0, the second derivative of <inline-formula><mml:math id="mm125"><mml:mrow><mml:msubsup><mml:mi>Q</mml:mi><mml:mi>s</mml:mi><mml:mi>F</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> with respect to <italic>x<sub>vs</sub></italic> is always positive. Therefore, the second derivative of <italic>U</italic> with respect to <italic>x<sub>vs</sub></italic> is always positive. Therefore, <italic>U</italic> is a convex function of <italic>x<sub>vs</sub></italic>.</p></app></app-group><ref-list><title>References</title><ref id="B1-sensors-15-29766"><label>1.</label><element-citation publication-type="book">
<source>Report of the Spectrum Efficiency Working Group</source>
<comment>Technical Report</comment>
<publisher-name>Federal Communications Commission</publisher-name>
<publisher-loc>Washington, DC, USA</publisher-loc>
<year>2002</year>
</element-citation></ref><ref id="B2-sensors-15-29766"><label>2.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Haykin</surname><given-names>S.</given-names></name></person-group>
<article-title>Cognitive radio: Brain-empowered wireless communications</article-title>
<source>IEEE J. Sel. Areas Commun.</source>
<year>2005</year>
<volume>23</volume>
<fpage>201</fpage>
<lpage>220</lpage>
<pub-id pub-id-type="doi">10.1109/JSAC.2004.839380</pub-id>
</element-citation></ref><ref id="B3-sensors-15-29766"><label>3.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Karmokar</surname><given-names>A.</given-names></name><name><surname>Anpalagan</surname><given-names>A.</given-names></name></person-group>
<article-title>Green computing and communication techniques for future wireless systems and networks</article-title>
<source>IEEE Potentials</source>
<year>2013</year>
<volume>32</volume>
<fpage>38</fpage>
<lpage>42</lpage>
<pub-id pub-id-type="doi">10.1109/MPOT.2013.2245946</pub-id>
</element-citation></ref><ref id="B4-sensors-15-29766"><label>4.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Sultan</surname><given-names>A.</given-names></name></person-group>
<article-title>Sensing and transmit energy optimization for an energy harvesting cognitive radio</article-title>
<source>IEEE Wirel. Commun. Lett.</source>
<year>2012</year>
<volume>1</volume>
<fpage>500</fpage>
<lpage>503</lpage>
<pub-id pub-id-type="doi">10.1109/WCL.2012.071612.120304</pub-id>
</element-citation></ref><ref id="B5-sensors-15-29766"><label>5.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Tutuncuoglu</surname><given-names>K.</given-names></name><name><surname>Yener</surname><given-names>A.</given-names></name></person-group>
<article-title>Optimum transmission policies for battery limited energy harvesting nodes</article-title>
<source>IEEE Trans. Wirel. Commun.</source>
<year>2012</year>
<volume>11</volume>
<fpage>1180</fpage>
<lpage>1189</lpage>
<pub-id pub-id-type="doi">10.1109/TWC.2012.012412.110805</pub-id>
</element-citation></ref><ref id="B6-sensors-15-29766"><label>6.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Park</surname><given-names>S.</given-names></name><name><surname>Kim</surname><given-names>H.</given-names></name><name><surname>Hong</surname><given-names>D.</given-names></name></person-group>
<article-title>Cognitive radio networks with energy harvesting</article-title>
<source>IEEE Trans. Wirel. Commun.</source>
<year>2013</year>
<volume>12</volume>
<fpage>1386</fpage>
<lpage>1397</lpage>
<pub-id pub-id-type="doi">10.1109/TWC.2013.012413.121009</pub-id>
</element-citation></ref><ref id="B7-sensors-15-29766"><label>7.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Chung</surname><given-names>W.</given-names></name><name><surname>Park</surname><given-names>S.</given-names></name><name><surname>Lim</surname><given-names>S.</given-names></name><name><surname>Hong</surname><given-names>D.</given-names></name></person-group>
<article-title>Spectrum sensing optimization for energy-harvesting cognitive radio systems</article-title>
<source>IEEE Trans. Wirel. Commun.</source>
<year>2014</year>
<volume>13</volume>
<fpage>2601</fpage>
<lpage>2613</lpage>
</element-citation></ref><ref id="B8-sensors-15-29766"><label>8.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Chen</surname><given-names>X.</given-names></name><name><surname>Yuen</surname><given-names>C.</given-names></name><name><surname>Zhang</surname><given-names>Z.</given-names></name></person-group>
<article-title>Wireless energy and information transfer tradeoff for limited feedback multiantenna systems with energy beamforming</article-title>
<source>IEEE Trans. Veh. Technol.</source>
<year>2014</year>
<volume>62</volume>
<fpage>407</fpage>
<lpage>412</lpage>
<pub-id pub-id-type="doi">10.1109/TVT.2013.2274800</pub-id>
</element-citation></ref><ref id="B9-sensors-15-29766"><label>9.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Zhang</surname><given-names>J.</given-names></name><name><surname>Yuen</surname><given-names>C.</given-names></name><name><surname>Wen</surname><given-names>C.K.</given-names></name><name><surname>Jin</surname><given-names>S.</given-names></name><name><surname>Wong</surname><given-names>K.K.</given-names></name><name><surname>Zhu</surname><given-names>H.</given-names></name></person-group>
<article-title>Large system secrecy Rate analysis for SWIPT MIMO wiretap channels</article-title>
<source>IEEE Trans. Inf. Forensics Secur.</source>
<year>2015</year>
<volume>11</volume>
<fpage>74</fpage>
<lpage>85</lpage>
<pub-id pub-id-type="doi">10.1109/TIFS.2015.2477050</pub-id>
</element-citation></ref><ref id="B10-sensors-15-29766"><label>10.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Cheng</surname><given-names>P.</given-names></name><name><surname>Deng</surname><given-names>R.</given-names></name><name><surname>Chen</surname><given-names>J.</given-names></name></person-group>
<article-title>Energy-efficient cooperative spectrum sensing in sensor-aided cognitive radio networks</article-title>
<source>IEEE Wirel. Commun.</source>
<year>2012</year>
<volume>19</volume>
<fpage>100</fpage>
<lpage>105</lpage>
<pub-id pub-id-type="doi">10.1109/MWC.2012.6393524</pub-id>
</element-citation></ref><ref id="B11-sensors-15-29766"><label>11.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Liu</surname><given-names>Y.</given-names></name><name><surname>Xie</surname><given-names>S.</given-names></name><name><surname>Yu</surname><given-names>R.</given-names></name><name><surname>Zhang</surname><given-names>Y.</given-names></name><name><surname>Yuen</surname><given-names>C.</given-names></name></person-group>
<article-title>An efficient MAC protocol with selective grouping and cooperative sensing in cognitive radio networks</article-title>
<source>IEEE Trans. Veh. Technol.</source>
<year>2013</year>
<volume>62</volume>
<fpage>3928</fpage>
<lpage>3941</lpage>
<pub-id pub-id-type="doi">10.1109/TVT.2013.2258952</pub-id>
</element-citation></ref><ref id="B12-sensors-15-29766"><label>12.</label><element-citation publication-type="confproc">
<person-group person-group-type="author"><name><surname>Huang</surname><given-names>Z.</given-names></name><name><surname>Cheng</surname><given-names>Y.</given-names></name><name><surname>Liu</surname><given-names>W.</given-names></name></person-group>
<article-title>A novel energy-efficient routing algorithm in multi-sink wireless sensor networks</article-title>
<source>Proceedings of the 2011 IEEE 10th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom)</source>
<conf-loc>Changsha, China</conf-loc>
<conf-date>16&#x02013;18 November 2011</conf-date>
<fpage>1646</fpage>
<lpage>1651</lpage>
</element-citation></ref><ref id="B13-sensors-15-29766"><label>13.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Deng</surname><given-names>R.</given-names></name><name><surname>Chen</surname><given-names>J.</given-names></name><name><surname>Yuen</surname><given-names>C.</given-names></name><name><surname>Cheng</surname><given-names>P.</given-names></name><name><surname>Sun</surname><given-names>Y.</given-names></name></person-group>
<article-title>Energy-efficient cooperative spectrum sensing by optimal scheduling in sensor-aided cognitive radio networks</article-title>
<source>IEEE Trans. Veh. Technol.</source>
<year>2012</year>
<volume>61</volume>
<fpage>716</fpage>
<lpage>725</lpage>
<pub-id pub-id-type="doi">10.1109/TVT.2011.2179323</pub-id>
</element-citation></ref><ref id="B14-sensors-15-29766"><label>14.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Liang</surname><given-names>Y.C.</given-names></name><name><surname>Zeng</surname><given-names>Y.</given-names></name><name><surname>Peh</surname><given-names>E.C.Y.</given-names></name><name><surname>Hoang</surname><given-names>A.T.</given-names></name></person-group>
<article-title>Sensing-throughput tradeoff for cognitive radio networks</article-title>
<source>IEEE Trans. Wirel. Commun.</source>
<year>2008</year>
<volume>7</volume>
<fpage>1326</fpage>
<lpage>1337</lpage>
<pub-id pub-id-type="doi">10.1109/TWC.2008.060869</pub-id>
</element-citation></ref><ref id="B15-sensors-15-29766"><label>15.</label><element-citation publication-type="journal">
<person-group person-group-type="author"><name><surname>Eryigit</surname><given-names>S.</given-names></name><name><surname>Bayhan</surname><given-names>S.</given-names></name><name><surname>Tugcu</surname><given-names>T.</given-names></name></person-group>
<article-title>Energy-efficient multichannel cooperative sensing scheduling with heterogeneous channel conditions for cognitive radio networks</article-title>
<source>IEEE Trans. Veh. Technol.</source>
<year>2013</year>
<volume>62</volume>
<fpage>2690</fpage>
<lpage>2699</lpage>
<pub-id pub-id-type="doi">10.1109/TVT.2013.2247070</pub-id>
</element-citation></ref><ref id="B16-sensors-15-29766"><label>16.</label><element-citation publication-type="confproc">
<person-group person-group-type="author"><name><surname>Varan</surname><given-names>B.</given-names></name><name><surname>Tutuncuoglu</surname><given-names>K.</given-names></name><name><surname>Yener</surname><given-names>A.</given-names></name></person-group>
<article-title>Energy harvesting communications with continuous energy arrivals</article-title>
<source>Proceedings of the Information Theory and Applications Workshop (ITA)</source>
<conf-loc>San Diego, CA, USA</conf-loc>
<conf-date>9&#x02013;14 February 2014</conf-date>
<fpage>1</fpage>
<lpage>10</lpage>
</element-citation></ref><ref id="B17-sensors-15-29766"><label>17.</label><element-citation publication-type="webpage">
<article-title>Optimization Toolbox&#x02122; User&#x02019;s Guide</article-title>
<comment>Available online: <ext-link ext-link-type="uri" xlink:href="www.mathworks.com/help/pdf_doc/optim/optim_tb.pdf">www.mathworks.com/help/pdf_doc/optim/optim_tb.pdf</ext-link></comment>
<date-in-citation>(accessed on 2 September 2015)</date-in-citation>
</element-citation></ref><ref id="B18-sensors-15-29766"><label>18.</label><element-citation publication-type="confproc">
<person-group person-group-type="author"><name><surname>Harkegard</surname><given-names>O.</given-names></name></person-group>
<article-title>Efficient active set algorithms for solving constrained least squares problems in aircraft control allocation</article-title>
<source>Proceedings of the 41st IEEE Conference on Decision and Control</source>
<conf-loc>Anchorage, AK, USA</conf-loc>
<conf-date>10&#x02013;13 December 2002</conf-date>
<volume>Volume 2</volume>
<fpage>1295</fpage>
<lpage>1300</lpage>
</element-citation></ref></ref-list></back></article>